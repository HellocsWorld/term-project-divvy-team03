{
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//load our app server using express\nvar app = (0, _express[\"default\"])();\n\nvar server = _http[\"default\"].createServer(app),\n    io = require('socket.io').listen(server);\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n})); //important.. this line creates a connection to use static files such as html saved in the\n//folder public\n\napp.use(_express[\"default\"][\"static\"]('./images'));\napp.use((0, _morgan[\"default\"])('short'));\nglobal.__basedir = __dirname; //create router\n//this is important because it creates a connection to the users folder and runs the users.js folder\n\nvar router = require('./controller/users.js');\n\napp.use(router);\n\nvar listings = require('./controller/listing.js');\n\napp.use(listings);\n\nvar listingGroup = require('./controller/listing_group');\n\napp.use(listingGroup);\n\nvar rating = require('./controller/rating');\n\napp.use(rating); //socket config\n\nio.on('connection', function (socket) {\n  console.log('user connected');\n  socket.on('join', function (userNickname) {\n    console.log(userNickname + \" : has joined the chat \");\n    socket.broadcast.emit('user joined the chat', userNickname + \" : has joined the chat \");\n  });\n  socket.on('messagedetection', function (senderNickname, messageContent) {\n    //log the message in console \n    console.log(senderNickname + \" : \" + messageContent); //create a message object \n\n    var message = {\n      \"message\": messageContent,\n      \"senderNickname\": senderNickname // send the message to all users including the sender  using io.emit() \n\n    };\n    io.emit('message', message);\n  });\n  socket.on('disconnect', function () {\n    console.log('user has left ');\n    socket.broadcast.emit(\"userdisconnect\", ' user has left');\n  });\n});\napp.get('/', function (req, res) {\n  res.send('SAVVY API');\n}); //for local uncomment this \n\nserver.listen(3000, function () {\n  console.log(\"Server is up and listening on 3003...\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXJ2ZXIiLCJodHRwIiwiY3JlYXRlU2VydmVyIiwiaW8iLCJyZXF1aXJlIiwibGlzdGVuIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImV4cHJlc3MiLCJnbG9iYWwiLCJfX2Jhc2VkaXIiLCJfX2Rpcm5hbWUiLCJyb3V0ZXIiLCJsaXN0aW5ncyIsImxpc3RpbmdHcm91cCIsInJhdGluZyIsIm9uIiwic29ja2V0IiwiY29uc29sZSIsImxvZyIsInVzZXJOaWNrbmFtZSIsImJyb2FkY2FzdCIsImVtaXQiLCJzZW5kZXJOaWNrbmFtZSIsIm1lc3NhZ2VDb250ZW50IiwibWVzc2FnZSIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBR0E7Ozs7QUFSQTtBQUdBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFHQSxJQUFNQyxNQUFNLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCSCxHQUFsQixDQUFmO0FBQUEsSUFDSUksRUFBRSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCQyxNQUFyQixDQUE0QkwsTUFBNUIsQ0FEVDs7QUFJQUQsR0FBRyxDQUFDTyxHQUFKLENBQVEsdUJBQVI7QUFFQVAsR0FBRyxDQUFDTyxHQUFKLENBQVFDLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUVBO0FBQ0E7O0FBRUFWLEdBQUcsQ0FBQ08sR0FBSixDQUFRSSw4QkFBZSxVQUFmLENBQVI7QUFFQVgsR0FBRyxDQUFDTyxHQUFKLENBQVEsd0JBQU8sT0FBUCxDQUFSO0FBRUFLLE1BQU0sQ0FBQ0MsU0FBUCxHQUFtQkMsU0FBbkIsQyxDQUdBO0FBQ0E7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHVixPQUFPLENBQUMsdUJBQUQsQ0FBdEI7O0FBQ0FMLEdBQUcsQ0FBQ08sR0FBSixDQUFRUSxNQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR1gsT0FBTyxDQUFDLHlCQUFELENBQXhCOztBQUNBTCxHQUFHLENBQUNPLEdBQUosQ0FBUVMsUUFBUjs7QUFFQSxJQUFNQyxZQUFZLEdBQUdaLE9BQU8sQ0FBQyw0QkFBRCxDQUE1Qjs7QUFDQUwsR0FBRyxDQUFDTyxHQUFKLENBQVFVLFlBQVI7O0FBRUEsSUFBTUMsTUFBTSxHQUFHYixPQUFPLENBQUMscUJBQUQsQ0FBdEI7O0FBQ0FMLEdBQUcsQ0FBQ08sR0FBSixDQUFRVyxNQUFSLEUsQ0FFQTs7QUFDQWQsRUFBRSxDQUFDZSxFQUFILENBQU0sWUFBTixFQUFvQixVQUFDQyxNQUFELEVBQVk7QUFDNUJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLE1BQVYsRUFBa0IsVUFBU0ksWUFBVCxFQUF1QjtBQUNyQ0YsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFlBQVksR0FBRyx5QkFBM0I7QUFDQUgsSUFBQUEsTUFBTSxDQUFDSSxTQUFQLENBQWlCQyxJQUFqQixDQUFzQixzQkFBdEIsRUFBOENGLFlBQVksR0FBRyx5QkFBN0Q7QUFDSCxHQUhEO0FBS0FILEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGtCQUFWLEVBQThCLFVBQUNPLGNBQUQsRUFBaUJDLGNBQWpCLEVBQW9DO0FBQzlEO0FBQ0FOLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxjQUFjLEdBQUcsS0FBakIsR0FBeUJDLGNBQXJDLEVBRjhELENBRzFEOztBQUNKLFFBQUlDLE9BQU8sR0FBRztBQUFFLGlCQUFXRCxjQUFiO0FBQTZCLHdCQUFrQkQsY0FBL0MsQ0FDVjs7QUFEVSxLQUFkO0FBRUF0QixJQUFBQSxFQUFFLENBQUNxQixJQUFILENBQVEsU0FBUixFQUFtQkcsT0FBbkI7QUFDSCxHQVBEO0FBU0FSLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLFlBQVYsRUFBd0IsWUFBVztBQUMvQkUsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVo7QUFDQUYsSUFBQUEsTUFBTSxDQUFDSSxTQUFQLENBQWlCQyxJQUFqQixDQUFzQixnQkFBdEIsRUFBd0MsZ0JBQXhDO0FBQ0gsR0FIRDtBQUlILENBcEJEO0FBc0JBekIsR0FBRyxDQUFDNkIsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDNUJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLFdBQVQ7QUFDSCxDQUZELEUsQ0FLQTs7QUFDQS9CLE1BQU0sQ0FBQ0ssTUFBUCxDQUFjLElBQWQsRUFBb0IsWUFBTTtBQUN0QmUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUNBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9qcm9iLWJhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSSIsInNvdXJjZXNDb250ZW50IjpbIi8vbG9hZCBvdXIgYXBwIHNlcnZlciB1c2luZyBleHByZXNzXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKSxcbiAgICBpbyA9IHJlcXVpcmUoJ3NvY2tldC5pbycpLmxpc3RlbihzZXJ2ZXIpO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5cbmFwcC51c2UoY29ycygpKVxuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcblxuLy9pbXBvcnRhbnQuLiB0aGlzIGxpbmUgY3JlYXRlcyBhIGNvbm5lY3Rpb24gdG8gdXNlIHN0YXRpYyBmaWxlcyBzdWNoIGFzIGh0bWwgc2F2ZWQgaW4gdGhlXG4vL2ZvbGRlciBwdWJsaWNcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygnLi9pbWFnZXMnKSk7XG5cbmFwcC51c2UobW9yZ2FuKCdzaG9ydCcpKVxuXG5nbG9iYWwuX19iYXNlZGlyID0gX19kaXJuYW1lO1xuXG5cbi8vY3JlYXRlIHJvdXRlclxuLy90aGlzIGlzIGltcG9ydGFudCBiZWNhdXNlIGl0IGNyZWF0ZXMgYSBjb25uZWN0aW9uIHRvIHRoZSB1c2VycyBmb2xkZXIgYW5kIHJ1bnMgdGhlIHVzZXJzLmpzIGZvbGRlclxuY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnLi9jb250cm9sbGVyL3VzZXJzLmpzJylcbmFwcC51c2Uocm91dGVyKVxuXG5jb25zdCBsaXN0aW5ncyA9IHJlcXVpcmUoJy4vY29udHJvbGxlci9saXN0aW5nLmpzJylcbmFwcC51c2UobGlzdGluZ3MpXG5cbmNvbnN0IGxpc3RpbmdHcm91cCA9IHJlcXVpcmUoJy4vY29udHJvbGxlci9saXN0aW5nX2dyb3VwJylcbmFwcC51c2UobGlzdGluZ0dyb3VwKVxuXG5jb25zdCByYXRpbmcgPSByZXF1aXJlKCcuL2NvbnRyb2xsZXIvcmF0aW5nJylcbmFwcC51c2UocmF0aW5nKVxuXG4vL3NvY2tldCBjb25maWdcbmlvLm9uKCdjb25uZWN0aW9uJywgKHNvY2tldCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCd1c2VyIGNvbm5lY3RlZCcpXG4gICAgc29ja2V0Lm9uKCdqb2luJywgZnVuY3Rpb24odXNlck5pY2tuYW1lKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHVzZXJOaWNrbmFtZSArIFwiIDogaGFzIGpvaW5lZCB0aGUgY2hhdCBcIik7XG4gICAgICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgndXNlciBqb2luZWQgdGhlIGNoYXQnLCB1c2VyTmlja25hbWUgKyBcIiA6IGhhcyBqb2luZWQgdGhlIGNoYXQgXCIpO1xuICAgIH0pXG5cbiAgICBzb2NrZXQub24oJ21lc3NhZ2VkZXRlY3Rpb24nLCAoc2VuZGVyTmlja25hbWUsIG1lc3NhZ2VDb250ZW50KSA9PiB7XG4gICAgICAgIC8vbG9nIHRoZSBtZXNzYWdlIGluIGNvbnNvbGUgXG4gICAgICAgIGNvbnNvbGUubG9nKHNlbmRlck5pY2tuYW1lICsgXCIgOiBcIiArIG1lc3NhZ2VDb250ZW50KVxuICAgICAgICAgICAgLy9jcmVhdGUgYSBtZXNzYWdlIG9iamVjdCBcbiAgICAgICAgbGV0IG1lc3NhZ2UgPSB7IFwibWVzc2FnZVwiOiBtZXNzYWdlQ29udGVudCwgXCJzZW5kZXJOaWNrbmFtZVwiOiBzZW5kZXJOaWNrbmFtZSB9XG4gICAgICAgICAgICAvLyBzZW5kIHRoZSBtZXNzYWdlIHRvIGFsbCB1c2VycyBpbmNsdWRpbmcgdGhlIHNlbmRlciAgdXNpbmcgaW8uZW1pdCgpIFxuICAgICAgICBpby5lbWl0KCdtZXNzYWdlJywgbWVzc2FnZSlcbiAgICB9KVxuXG4gICAgc29ja2V0Lm9uKCdkaXNjb25uZWN0JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd1c2VyIGhhcyBsZWZ0ICcpXG4gICAgICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdChcInVzZXJkaXNjb25uZWN0XCIsICcgdXNlciBoYXMgbGVmdCcpXG4gICAgfSlcbn0pXG5cbmFwcC5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIHJlcy5zZW5kKCdTQVZWWSBBUEknKTtcbn0pO1xuXG5cbi8vZm9yIGxvY2FsIHVuY29tbWVudCB0aGlzIFxuc2VydmVyLmxpc3RlbigzMDAwLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgaXMgdXAgYW5kIGxpc3RlbmluZyBvbiAzMDAzLi4uXCIpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "server",
        "http",
        "createServer",
        "io",
        "require",
        "listen",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "express",
        "global",
        "__basedir",
        "__dirname",
        "router",
        "listings",
        "listingGroup",
        "rating",
        "on",
        "socket",
        "console",
        "log",
        "userNickname",
        "broadcast",
        "emit",
        "senderNickname",
        "messageContent",
        "message",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AACA;;AACA;;AAEA;;AACA;;AAGA;;;;AARA;AAGA,IAAMA,GAAG,GAAG,0BAAZ;;AAGA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAf;AAAA,IACII,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAArB,CAA4BL,MAA5B,CADT;;AAIAD,GAAG,CAACO,GAAJ,CAAQ,uBAAR;AAEAP,GAAG,CAACO,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;AACA;;AAEAV,GAAG,CAACO,GAAJ,CAAQI,8BAAe,UAAf,CAAR;AAEAX,GAAG,CAACO,GAAJ,CAAQ,wBAAO,OAAP,CAAR;AAEAK,MAAM,CAACC,SAAP,GAAmBC,SAAnB,C,CAGA;AACA;;AACA,IAAMC,MAAM,GAAGV,OAAO,CAAC,uBAAD,CAAtB;;AACAL,GAAG,CAACO,GAAJ,CAAQQ,MAAR;;AAEA,IAAMC,QAAQ,GAAGX,OAAO,CAAC,yBAAD,CAAxB;;AACAL,GAAG,CAACO,GAAJ,CAAQS,QAAR;;AAEA,IAAMC,YAAY,GAAGZ,OAAO,CAAC,4BAAD,CAA5B;;AACAL,GAAG,CAACO,GAAJ,CAAQU,YAAR;;AAEA,IAAMC,MAAM,GAAGb,OAAO,CAAC,qBAAD,CAAtB;;AACAL,GAAG,CAACO,GAAJ,CAAQW,MAAR,E,CAEA;;AACAd,EAAE,CAACe,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,EAAAA,MAAM,CAACD,EAAP,CAAU,MAAV,EAAkB,UAASI,YAAT,EAAuB;AACrCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,GAAG,yBAA3B;AACAH,IAAAA,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsB,sBAAtB,EAA8CF,YAAY,GAAG,yBAA7D;AACH,GAHD;AAKAH,EAAAA,MAAM,CAACD,EAAP,CAAU,kBAAV,EAA8B,UAACO,cAAD,EAAiBC,cAAjB,EAAoC;AAC9D;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,cAAc,GAAG,KAAjB,GAAyBC,cAArC,EAF8D,CAG1D;;AACJ,QAAIC,OAAO,GAAG;AAAE,iBAAWD,cAAb;AAA6B,wBAAkBD,cAA/C,CACV;;AADU,KAAd;AAEAtB,IAAAA,EAAE,CAACqB,IAAH,CAAQ,SAAR,EAAmBG,OAAnB;AACH,GAPD;AASAR,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAW;AAC/BE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAF,IAAAA,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsB,gBAAtB,EAAwC,gBAAxC;AACH,GAHD;AAIH,CApBD;AAsBAzB,GAAG,CAAC6B,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,WAAT;AACH,CAFD,E,CAKA;;AACA/B,MAAM,CAACK,MAAP,CAAc,IAAd,EAAoB,YAAM;AACtBe,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH,CAFD",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourcesContent": [
        "//load our app server using express\nimport express from 'express'\nimport cors from 'cors'\nconst app = express()\nimport morgan from 'morgan'\nimport http from 'http'\nconst server = http.createServer(app),\n    io = require('socket.io').listen(server);\nimport bodyParser from 'body-parser'\n\napp.use(cors())\n\napp.use(bodyParser.urlencoded({ extended: false }))\n\n//important.. this line creates a connection to use static files such as html saved in the\n//folder public\n\napp.use(express.static('./images'));\n\napp.use(morgan('short'))\n\nglobal.__basedir = __dirname;\n\n\n//create router\n//this is important because it creates a connection to the users folder and runs the users.js folder\nconst router = require('./controller/users.js')\napp.use(router)\n\nconst listings = require('./controller/listing.js')\napp.use(listings)\n\nconst listingGroup = require('./controller/listing_group')\napp.use(listingGroup)\n\nconst rating = require('./controller/rating')\napp.use(rating)\n\n//socket config\nio.on('connection', (socket) => {\n    console.log('user connected')\n    socket.on('join', function(userNickname) {\n        console.log(userNickname + \" : has joined the chat \");\n        socket.broadcast.emit('user joined the chat', userNickname + \" : has joined the chat \");\n    })\n\n    socket.on('messagedetection', (senderNickname, messageContent) => {\n        //log the message in console \n        console.log(senderNickname + \" : \" + messageContent)\n            //create a message object \n        let message = { \"message\": messageContent, \"senderNickname\": senderNickname }\n            // send the message to all users including the sender  using io.emit() \n        io.emit('message', message)\n    })\n\n    socket.on('disconnect', function() {\n        console.log('user has left ')\n        socket.broadcast.emit(\"userdisconnect\", ' user has left')\n    })\n})\n\napp.get('/', function(req, res) {\n    res.send('SAVVY API');\n});\n\n\n//for local uncomment this \nserver.listen(3000, () => {\n    console.log(\"Server is up and listening on 3003...\")\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1557729401795
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\nvar express = require('express');\n\nvar db = require('../config/db.config.js');\n\nvar bodyParser = require(\"body-parser\");\n\nvar cors = require('cors');\n\nvar cookieParser = require('cookie-parser'); //create router\n\n\nvar router = express.Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on req.body\n */\n\nrouter.use(bodyParser.urlencoded({\n  extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\n\nrouter.post('/reg', function (req, res) {\n  var username = req.body.username;\n  var email = req.body.email;\n  var password = req.body.password;\n  var first_name = req.body.first_name;\n  var last_name = req.body.last_name;\n  var city = req.body.city;\n  var description = req.body.description;\n  var createProfile = \"INSERT INTO User(username, email, password, first_name, last_name, city, description, profImage) VALUES (?, ?, ?, ?, ?, ?, ?)\";\n  db.query(createProfile, [username, email, password, first_name, last_name, city, description], function (err, result) {\n    if (err) {\n      console.log(\"failed to insert new image: \" + err);\n      res.sendStatus(500);\n      return;\n    } else {\n      console.log('inserted data');\n      res.sendStatus(200);\n    }\n  });\n});\nrouter.get('/login', function (req, res) {\n  //user id becomes the id number we want to look for \n  var username = req.query.name;\n  var password = req.query.psw; //this code selcts all the user information by user id \n\n  var queryString = \"SELECT * FROM user WHERE username = ? AND password = ?\";\n  db.query(queryString, [username, password], function (err, rows, fields) {\n    if (err) {\n      console.log(\"failed to query for users \" + err);\n      res.sendStatus(500);\n      return;\n    }\n\n    var users = rows.map(function (row) {\n      return {\n        username: row.username,\n        email: row.email,\n        first_name: row.first_name,\n        last_name: row.last_name,\n        city: row.city,\n        description: row.description\n      };\n    }); //this line displays the user first name ans last name\n\n    res.json(users);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZGIiLCJib2R5UGFyc2VyIiwiY29ycyIsImNvb2tpZVBhcnNlciIsInJvdXRlciIsIlJvdXRlciIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwidXNlcm5hbWUiLCJib2R5IiwiZW1haWwiLCJwYXNzd29yZCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJjaXR5IiwiZGVzY3JpcHRpb24iLCJjcmVhdGVQcm9maWxlIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwic2VuZFN0YXR1cyIsImdldCIsIm5hbWUiLCJwc3ciLCJxdWVyeVN0cmluZyIsInJvd3MiLCJmaWVsZHMiLCJ1c2VycyIsIm1hcCIsInJvdyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0FBTUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyx3QkFBRCxDQUFsQjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUksWUFBWSxHQUFHSixPQUFPLENBQUMsZUFBRCxDQUE1QixDLENBRUE7OztBQUNBLElBQU1LLE1BQU0sR0FBR04sT0FBTyxDQUFDTyxNQUFSLEVBQWY7QUFDSTs7Ozs7QUFJSkQsTUFBTSxDQUFDRSxHQUFQLENBQVdMLFVBQVUsQ0FBQ00sVUFBWCxDQUFzQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBRG1CLENBQXRCLENBQVg7QUFHQUosTUFBTSxDQUFDRSxHQUFQLENBQVdMLFVBQVUsQ0FBQ1EsSUFBWCxFQUFYO0FBQ0FMLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXSCxZQUFZLEVBQXZCO0FBQ0FDLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXSixJQUFJLEVBQWY7QUFDQTs7Ozs7QUFJQUUsTUFBTSxDQUFDTSxJQUFQLENBQVksTUFBWixFQUFvQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QixNQUFNQyxRQUFRLEdBQUdGLEdBQUcsQ0FBQ0csSUFBSixDQUFTRCxRQUExQjtBQUNBLE1BQU1FLEtBQUssR0FBR0osR0FBRyxDQUFDRyxJQUFKLENBQVNDLEtBQXZCO0FBQ0EsTUFBTUMsUUFBUSxHQUFHTCxHQUFHLENBQUNHLElBQUosQ0FBU0UsUUFBMUI7QUFDQSxNQUFNQyxVQUFVLEdBQUdOLEdBQUcsQ0FBQ0csSUFBSixDQUFTRyxVQUE1QjtBQUNBLE1BQU1DLFNBQVMsR0FBR1AsR0FBRyxDQUFDRyxJQUFKLENBQVNJLFNBQTNCO0FBQ0EsTUFBTUMsSUFBSSxHQUFHUixHQUFHLENBQUNHLElBQUosQ0FBU0ssSUFBdEI7QUFDQSxNQUFNQyxXQUFXLEdBQUdULEdBQUcsQ0FBQ0csSUFBSixDQUFTTSxXQUE3QjtBQUNBLE1BQUlDLGFBQWEsR0FBRywrSEFBcEI7QUFDQXJCLEVBQUFBLEVBQUUsQ0FBQ3NCLEtBQUgsQ0FBU0QsYUFBVCxFQUF3QixDQUFDUixRQUFELEVBQVdFLEtBQVgsRUFBa0JDLFFBQWxCLEVBQTRCQyxVQUE1QixFQUF3Q0MsU0FBeEMsRUFBbURDLElBQW5ELEVBQXlEQyxXQUF6RCxDQUF4QixFQUErRixVQUFDRyxHQUFELEVBQU1DLE1BQU4sRUFBaUI7QUFDNUcsUUFBSUQsR0FBSixFQUFTO0FBQ0xFLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFpQ0gsR0FBN0M7QUFDQVgsTUFBQUEsR0FBRyxDQUFDZSxVQUFKLENBQWUsR0FBZjtBQUNBO0FBQ0gsS0FKRCxNQUlPO0FBQ0hGLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVo7QUFDQWQsTUFBQUEsR0FBRyxDQUFDZSxVQUFKLENBQWUsR0FBZjtBQUNIO0FBQ0osR0FURDtBQVVILENBbkJEO0FBcUJBdkIsTUFBTSxDQUFDd0IsR0FBUCxDQUFXLFFBQVgsRUFBcUIsVUFBQ2pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CO0FBQ0EsTUFBTUMsUUFBUSxHQUFHRixHQUFHLENBQUNXLEtBQUosQ0FBVU8sSUFBM0I7QUFDQSxNQUFNYixRQUFRLEdBQUdMLEdBQUcsQ0FBQ1csS0FBSixDQUFVUSxHQUEzQixDQUgrQixDQUkvQjs7QUFDQSxNQUFNQyxXQUFXLEdBQUcsd0RBQXBCO0FBQ0EvQixFQUFBQSxFQUFFLENBQUNzQixLQUFILENBQVNTLFdBQVQsRUFBc0IsQ0FBQ2xCLFFBQUQsRUFBV0csUUFBWCxDQUF0QixFQUE0QyxVQUFDTyxHQUFELEVBQU1TLElBQU4sRUFBWUMsTUFBWixFQUF1QjtBQUMvRCxRQUFJVixHQUFKLEVBQVM7QUFDTEUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksK0JBQStCSCxHQUEzQztBQUNBWCxNQUFBQSxHQUFHLENBQUNlLFVBQUosQ0FBZSxHQUFmO0FBQ0E7QUFDSDs7QUFDRCxRQUFNTyxLQUFLLEdBQUdGLElBQUksQ0FBQ0csR0FBTCxDQUFTLFVBQUNDLEdBQUQsRUFBUztBQUN4QixhQUFPO0FBQUV2QixRQUFBQSxRQUFRLEVBQUV1QixHQUFHLENBQUN2QixRQUFoQjtBQUEwQkUsUUFBQUEsS0FBSyxFQUFFcUIsR0FBRyxDQUFDckIsS0FBckM7QUFBNENFLFFBQUFBLFVBQVUsRUFBRW1CLEdBQUcsQ0FBQ25CLFVBQTVEO0FBQXdFQyxRQUFBQSxTQUFTLEVBQUVrQixHQUFHLENBQUNsQixTQUF2RjtBQUFrR0MsUUFBQUEsSUFBSSxFQUFFaUIsR0FBRyxDQUFDakIsSUFBNUc7QUFBa0hDLFFBQUFBLFdBQVcsRUFBRWdCLEdBQUcsQ0FBQ2hCO0FBQW5JLE9BQVA7QUFDSCxLQUZTLENBQWQsQ0FOK0QsQ0FTM0Q7O0FBQ0pSLElBQUFBLEdBQUcsQ0FBQ0gsSUFBSixDQUFTeUIsS0FBVDtBQUNILEdBWEQ7QUFZSCxDQWxCRDtBQXFCQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEMsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZVxuICogdGhpcyBjbGFzcyB3aWxsIGJlIHVzZWQgdG8gaGFuZGxlIGdldCBhbmQgcG9zdCByZXF1ZXN0IGZvciBcbiAqIHVzZXIgcmVsYXRlZCBpbmZvLiBcbiAqL1xuXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCBkYiA9IHJlcXVpcmUoJy4uL2NvbmZpZy9kYi5jb25maWcuanMnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKFwiYm9keS1wYXJzZXJcIik7XG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuY29uc3QgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXEuYm9keVxuICAgICAqL1xucm91dGVyLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgIGV4dGVuZGVkOiBmYWxzZVxufSkpO1xucm91dGVyLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5yb3V0ZXIudXNlKGNvb2tpZVBhcnNlcigpKTtcbnJvdXRlci51c2UoY29ycygpKTtcbi8qKlxuICogQHJldHVyblxuICogXG4gKi9cbnJvdXRlci5wb3N0KCcvcmVnJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgdXNlcm5hbWUgPSByZXEuYm9keS51c2VybmFtZVxuICAgIGNvbnN0IGVtYWlsID0gcmVxLmJvZHkuZW1haWxcbiAgICBjb25zdCBwYXNzd29yZCA9IHJlcS5ib2R5LnBhc3N3b3JkXG4gICAgY29uc3QgZmlyc3RfbmFtZSA9IHJlcS5ib2R5LmZpcnN0X25hbWVcbiAgICBjb25zdCBsYXN0X25hbWUgPSByZXEuYm9keS5sYXN0X25hbWVcbiAgICBjb25zdCBjaXR5ID0gcmVxLmJvZHkuY2l0eVxuICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gcmVxLmJvZHkuZGVzY3JpcHRpb25cbiAgICB2YXIgY3JlYXRlUHJvZmlsZSA9IFwiSU5TRVJUIElOVE8gVXNlcih1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGNpdHksIGRlc2NyaXB0aW9uLCBwcm9mSW1hZ2UpIFZBTFVFUyAoPywgPywgPywgPywgPywgPywgPylcIlxuICAgIGRiLnF1ZXJ5KGNyZWF0ZVByb2ZpbGUsIFt1c2VybmFtZSwgZW1haWwsIHBhc3N3b3JkLCBmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGNpdHksIGRlc2NyaXB0aW9uXSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmFpbGVkIHRvIGluc2VydCBuZXcgaW1hZ2U6IFwiICsgZXJyKVxuICAgICAgICAgICAgcmVzLnNlbmRTdGF0dXMoNTAwKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnaW5zZXJ0ZWQgZGF0YScpO1xuICAgICAgICAgICAgcmVzLnNlbmRTdGF0dXMoMjAwKVxuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxucm91dGVyLmdldCgnL2xvZ2luJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy91c2VyIGlkIGJlY29tZXMgdGhlIGlkIG51bWJlciB3ZSB3YW50IHRvIGxvb2sgZm9yIFxuICAgIGNvbnN0IHVzZXJuYW1lID0gcmVxLnF1ZXJ5Lm5hbWU7XG4gICAgY29uc3QgcGFzc3dvcmQgPSByZXEucXVlcnkucHN3O1xuICAgIC8vdGhpcyBjb2RlIHNlbGN0cyBhbGwgdGhlIHVzZXIgaW5mb3JtYXRpb24gYnkgdXNlciBpZCBcbiAgICBjb25zdCBxdWVyeVN0cmluZyA9IFwiU0VMRUNUICogRlJPTSB1c2VyIFdIRVJFIHVzZXJuYW1lID0gPyBBTkQgcGFzc3dvcmQgPSA/XCJcbiAgICBkYi5xdWVyeShxdWVyeVN0cmluZywgW3VzZXJuYW1lLCBwYXNzd29yZF0sIChlcnIsIHJvd3MsIGZpZWxkcykgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImZhaWxlZCB0byBxdWVyeSBmb3IgdXNlcnMgXCIgKyBlcnIpXG4gICAgICAgICAgICByZXMuc2VuZFN0YXR1cyg1MDApXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICBjb25zdCB1c2VycyA9IHJvd3MubWFwKChyb3cpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyB1c2VybmFtZTogcm93LnVzZXJuYW1lLCBlbWFpbDogcm93LmVtYWlsLCBmaXJzdF9uYW1lOiByb3cuZmlyc3RfbmFtZSwgbGFzdF9uYW1lOiByb3cubGFzdF9uYW1lLCBjaXR5OiByb3cuY2l0eSwgZGVzY3JpcHRpb246IHJvdy5kZXNjcmlwdGlvbiB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLy90aGlzIGxpbmUgZGlzcGxheXMgdGhlIHVzZXIgZmlyc3QgbmFtZSBhbnMgbGFzdCBuYW1lXG4gICAgICAgIHJlcy5qc29uKHVzZXJzKVxuICAgIH0pXG59KVxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "db",
        "bodyParser",
        "cors",
        "cookieParser",
        "router",
        "Router",
        "use",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "username",
        "body",
        "email",
        "password",
        "first_name",
        "last_name",
        "city",
        "description",
        "createProfile",
        "query",
        "err",
        "result",
        "console",
        "log",
        "sendStatus",
        "get",
        "name",
        "psw",
        "queryString",
        "rows",
        "fields",
        "users",
        "map",
        "row",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;AAMA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,wBAAD,CAAlB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,eAAD,CAA5B,C,CAEA;;;AACA,IAAMK,MAAM,GAAGN,OAAO,CAACO,MAAR,EAAf;AACI;;;;;AAIJD,MAAM,CAACE,GAAP,CAAWL,UAAU,CAACM,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAJ,MAAM,CAACE,GAAP,CAAWL,UAAU,CAACQ,IAAX,EAAX;AACAL,MAAM,CAACE,GAAP,CAAWH,YAAY,EAAvB;AACAC,MAAM,CAACE,GAAP,CAAWJ,IAAI,EAAf;AACA;;;;;AAIAE,MAAM,CAACM,IAAP,CAAY,MAAZ,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9B,MAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAJ,CAASD,QAA1B;AACA,MAAME,KAAK,GAAGJ,GAAG,CAACG,IAAJ,CAASC,KAAvB;AACA,MAAMC,QAAQ,GAAGL,GAAG,CAACG,IAAJ,CAASE,QAA1B;AACA,MAAMC,UAAU,GAAGN,GAAG,CAACG,IAAJ,CAASG,UAA5B;AACA,MAAMC,SAAS,GAAGP,GAAG,CAACG,IAAJ,CAASI,SAA3B;AACA,MAAMC,IAAI,GAAGR,GAAG,CAACG,IAAJ,CAASK,IAAtB;AACA,MAAMC,WAAW,GAAGT,GAAG,CAACG,IAAJ,CAASM,WAA7B;AACA,MAAIC,aAAa,GAAG,+HAApB;AACArB,EAAAA,EAAE,CAACsB,KAAH,CAASD,aAAT,EAAwB,CAACR,QAAD,EAAWE,KAAX,EAAkBC,QAAlB,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,IAAnD,EAAyDC,WAAzD,CAAxB,EAA+F,UAACG,GAAD,EAAMC,MAAN,EAAiB;AAC5G,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCH,GAA7C;AACAX,MAAAA,GAAG,CAACe,UAAJ,CAAe,GAAf;AACA;AACH,KAJD,MAIO;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAd,MAAAA,GAAG,CAACe,UAAJ,CAAe,GAAf;AACH;AACJ,GATD;AAUH,CAnBD;AAqBAvB,MAAM,CAACwB,GAAP,CAAW,QAAX,EAAqB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC/B;AACA,MAAMC,QAAQ,GAAGF,GAAG,CAACW,KAAJ,CAAUO,IAA3B;AACA,MAAMb,QAAQ,GAAGL,GAAG,CAACW,KAAJ,CAAUQ,GAA3B,CAH+B,CAI/B;;AACA,MAAMC,WAAW,GAAG,wDAApB;AACA/B,EAAAA,EAAE,CAACsB,KAAH,CAASS,WAAT,EAAsB,CAAClB,QAAD,EAAWG,QAAX,CAAtB,EAA4C,UAACO,GAAD,EAAMS,IAAN,EAAYC,MAAZ,EAAuB;AAC/D,QAAIV,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BH,GAA3C;AACAX,MAAAA,GAAG,CAACe,UAAJ,CAAe,GAAf;AACA;AACH;;AACD,QAAMO,KAAK,GAAGF,IAAI,CAACG,GAAL,CAAS,UAACC,GAAD,EAAS;AACxB,aAAO;AAAEvB,QAAAA,QAAQ,EAAEuB,GAAG,CAACvB,QAAhB;AAA0BE,QAAAA,KAAK,EAAEqB,GAAG,CAACrB,KAArC;AAA4CE,QAAAA,UAAU,EAAEmB,GAAG,CAACnB,UAA5D;AAAwEC,QAAAA,SAAS,EAAEkB,GAAG,CAAClB,SAAvF;AAAkGC,QAAAA,IAAI,EAAEiB,GAAG,CAACjB,IAA5G;AAAkHC,QAAAA,WAAW,EAAEgB,GAAG,CAAChB;AAAnI,OAAP;AACH,KAFS,CAAd,CAN+D,CAS3D;;AACJR,IAAAA,GAAG,CAACH,IAAJ,CAASyB,KAAT;AACH,GAXD;AAYH,CAlBD;AAqBAG,MAAM,CAACC,OAAP,GAAiBlC,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nconst express = require('express')\nconst db = require('../config/db.config.js');\nconst bodyParser = require(\"body-parser\");\nconst cors = require('cors');\nconst cookieParser = require('cookie-parser');\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on req.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/reg', (req, res) => {\n    const username = req.body.username\n    const email = req.body.email\n    const password = req.body.password\n    const first_name = req.body.first_name\n    const last_name = req.body.last_name\n    const city = req.body.city\n    const description = req.body.description\n    var createProfile = \"INSERT INTO User(username, email, password, first_name, last_name, city, description, profImage) VALUES (?, ?, ?, ?, ?, ?, ?)\"\n    db.query(createProfile, [username, email, password, first_name, last_name, city, description], (err, result) => {\n        if (err) {\n            console.log(\"failed to insert new image: \" + err)\n            res.sendStatus(500)\n            return\n        } else {\n            console.log('inserted data');\n            res.sendStatus(200)\n        }\n    });\n});\n\nrouter.get('/login', (req, res) => {\n    //user id becomes the id number we want to look for \n    const username = req.query.name;\n    const password = req.query.psw;\n    //this code selcts all the user information by user id \n    const queryString = \"SELECT * FROM user WHERE username = ? AND password = ?\"\n    db.query(queryString, [username, password], (err, rows, fields) => {\n        if (err) {\n            console.log(\"failed to query for users \" + err)\n            res.sendStatus(500)\n            return\n        }\n        const users = rows.map((row) => {\n                return { username: row.username, email: row.email, first_name: row.first_name, last_name: row.last_name, city: row.city, description: row.description }\n            })\n            //this line displays the user first name ans last name\n        res.json(users)\n    })\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557372203777
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config/db.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config",
        "sourceFileName": "db.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @class\n * this class serves as setup to connect to mysql and create mysql pools.\n */\nvar mysql = require('mysql');\n\nvar db = mysql.createPool({\n  connectionLimit: 10,\n  host: 'localhost',\n  user: 'root',\n  password: 'AA23@xla@VbQ239S1',\n  database: 'savvyAPP'\n});\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmNvbmZpZy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJkYiIsImNyZWF0ZVBvb2wiLCJjb25uZWN0aW9uTGltaXQiLCJob3N0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBSUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNQyxFQUFFLEdBQUdGLEtBQUssQ0FBQ0csVUFBTixDQUFpQjtBQUN4QkMsRUFBQUEsZUFBZSxFQUFFLEVBRE87QUFFeEJDLEVBQUFBLElBQUksRUFBRSxXQUZrQjtBQUd4QkMsRUFBQUEsSUFBSSxFQUFFLE1BSGtCO0FBSXhCQyxFQUFBQSxRQUFRLEVBQUUsbUJBSmM7QUFLeEJDLEVBQUFBLFFBQVEsRUFBRTtBQUxjLENBQWpCLENBQVg7QUFVQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixFQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvanJvYi1iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAY2xhc3NcbiAqIHRoaXMgY2xhc3Mgc2VydmVzIGFzIHNldHVwIHRvIGNvbm5lY3QgdG8gbXlzcWwgYW5kIGNyZWF0ZSBteXNxbCBwb29scy5cbiAqL1xuY29uc3QgbXlzcWwgPSByZXF1aXJlKCdteXNxbCcpXG5cbmNvbnN0IGRiID0gbXlzcWwuY3JlYXRlUG9vbCh7XG4gICAgY29ubmVjdGlvbkxpbWl0OiAxMCxcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICB1c2VyOiAncm9vdCcsXG4gICAgcGFzc3dvcmQ6ICdBQTIzQHhsYUBWYlEyMzlTMScsXG4gICAgZGF0YWJhc2U6ICdzYXZ2eUFQUCdcblxufSlcblxuXG5tb2R1bGUuZXhwb3J0cyA9IGRiIl19",
    "map": {
      "version": 3,
      "sources": [
        "db.config.js"
      ],
      "names": [
        "mysql",
        "require",
        "db",
        "createPool",
        "connectionLimit",
        "host",
        "user",
        "password",
        "database",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AAIA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,EAAE,GAAGF,KAAK,CAACG,UAAN,CAAiB;AACxBC,EAAAA,eAAe,EAAE,EADO;AAExBC,EAAAA,IAAI,EAAE,WAFkB;AAGxBC,EAAAA,IAAI,EAAE,MAHkB;AAIxBC,EAAAA,QAAQ,EAAE,mBAJc;AAKxBC,EAAAA,QAAQ,EAAE;AALc,CAAjB,CAAX;AAUAC,MAAM,CAACC,OAAP,GAAiBR,EAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/config",
      "sourcesContent": [
        "/**\n * @class\n * this class serves as setup to connect to mysql and create mysql pools.\n */\nconst mysql = require('mysql')\n\nconst db = mysql.createPool({\n    connectionLimit: 10,\n    host: 'localhost',\n    user: 'root',\n    password: 'AA23@xla@VbQ239S1',\n    database: 'savvyAPP'\n\n})\n\n\nmodule.exports = db"
      ]
    },
    "sourceType": "script",
    "mtime": 1557711894030
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/listing.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/listing.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/listing.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes/listing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
        "sourceFileName": "listing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dbConfig = _interopRequireDefault(require(\"../config/db.config.js\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _listing = _interopRequireDefault(require(\"../models/listing\"));\n\nrequire(\"@babel/polyfill\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/newListing', function (request, response) {\n  try {\n    var values = Object.keys(request.body).map(function (key) {\n      return request.body[key];\n    });\n    console.log(values);\n\n    var result = _listing[\"default\"].create(values);\n\n    response.json(result);\n  } catch (error) {\n    response.sendStatus(500);\n  }\n});\nrouter.get('/search', function (request, response) {\n  console.log(request.query.like);\n\n  _listing[\"default\"].find(request.query.like, function (err, result) {\n    if (err) {\n      console.log(\"There was an error retrieving available games: \" + err);\n      response.sendStatus(500);\n    } else {\n      response.send(result);\n    }\n  });\n});\nrouter.get('/getbyowner', function (request, res) {\n  var username = request.body.username;\n  var createquery = \"SELECT * FROM Listing WHERE listing_owner = ?\";\n\n  _dbConfig[\"default\"].query(createquery, [username], function (err, rows, fields) {\n    if (err) {\n      console.log(err);\n      res.sendStatus(500);\n      return;\n    } else {\n      res.json(rows);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmcuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlcXVlc3QiLCJyZXNwb25zZSIsInZhbHVlcyIsIk9iamVjdCIsImtleXMiLCJib2R5IiwibWFwIiwia2V5IiwiY29uc29sZSIsImxvZyIsInJlc3VsdCIsIkxpc3RpbmciLCJjcmVhdGUiLCJlcnJvciIsInNlbmRTdGF0dXMiLCJnZXQiLCJxdWVyeSIsImxpa2UiLCJmaW5kIiwiZXJyIiwic2VuZCIsInJlcyIsInVzZXJuYW1lIiwiY3JlYXRlcXVlcnkiLCJkYiIsInJvd3MiLCJmaWVsZHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBWkE7Ozs7O0FBY0E7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7QUFDSTs7Ozs7O0FBSUpGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBRG1CLENBQXRCLENBQVg7QUFHQU4sTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXRyxJQUFYLEVBQVg7QUFDQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsK0JBQVg7QUFDQUgsTUFBTSxDQUFDRyxHQUFQLENBQVcsdUJBQVg7QUFDQTs7Ozs7QUFJQUgsTUFBTSxDQUFDUSxJQUFQLENBQVksYUFBWixFQUEyQixVQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDOUMsTUFBSTtBQUNBLFFBQUlDLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlKLE9BQU8sQ0FBQ0ssSUFBcEIsRUFBMEJDLEdBQTFCLENBQThCLFVBQVNDLEdBQVQsRUFBYztBQUFFLGFBQU9QLE9BQU8sQ0FBQ0ssSUFBUixDQUFhRSxHQUFiLENBQVA7QUFBMkIsS0FBekUsQ0FBYjtBQUNBQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVAsTUFBWjs7QUFDQSxRQUFNUSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLENBQWVWLE1BQWYsQ0FBZjs7QUFDQUQsSUFBQUEsUUFBUSxDQUFDSCxJQUFULENBQWNZLE1BQWQ7QUFDSCxHQUxELENBS0UsT0FBT0csS0FBUCxFQUFjO0FBQ1paLElBQUFBLFFBQVEsQ0FBQ2EsVUFBVCxDQUFvQixHQUFwQjtBQUNIO0FBQ0osQ0FURDtBQVdBdkIsTUFBTSxDQUFDd0IsR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ2YsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQ3pDTyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsT0FBTyxDQUFDZ0IsS0FBUixDQUFjQyxJQUExQjs7QUFDQU4sc0JBQVFPLElBQVIsQ0FBYWxCLE9BQU8sQ0FBQ2dCLEtBQVIsQ0FBY0MsSUFBM0IsRUFBaUMsVUFBU0UsR0FBVCxFQUFjVCxNQUFkLEVBQXNCO0FBQ25ELFFBQUlTLEdBQUosRUFBUztBQUNMWCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvREFBb0RVLEdBQWhFO0FBQ0FsQixNQUFBQSxRQUFRLENBQUNhLFVBQVQsQ0FBb0IsR0FBcEI7QUFDSCxLQUhELE1BR087QUFDSGIsTUFBQUEsUUFBUSxDQUFDbUIsSUFBVCxDQUFjVixNQUFkO0FBQ0g7QUFDSixHQVBEO0FBUUgsQ0FWRDtBQVlBbkIsTUFBTSxDQUFDd0IsR0FBUCxDQUFXLGFBQVgsRUFBMEIsVUFBQ2YsT0FBRCxFQUFVcUIsR0FBVixFQUFrQjtBQUN4QyxNQUFNQyxRQUFRLEdBQUd0QixPQUFPLENBQUNLLElBQVIsQ0FBYWlCLFFBQTlCO0FBQ0EsTUFBSUMsV0FBVyxHQUFHLCtDQUFsQjs7QUFDQUMsdUJBQUdSLEtBQUgsQ0FBU08sV0FBVCxFQUFzQixDQUFDRCxRQUFELENBQXRCLEVBQWtDLFVBQUNILEdBQUQsRUFBTU0sSUFBTixFQUFZQyxNQUFaLEVBQXVCO0FBQ3JELFFBQUlQLEdBQUosRUFBUztBQUNMWCxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVUsR0FBWjtBQUNBRSxNQUFBQSxHQUFHLENBQUNQLFVBQUosQ0FBZSxHQUFmO0FBQ0E7QUFDSCxLQUpELE1BSU87QUFDSE8sTUFBQUEsR0FBRyxDQUFDdkIsSUFBSixDQUFTMkIsSUFBVDtBQUNIO0FBQ0osR0FSRDtBQVNILENBWkQ7QUFlQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckMsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZVxuICogdGhpcyBjbGFzcyB3aWxsIGJlIHVzZWQgdG8gaGFuZGxlIGdldCBhbmQgcG9zdCByZXF1ZXN0IGZvciBcbiAqIHVzZXIgcmVsYXRlZCBpbmZvLiBcbiAqL1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGRiIGZyb20gJy4uL2NvbmZpZy9kYi5jb25maWcuanMnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInXG5pbXBvcnQgTGlzdGluZyBmcm9tIFwiLi4vbW9kZWxzL2xpc3RpbmdcIjtcbmltcG9ydCBcIkBiYWJlbC9wb2x5ZmlsbFwiO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXF1ZXN0LmJvZHlcbiAgICAgKi9cbnJvdXRlci51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgICBleHRlbmRlZDogZmFsc2Vcbn0pKTtcbnJvdXRlci51c2UoYm9keVBhcnNlci5qc29uKCkpO1xucm91dGVyLnVzZShjb29raWVQYXJzZXIoKSk7XG5yb3V0ZXIudXNlKGNvcnMoKSk7XG4vKipcbiAqIEByZXR1cm5cbiAqIFxuICovXG5yb3V0ZXIucG9zdCgnL25ld0xpc3RpbmcnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICB0cnkge1xuICAgICAgICB2YXIgdmFsdWVzID0gT2JqZWN0LmtleXMocmVxdWVzdC5ib2R5KS5tYXAoZnVuY3Rpb24oa2V5KSB7IHJldHVybiByZXF1ZXN0LmJvZHlba2V5XTsgfSk7XG4gICAgICAgIGNvbnNvbGUubG9nKHZhbHVlcyk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IExpc3RpbmcuY3JlYXRlKHZhbHVlcyk7XG4gICAgICAgIHJlc3BvbnNlLmpzb24ocmVzdWx0KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKDUwMCk7XG4gICAgfVxufSk7XG5cbnJvdXRlci5nZXQoJy9zZWFyY2gnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zb2xlLmxvZyhyZXF1ZXN0LnF1ZXJ5Lmxpa2UpO1xuICAgIExpc3RpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5Lmxpa2UsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVGhlcmUgd2FzIGFuIGVycm9yIHJldHJpZXZpbmcgYXZhaWxhYmxlIGdhbWVzOiBcIiArIGVycik7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKDUwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pXG5cbnJvdXRlci5nZXQoJy9nZXRieW93bmVyJywgKHJlcXVlc3QsIHJlcykgPT4ge1xuICAgIGNvbnN0IHVzZXJuYW1lID0gcmVxdWVzdC5ib2R5LnVzZXJuYW1lXG4gICAgdmFyIGNyZWF0ZXF1ZXJ5ID0gXCJTRUxFQ1QgKiBGUk9NIExpc3RpbmcgV0hFUkUgbGlzdGluZ19vd25lciA9ID9cIlxuICAgIGRiLnF1ZXJ5KGNyZWF0ZXF1ZXJ5LCBbdXNlcm5hbWVdLCAoZXJyLCByb3dzLCBmaWVsZHMpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgICAgICAgcmVzLnNlbmRTdGF0dXMoNTAwKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXMuanNvbihyb3dzKVxuICAgICAgICB9XG4gICAgfSlcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listing.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "request",
        "response",
        "values",
        "Object",
        "keys",
        "body",
        "map",
        "key",
        "console",
        "log",
        "result",
        "Listing",
        "create",
        "error",
        "sendStatus",
        "get",
        "query",
        "like",
        "find",
        "err",
        "send",
        "res",
        "username",
        "createquery",
        "db",
        "rows",
        "fields",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAZA;;;;;AAcA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC9C,MAAI;AACA,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,IAApB,EAA0BC,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAAE,aAAOP,OAAO,CAACK,IAAR,CAAaE,GAAb,CAAP;AAA2B,KAAzE,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,QAAMQ,MAAM,GAAGC,oBAAQC,MAAR,CAAeV,MAAf,CAAf;;AACAD,IAAAA,QAAQ,CAACH,IAAT,CAAcY,MAAd;AACH,GALD,CAKE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAACa,UAAT,CAAoB,GAApB;AACH;AACJ,CATD;AAWAvB,MAAM,CAACwB,GAAP,CAAW,SAAX,EAAsB,UAACf,OAAD,EAAUC,QAAV,EAAuB;AACzCO,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACgB,KAAR,CAAcC,IAA1B;;AACAN,sBAAQO,IAAR,CAAalB,OAAO,CAACgB,KAAR,CAAcC,IAA3B,EAAiC,UAASE,GAAT,EAAcT,MAAd,EAAsB;AACnD,QAAIS,GAAJ,EAAS;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDU,GAAhE;AACAlB,MAAAA,QAAQ,CAACa,UAAT,CAAoB,GAApB;AACH,KAHD,MAGO;AACHb,MAAAA,QAAQ,CAACmB,IAAT,CAAcV,MAAd;AACH;AACJ,GAPD;AAQH,CAVD;AAYAnB,MAAM,CAACwB,GAAP,CAAW,aAAX,EAA0B,UAACf,OAAD,EAAUqB,GAAV,EAAkB;AACxC,MAAMC,QAAQ,GAAGtB,OAAO,CAACK,IAAR,CAAaiB,QAA9B;AACA,MAAIC,WAAW,GAAG,+CAAlB;;AACAC,uBAAGR,KAAH,CAASO,WAAT,EAAsB,CAACD,QAAD,CAAtB,EAAkC,UAACH,GAAD,EAAMM,IAAN,EAAYC,MAAZ,EAAuB;AACrD,QAAIP,GAAJ,EAAS;AACLX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACAE,MAAAA,GAAG,CAACP,UAAJ,CAAe,GAAf;AACA;AACH,KAJD,MAIO;AACHO,MAAAA,GAAG,CAACvB,IAAJ,CAAS2B,IAAT;AACH;AACJ,GARD;AASH,CAZD;AAeAE,MAAM,CAACC,OAAP,GAAiBrC,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/routes",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport db from '../config/db.config.js'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Listing from \"../models/listing\";\nimport \"@babel/polyfill\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/newListing', (request, response) => {\n    try {\n        var values = Object.keys(request.body).map(function(key) { return request.body[key]; });\n        console.log(values);\n        const result = Listing.create(values);\n        response.json(result);\n    } catch (error) {\n        response.sendStatus(500);\n    }\n});\n\nrouter.get('/search', (request, response) => {\n    console.log(request.query.like);\n    Listing.find(request.query.like, function(err, result) {\n        if (err) {\n            console.log(\"There was an error retrieving available games: \" + err);\n            response.sendStatus(500);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\nrouter.get('/getbyowner', (request, res) => {\n    const username = request.body.username\n    var createquery = \"SELECT * FROM Listing WHERE listing_owner = ?\"\n    db.query(createquery, [username], (err, rows, fields) => {\n        if (err) {\n            console.log(err)\n            res.sendStatus(500)\n            return\n        } else {\n            res.json(rows)\n        }\n    })\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557706221267
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "listing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Listing =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Listing, _ActiveRecord);\n\n  function Listing() {\n    _classCallCheck(this, Listing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listing).apply(this, arguments));\n  }\n\n  _createClass(Listing, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'listing';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['owner', 'title', 'descr'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBylike\",\n    value: function findBylike(name, num) {\n      if (num == 1) {\n        return [\"title LIKE '%\".concat(name, \"%' AND status = true\")];\n      } else if (num == 2) {\n        return [\"owner = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return Listing;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Listing;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmcuanMiXSwibmFtZXMiOlsiTGlzdGluZyIsIm5hbWUiLCJudW0iLCJBY3RpdmVSZWNvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsTzs7Ozs7Ozs7Ozs7OztnQ0FDRTtBQUNmLGFBQU8sU0FBUDtBQUNIOzs7OEJBRWdCO0FBQ2IsYUFBTyxDQUFDLE9BQUQsRUFBVSxPQUFWLEVBQW1CLE9BQW5CLENBQVA7QUFDSCxLLENBRUQ7Ozs7K0JBQ2tCQyxJLEVBQU1DLEcsRUFBSztBQUN6QixVQUFJQSxHQUFHLElBQUksQ0FBWCxFQUFjO0FBQ1YsZUFBTyx3QkFBaUJELElBQWpCLDBCQUFQO0FBQ0gsT0FGRCxNQUVPLElBQUlDLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDakIsZUFBTyxvQkFBYUQsSUFBYixPQUFQO0FBQ0g7QUFFSjs7OztFQWpCZ0NFLHdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9qcm9iLWJhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aXZlUmVjb3JkIGZyb20gJy4vYWN0aXZlLXJlY29yZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RpbmcgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAnbGlzdGluZyc7XG4gICAgfVxuXG4gICAgc3RhdGljIGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBbJ293bmVyJywgJ3RpdGxlJywgJ2Rlc2NyJ107XG4gICAgfVxuXG4gICAgLy8gT3RoZXIgTGlzdGluZyBzcGVjaWZpYyBsb2dpYyBnb2VzIGhlcmVcbiAgICBzdGF0aWMgZmluZEJ5bGlrZShuYW1lLCBudW0pIHtcbiAgICAgICAgaWYgKG51bSA9PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gW2B0aXRsZSBMSUtFICclJHtuYW1lfSUnIEFORCBzdGF0dXMgPSB0cnVlYF07XG4gICAgICAgIH0gZWxzZSBpZiAobnVtID09IDIpIHtcbiAgICAgICAgICAgIHJldHVybiBbYG93bmVyID0gJyR7bmFtZX0nYF1cbiAgICAgICAgfVxuXG4gICAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "listing.js"
      ],
      "names": [
        "Listing",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;gCACE;AACf,aAAO,SAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAP;AACH,K,CAED;;;;+BACkBC,I,EAAMC,G,EAAK;AACzB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,wBAAiBD,IAAjB,0BAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,oBAAaD,IAAb,OAAP;AACH;AAEJ;;;;EAjBgCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Listing extends ActiveRecord {\n    static tableName() {\n        return 'listing';\n    }\n\n    static columns() {\n        return ['owner', 'title', 'descr'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBylike(name, num) {\n        if (num == 1) {\n            return [`title LIKE '%${name}%' AND status = true`];\n        } else if (num == 2) {\n            return [`owner = '${name}'`]\n        }\n\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557712372935
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/active-record.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "active-record.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar db = require('../config/db.config.js');\n\nvar ActiveRecord =\n/*#__PURE__*/\nfunction () {\n  function ActiveRecord() {\n    _classCallCheck(this, ActiveRecord);\n  }\n\n  _createClass(ActiveRecord, [{\n    key: \"update\",\n    value: function update(values, callback) {}\n  }, {\n    key: \"delete\",\n    value: function _delete() {}\n  }], [{\n    key: \"find\",\n    value: function find(conditions, num, callback) {\n      var queryString = \"SELECT * FROM \".concat(this.tableName(), \" WHERE \").concat(this.findBy(conditions, num));\n      console.log(queryString);\n      db.query(queryString, function (err, result) {\n        if (err) {\n          callback(err, null);\n        } else {\n          callback(null, JSON.stringify(result));\n        }\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create(values, callback) {\n      console.log(\"at 18 on active records\");\n      var queryString = \"INSERT INTO \".concat(this.tableName(), \" (\").concat(this.columns().join(', '), \") VALUES (\\\"\").concat(values.join('\", \"'), \"\\\")\");\n      console.log(queryString);\n      db.query(queryString, function (err, result) {\n        if (err) {\n          console.log(err);\n          callback(err, null);\n        } else {\n          console.log(\"inserted\");\n          callback(null, 200);\n        }\n      });\n    }\n  }]);\n\n  return ActiveRecord;\n}();\n\nexports[\"default\"] = ActiveRecord;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2ZS1yZWNvcmQuanMiXSwibmFtZXMiOlsiZGIiLCJyZXF1aXJlIiwiQWN0aXZlUmVjb3JkIiwidmFsdWVzIiwiY2FsbGJhY2siLCJjb25kaXRpb25zIiwibnVtIiwicXVlcnlTdHJpbmciLCJ0YWJsZU5hbWUiLCJmaW5kQnkiLCJjb25zb2xlIiwibG9nIiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJKU09OIiwic3RyaW5naWZ5IiwiY29sdW1ucyIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyx3QkFBRCxDQUFsQjs7SUFHcUJDLFk7Ozs7Ozs7OzsyQkE0QlZDLE0sRUFBUUMsUSxFQUFVLENBRXhCOzs7OEJBRVEsQ0FFUjs7O3lCQWpDV0MsVSxFQUFZQyxHLEVBQUtGLFEsRUFBVTtBQUNuQyxVQUFNRyxXQUFXLDJCQUFvQixLQUFLQyxTQUFMLEVBQXBCLG9CQUE4QyxLQUFLQyxNQUFMLENBQVlKLFVBQVosRUFBd0JDLEdBQXhCLENBQTlDLENBQWpCO0FBQ0FJLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixXQUFaO0FBQ0FQLE1BQUFBLEVBQUUsQ0FBQ1ksS0FBSCxDQUFTTCxXQUFULEVBQXNCLFVBQVNNLEdBQVQsRUFBY0MsTUFBZCxFQUFzQjtBQUN4QyxZQUFJRCxHQUFKLEVBQVM7QUFDTFQsVUFBQUEsUUFBUSxDQUFDUyxHQUFELEVBQU0sSUFBTixDQUFSO0FBQ0gsU0FGRCxNQUVPO0FBQ0hULFVBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU9XLElBQUksQ0FBQ0MsU0FBTCxDQUFlRixNQUFmLENBQVAsQ0FBUjtBQUNIO0FBQ0osT0FORDtBQU9IOzs7MkJBRWFYLE0sRUFBUUMsUSxFQUFVO0FBQzVCTSxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjtBQUNBLFVBQU1KLFdBQVcseUJBQWtCLEtBQUtDLFNBQUwsRUFBbEIsZUFBdUMsS0FBS1MsT0FBTCxHQUFlQyxJQUFmLENBQW9CLElBQXBCLENBQXZDLHlCQUE4RWYsTUFBTSxDQUFDZSxJQUFQLENBQVksTUFBWixDQUE5RSxRQUFqQjtBQUNBUixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosV0FBWjtBQUNBUCxNQUFBQSxFQUFFLENBQUNZLEtBQUgsQ0FBU0wsV0FBVCxFQUFzQixVQUFTTSxHQUFULEVBQWNDLE1BQWQsRUFBc0I7QUFDeEMsWUFBSUQsR0FBSixFQUFTO0FBQ0xILFVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaO0FBQ0FULFVBQUFBLFFBQVEsQ0FBQ1MsR0FBRCxFQUFNLElBQU4sQ0FBUjtBQUNILFNBSEQsTUFHTztBQUNISCxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFaO0FBQ0FQLFVBQUFBLFFBQVEsQ0FBQyxJQUFELEVBQU8sR0FBUCxDQUFSO0FBQ0g7QUFDSixPQVJEO0FBU0giLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGRiID0gcmVxdWlyZSgnLi4vY29uZmlnL2RiLmNvbmZpZy5qcycpO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjdGl2ZVJlY29yZCB7XG4gICAgc3RhdGljIGZpbmQoY29uZGl0aW9ucywgbnVtLCBjYWxsYmFjaykge1xuICAgICAgICBjb25zdCBxdWVyeVN0cmluZyA9IGBTRUxFQ1QgKiBGUk9NICR7dGhpcy50YWJsZU5hbWUoKX0gV0hFUkUgJHt0aGlzLmZpbmRCeShjb25kaXRpb25zLCBudW0pfWA7XG4gICAgICAgIGNvbnNvbGUubG9nKHF1ZXJ5U3RyaW5nKTtcbiAgICAgICAgZGIucXVlcnkocXVlcnlTdHJpbmcsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgSlNPTi5zdHJpbmdpZnkocmVzdWx0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZSh2YWx1ZXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiYXQgMTggb24gYWN0aXZlIHJlY29yZHNcIik7XG4gICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gYElOU0VSVCBJTlRPICR7dGhpcy50YWJsZU5hbWUoKX0gKCR7dGhpcy5jb2x1bW5zKCkuam9pbignLCAnKX0pIFZBTFVFUyAoXCIke3ZhbHVlcy5qb2luKCdcIiwgXCInKX1cIilgO1xuICAgICAgICBjb25zb2xlLmxvZyhxdWVyeVN0cmluZyk7XG4gICAgICAgIGRiLnF1ZXJ5KHF1ZXJ5U3RyaW5nLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyLCBudWxsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJpbnNlcnRlZFwiKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCAyMDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHVwZGF0ZSh2YWx1ZXMsIGNhbGxiYWNrKSB7XG5cbiAgICB9XG5cbiAgICBkZWxldGUoKSB7XG5cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "active-record.js"
      ],
      "names": [
        "db",
        "require",
        "ActiveRecord",
        "values",
        "callback",
        "conditions",
        "num",
        "queryString",
        "tableName",
        "findBy",
        "console",
        "log",
        "query",
        "err",
        "result",
        "JSON",
        "stringify",
        "columns",
        "join"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,wBAAD,CAAlB;;IAGqBC,Y;;;;;;;;;2BA4BVC,M,EAAQC,Q,EAAU,CAExB;;;8BAEQ,CAER;;;yBAjCWC,U,EAAYC,G,EAAKF,Q,EAAU;AACnC,UAAMG,WAAW,2BAAoB,KAAKC,SAAL,EAApB,oBAA8C,KAAKC,MAAL,CAAYJ,UAAZ,EAAwBC,GAAxB,CAA9C,CAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAP,MAAAA,EAAE,CAACY,KAAH,CAASL,WAAT,EAAsB,UAASM,GAAT,EAAcC,MAAd,EAAsB;AACxC,YAAID,GAAJ,EAAS;AACLT,UAAAA,QAAQ,CAACS,GAAD,EAAM,IAAN,CAAR;AACH,SAFD,MAEO;AACHT,UAAAA,QAAQ,CAAC,IAAD,EAAOW,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAP,CAAR;AACH;AACJ,OAND;AAOH;;;2BAEaX,M,EAAQC,Q,EAAU;AAC5BM,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAMJ,WAAW,yBAAkB,KAAKC,SAAL,EAAlB,eAAuC,KAAKS,OAAL,GAAeC,IAAf,CAAoB,IAApB,CAAvC,yBAA8Ef,MAAM,CAACe,IAAP,CAAY,MAAZ,CAA9E,QAAjB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAP,MAAAA,EAAE,CAACY,KAAH,CAASL,WAAT,EAAsB,UAASM,GAAT,EAAcC,MAAd,EAAsB;AACxC,YAAID,GAAJ,EAAS;AACLH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAT,UAAAA,QAAQ,CAACS,GAAD,EAAM,IAAN,CAAR;AACH,SAHD,MAGO;AACHH,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAP,UAAAA,QAAQ,CAAC,IAAD,EAAO,GAAP,CAAR;AACH;AACJ,OARD;AASH",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "const db = require('../config/db.config.js');\n\n\nexport default class ActiveRecord {\n    static find(conditions, num, callback) {\n        const queryString = `SELECT * FROM ${this.tableName()} WHERE ${this.findBy(conditions, num)}`;\n        console.log(queryString);\n        db.query(queryString, function(err, result) {\n            if (err) {\n                callback(err, null);\n            } else {\n                callback(null, JSON.stringify(result));\n            }\n        })\n    }\n\n    static create(values, callback) {\n        console.log(\"at 18 on active records\");\n        const queryString = `INSERT INTO ${this.tableName()} (${this.columns().join(', ')}) VALUES (\"${values.join('\", \"')}\")`;\n        console.log(queryString);\n        db.query(queryString, function(err, result) {\n            if (err) {\n                console.log(err);\n                callback(err, null);\n            } else {\n                console.log(\"inserted\");\n                callback(null, 200);\n            }\n        })\n    }\n\n    update(values, callback) {\n\n    }\n\n    delete() {\n\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557726391996
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/Listing.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/Listing.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/Listing.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/Listing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "Listing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Listing =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Listing, _ActiveRecord);\n\n  function Listing() {\n    _classCallCheck(this, Listing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listing).apply(this, arguments));\n  }\n\n  _createClass(Listing, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'Listing';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['listing_name', 'listing_status', 'listing_desc', 'listing_owner'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findByListingName\",\n    value: function findByListingName(name) {\n      return this.find(\"listing_name LIKE %\".concat(name, \"% AND listing_status = true\"));\n    }\n  }]);\n\n  return Listing;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Listing;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RpbmcuanMiXSwibmFtZXMiOlsiTGlzdGluZyIsIm5hbWUiLCJmaW5kIiwiQWN0aXZlUmVjb3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLE87Ozs7Ozs7Ozs7Ozs7Z0NBQ0w7QUFDUixhQUFPLFNBQVA7QUFDSDs7OzhCQUVTO0FBQ04sYUFBTyxDQUFDLGNBQUQsRUFBaUIsZ0JBQWpCLEVBQW1DLGNBQW5DLEVBQW1ELGVBQW5ELENBQVA7QUFDSCxLLENBRUQ7Ozs7c0NBQ2tCQyxJLEVBQU07QUFDcEIsYUFBTyxLQUFLQyxJQUFMLDhCQUFnQ0QsSUFBaEMsaUNBQVA7QUFDSDs7OztFQVpnQ0Usd0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY3RpdmVSZWNvcmQgZnJvbSAnLi9hY3RpdmUtcmVjb3JkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGlzdGluZyBleHRlbmRzIEFjdGl2ZVJlY29yZCB7XG4gICAgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ0xpc3RpbmcnO1xuICAgIH1cblxuICAgIGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBbJ2xpc3RpbmdfbmFtZScsICdsaXN0aW5nX3N0YXR1cycsICdsaXN0aW5nX2Rlc2MnLCAnbGlzdGluZ19vd25lciddO1xuICAgIH1cblxuICAgIC8vIE90aGVyIExpc3Rpbmcgc3BlY2lmaWMgbG9naWMgZ29lcyBoZXJlXG4gICAgZmluZEJ5TGlzdGluZ05hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5maW5kKGBsaXN0aW5nX25hbWUgTElLRSAlJHtuYW1lfSUgQU5EIGxpc3Rpbmdfc3RhdHVzID0gdHJ1ZWApO1xuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Listing.js"
      ],
      "names": [
        "Listing",
        "name",
        "find",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;gCACL;AACR,aAAO,SAAP;AACH;;;8BAES;AACN,aAAO,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,cAAnC,EAAmD,eAAnD,CAAP;AACH,K,CAED;;;;sCACkBC,I,EAAM;AACpB,aAAO,KAAKC,IAAL,8BAAgCD,IAAhC,iCAAP;AACH;;;;EAZgCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Listing extends ActiveRecord {\n    tableName() {\n        return 'Listing';\n    }\n\n    columns() {\n        return ['listing_name', 'listing_status', 'listing_desc', 'listing_owner'];\n    }\n\n    // Other Listing specific logic goes here\n    findByListingName(name) {\n        return this.find(`listing_name LIKE %${name}% AND listing_status = true`);\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557377447498
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _user_model = _interopRequireDefault(require(\"../models/user_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on req.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/reg', function (request, response) {\n  var values = Object.keys(request.body).map(function (key) {\n    return request.body[key];\n  });\n\n  _user_model[\"default\"].create(values, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      response.sendStatus(result);\n    }\n  });\n});\nrouter.get('/login', function (request, response) {\n  var values = Object.keys(request.query).map(function (key) {\n    return request.query[key];\n  });\n\n  _user_model[\"default\"].find(values, 1, function (err, result) {\n    if (err) {\n      response.send(err);\n    } else {\n      response.send(result);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBvc3QiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJ2YWx1ZXMiLCJPYmplY3QiLCJrZXlzIiwiYm9keSIsIm1hcCIsImtleSIsIlVzZXIiLCJjcmVhdGUiLCJlcnIiLCJyZXN1bHQiLCJzZW5kU3RhdHVzIiwiZ2V0IiwicXVlcnkiLCJmaW5kIiwic2VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBTUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFWQTs7Ozs7QUFZQTtBQUNBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjtBQUNJOzs7Ozs7QUFJSkYsTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXQyxVQUFYLENBQXNCO0FBQzdCQyxFQUFBQSxRQUFRLEVBQUU7QUFEbUIsQ0FBdEIsQ0FBWDtBQUdBTixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdHLElBQVgsRUFBWDtBQUNBUCxNQUFNLENBQUNHLEdBQVAsQ0FBVywrQkFBWDtBQUNBSCxNQUFNLENBQUNHLEdBQVAsQ0FBVyx1QkFBWDtBQUNBOzs7OztBQUlBSCxNQUFNLENBQUNRLElBQVAsQ0FBWSxNQUFaLEVBQW9CLFVBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUN2QyxNQUFJQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixPQUFPLENBQUNLLElBQXBCLEVBQTBCQyxHQUExQixDQUE4QixVQUFTQyxHQUFULEVBQWM7QUFBRSxXQUFPUCxPQUFPLENBQUNLLElBQVIsQ0FBYUUsR0FBYixDQUFQO0FBQTJCLEdBQXpFLENBQWI7O0FBQ0FDLHlCQUFLQyxNQUFMLENBQVlQLE1BQVosRUFBb0IsVUFBU1EsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3RDLFFBQUlELEdBQUosRUFBUztBQUNMVCxNQUFBQSxRQUFRLENBQUNXLFVBQVQsQ0FBb0IsR0FBcEI7QUFDSCxLQUZELE1BRU87QUFDSFgsTUFBQUEsUUFBUSxDQUFDVyxVQUFULENBQW9CRCxNQUFwQjtBQUNIO0FBQ0osR0FORDtBQVFILENBVkQ7QUFZQXBCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxRQUFYLEVBQXFCLFVBQUNiLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUN4QyxNQUFJQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixPQUFPLENBQUNjLEtBQXBCLEVBQTJCUixHQUEzQixDQUErQixVQUFTQyxHQUFULEVBQWM7QUFBRSxXQUFPUCxPQUFPLENBQUNjLEtBQVIsQ0FBY1AsR0FBZCxDQUFQO0FBQTRCLEdBQTNFLENBQWI7O0FBQ0FDLHlCQUFLTyxJQUFMLENBQVViLE1BQVYsRUFBa0IsQ0FBbEIsRUFBcUIsVUFBU1EsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3ZDLFFBQUlELEdBQUosRUFBUztBQUNMVCxNQUFBQSxRQUFRLENBQUNlLElBQVQsQ0FBY04sR0FBZDtBQUNILEtBRkQsTUFFTztBQUNIVCxNQUFBQSxRQUFRLENBQUNlLElBQVQsQ0FBY0wsTUFBZDtBQUNIO0FBQ0osR0FORDtBQU9ILENBVEQ7QUFZQU0sTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGVcbiAqIHRoaXMgY2xhc3Mgd2lsbCBiZSB1c2VkIHRvIGhhbmRsZSBnZXQgYW5kIHBvc3QgcmVxdWVzdCBmb3IgXG4gKiB1c2VyIHJlbGF0ZWQgaW5mby4gXG4gKi9cblxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSAnY29va2llLXBhcnNlcidcbmltcG9ydCBVc2VyIGZyb20gXCIuLi9tb2RlbHMvdXNlcl9tb2RlbFwiO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXEuYm9keVxuICAgICAqL1xucm91dGVyLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgIGV4dGVuZGVkOiBmYWxzZVxufSkpO1xucm91dGVyLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5yb3V0ZXIudXNlKGNvb2tpZVBhcnNlcigpKTtcbnJvdXRlci51c2UoY29ycygpKTtcbi8qKlxuICogQHJldHVyblxuICogXG4gKi9cbnJvdXRlci5wb3N0KCcvcmVnJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgdmFyIHZhbHVlcyA9IE9iamVjdC5rZXlzKHJlcXVlc3QuYm9keSkubWFwKGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gcmVxdWVzdC5ib2R5W2tleV07IH0pO1xuICAgIFVzZXIuY3JlYXRlKHZhbHVlcywgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyg1MDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyhyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0pO1xuXG5yb3V0ZXIuZ2V0KCcvbG9naW4nLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICB2YXIgdmFsdWVzID0gT2JqZWN0LmtleXMocmVxdWVzdC5xdWVyeSkubWFwKGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gcmVxdWVzdC5xdWVyeVtrZXldOyB9KTtcbiAgICBVc2VyLmZpbmQodmFsdWVzLCAxLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "request",
        "response",
        "values",
        "Object",
        "keys",
        "body",
        "map",
        "key",
        "User",
        "create",
        "err",
        "result",
        "sendStatus",
        "get",
        "query",
        "find",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;;;;;AAYA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,MAAZ,EAAoB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvC,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,IAApB,EAA0BC,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAAE,WAAOP,OAAO,CAACK,IAAR,CAAaE,GAAb,CAAP;AAA2B,GAAzE,CAAb;;AACAC,yBAAKC,MAAL,CAAYP,MAAZ,EAAoB,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AACtC,QAAID,GAAJ,EAAS;AACLT,MAAAA,QAAQ,CAACW,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHX,MAAAA,QAAQ,CAACW,UAAT,CAAoBD,MAApB;AACH;AACJ,GAND;AAQH,CAVD;AAYApB,MAAM,CAACsB,GAAP,CAAW,QAAX,EAAqB,UAACb,OAAD,EAAUC,QAAV,EAAuB;AACxC,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACc,KAApB,EAA2BR,GAA3B,CAA+B,UAASC,GAAT,EAAc;AAAE,WAAOP,OAAO,CAACc,KAAR,CAAcP,GAAd,CAAP;AAA4B,GAA3E,CAAb;;AACAC,yBAAKO,IAAL,CAAUb,MAAV,EAAkB,CAAlB,EAAqB,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AACvC,QAAID,GAAJ,EAAS;AACLT,MAAAA,QAAQ,CAACe,IAAT,CAAcN,GAAd;AACH,KAFD,MAEO;AACHT,MAAAA,QAAQ,CAACe,IAAT,CAAcL,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAYAM,MAAM,CAACC,OAAP,GAAiB3B,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport User from \"../models/user_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on req.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/reg', (request, response) => {\n    var values = Object.keys(request.body).map(function(key) { return request.body[key]; });\n    User.create(values, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            response.sendStatus(result);\n        }\n    });\n\n});\n\nrouter.get('/login', (request, response) => {\n    var values = Object.keys(request.query).map(function(key) { return request.query[key]; });\n    User.find(values, 1, function(err, result) {\n        if (err) {\n            response.send(err);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557714222389
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "listing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _listing_model = _interopRequireDefault(require(\"../models/listing_model\"));\n\nvar _listing_group_model = _interopRequireDefault(require(\"../models/listing_group_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/newListing', function (request, response) {\n  var time = new Date();\n  var group_id = time.getTime();\n  var username = request.body.username;\n  var groupValues = [group_id, username];\n  var values = Object.keys(request.body).map(function (key) {\n    return request.body[key];\n  });\n  values.push(group_id);\n\n  _listing_model[\"default\"].create(values, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      _listing_group_model[\"default\"].create(groupValues, function (err, result) {\n        if (err) {\n          response.send('Failed to create a listing group');\n        } else {\n          response.sendStatus(result);\n        }\n      });\n    }\n  });\n});\nrouter.get('/search', function (request, response) {\n  console.log(request.query.like);\n\n  _listing_model[\"default\"].find(request.query.like, 1, function (err, result) {\n    if (err) {\n      response.send(err);\n    } else {\n      response.send(result);\n    }\n  });\n});\nrouter.get('/searchbyusername', function (request, response) {\n  var username = request.query.username;\n\n  _listing_model[\"default\"].find(username, 2, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      response.send(result);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmcuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlcXVlc3QiLCJyZXNwb25zZSIsInRpbWUiLCJEYXRlIiwiZ3JvdXBfaWQiLCJnZXRUaW1lIiwidXNlcm5hbWUiLCJib2R5IiwiZ3JvdXBWYWx1ZXMiLCJ2YWx1ZXMiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5IiwicHVzaCIsIkxpc3RpbmciLCJjcmVhdGUiLCJlcnIiLCJyZXN1bHQiLCJzZW5kU3RhdHVzIiwiTGlzdGluZ0ciLCJzZW5kIiwiZ2V0IiwiY29uc29sZSIsImxvZyIsInF1ZXJ5IiwibGlrZSIsImZpbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBWEE7Ozs7O0FBYUE7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7QUFDSTs7Ozs7O0FBSUpGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBRG1CLENBQXRCLENBQVg7QUFHQU4sTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXRyxJQUFYLEVBQVg7QUFDQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsK0JBQVg7QUFDQUgsTUFBTSxDQUFDRyxHQUFQLENBQVcsdUJBQVg7QUFDQTs7Ozs7QUFJQUgsTUFBTSxDQUFDUSxJQUFQLENBQVksYUFBWixFQUEyQixVQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDOUMsTUFBSUMsSUFBSSxHQUFHLElBQUlDLElBQUosRUFBWDtBQUNBLE1BQUlDLFFBQVEsR0FBR0YsSUFBSSxDQUFDRyxPQUFMLEVBQWY7QUFDQSxNQUFJQyxRQUFRLEdBQUdOLE9BQU8sQ0FBQ08sSUFBUixDQUFhRCxRQUE1QjtBQUNBLE1BQUlFLFdBQVcsR0FBRyxDQUFDSixRQUFELEVBQVdFLFFBQVgsQ0FBbEI7QUFDQSxNQUFJRyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZWCxPQUFPLENBQUNPLElBQXBCLEVBQTBCSyxHQUExQixDQUE4QixVQUFTQyxHQUFULEVBQWM7QUFBRSxXQUFPYixPQUFPLENBQUNPLElBQVIsQ0FBYU0sR0FBYixDQUFQO0FBQTJCLEdBQXpFLENBQWI7QUFDQUosRUFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVlWLFFBQVo7O0FBQ0FXLDRCQUFRQyxNQUFSLENBQWVQLE1BQWYsRUFBdUIsVUFBU1EsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3pDLFFBQUlELEdBQUosRUFBUztBQUNMaEIsTUFBQUEsUUFBUSxDQUFDa0IsVUFBVCxDQUFvQixHQUFwQjtBQUNILEtBRkQsTUFFTztBQUNIQyxzQ0FBU0osTUFBVCxDQUFnQlIsV0FBaEIsRUFBNkIsVUFBU1MsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQy9DLFlBQUlELEdBQUosRUFBUztBQUNMaEIsVUFBQUEsUUFBUSxDQUFDb0IsSUFBVCxDQUFjLGtDQUFkO0FBQ0gsU0FGRCxNQUVPO0FBQ0hwQixVQUFBQSxRQUFRLENBQUNrQixVQUFULENBQW9CRCxNQUFwQjtBQUNIO0FBQ0osT0FORDtBQU9IO0FBQ0osR0FaRDtBQWFILENBcEJEO0FBc0JBM0IsTUFBTSxDQUFDK0IsR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ3RCLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUN6Q3NCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZeEIsT0FBTyxDQUFDeUIsS0FBUixDQUFjQyxJQUExQjs7QUFDQVgsNEJBQVFZLElBQVIsQ0FBYTNCLE9BQU8sQ0FBQ3lCLEtBQVIsQ0FBY0MsSUFBM0IsRUFBaUMsQ0FBakMsRUFBb0MsVUFBU1QsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3RELFFBQUlELEdBQUosRUFBUztBQUNMaEIsTUFBQUEsUUFBUSxDQUFDb0IsSUFBVCxDQUFjSixHQUFkO0FBQ0gsS0FGRCxNQUVPO0FBQ0hoQixNQUFBQSxRQUFRLENBQUNvQixJQUFULENBQWNILE1BQWQ7QUFDSDtBQUNKLEdBTkQ7QUFPSCxDQVREO0FBV0EzQixNQUFNLENBQUMrQixHQUFQLENBQVcsbUJBQVgsRUFBZ0MsVUFBQ3RCLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUNuRCxNQUFNSyxRQUFRLEdBQUdOLE9BQU8sQ0FBQ3lCLEtBQVIsQ0FBY25CLFFBQS9COztBQUNBUyw0QkFBUVksSUFBUixDQUFhckIsUUFBYixFQUF1QixDQUF2QixFQUEwQixVQUFTVyxHQUFULEVBQWNDLE1BQWQsRUFBc0I7QUFDNUMsUUFBSUQsR0FBSixFQUFTO0FBQ0xoQixNQUFBQSxRQUFRLENBQUNrQixVQUFULENBQW9CLEdBQXBCO0FBQ0gsS0FGRCxNQUVPO0FBQ0hsQixNQUFBQSxRQUFRLENBQUNvQixJQUFULENBQWNILE1BQWQ7QUFDSDtBQUNKLEdBTkQ7QUFPSCxDQVREO0FBWUFVLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRDLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9qcm9iLWJhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlXG4gKiB0aGlzIGNsYXNzIHdpbGwgYmUgdXNlZCB0byBoYW5kbGUgZ2V0IGFuZCBwb3N0IHJlcXVlc3QgZm9yIFxuICogdXNlciByZWxhdGVkIGluZm8uIFxuICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInXG5pbXBvcnQgTGlzdGluZyBmcm9tIFwiLi4vbW9kZWxzL2xpc3RpbmdfbW9kZWxcIjtcbmltcG9ydCBMaXN0aW5nRyBmcm9tIFwiLi4vbW9kZWxzL2xpc3RpbmdfZ3JvdXBfbW9kZWxcIjtcblxuLy9jcmVhdGUgcm91dGVyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG4gICAgLyoqIGJvZHlQYXJzZXIudXJsZW5jb2RlZChvcHRpb25zKVxuICAgICAqIFBhcnNlcyB0aGUgdGV4dCBhcyBVUkwgZW5jb2RlZCBkYXRhICh3aGljaCBpcyBob3cgYnJvd3NlcnMgdGVuZCB0byBzZW5kIGZvcm0gZGF0YSBmcm9tIHJlZ3VsYXIgZm9ybXMgc2V0IHRvIFBPU1QpXG4gICAgICogYW5kIGV4cG9zZXMgdGhlIHJlc3VsdGluZyBvYmplY3QgKGNvbnRhaW5pbmcgdGhlIGtleXMgYW5kIHZhbHVlcykgb24gcmVxdWVzdC5ib2R5XG4gICAgICovXG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbnJvdXRlci51c2UoY29va2llUGFyc2VyKCkpO1xucm91dGVyLnVzZShjb3JzKCkpO1xuLyoqXG4gKiBAcmV0dXJuXG4gKiBcbiAqL1xucm91dGVyLnBvc3QoJy9uZXdMaXN0aW5nJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgdmFyIHRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgIHZhciBncm91cF9pZCA9IHRpbWUuZ2V0VGltZSgpO1xuICAgIHZhciB1c2VybmFtZSA9IHJlcXVlc3QuYm9keS51c2VybmFtZTtcbiAgICB2YXIgZ3JvdXBWYWx1ZXMgPSBbZ3JvdXBfaWQsIHVzZXJuYW1lXTtcbiAgICB2YXIgdmFsdWVzID0gT2JqZWN0LmtleXMocmVxdWVzdC5ib2R5KS5tYXAoZnVuY3Rpb24oa2V5KSB7IHJldHVybiByZXF1ZXN0LmJvZHlba2V5XTsgfSk7XG4gICAgdmFsdWVzLnB1c2goZ3JvdXBfaWQpO1xuICAgIExpc3RpbmcuY3JlYXRlKHZhbHVlcywgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyg1MDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgTGlzdGluZ0cuY3JlYXRlKGdyb3VwVmFsdWVzLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZCgnRmFpbGVkIHRvIGNyZWF0ZSBhIGxpc3RpbmcgZ3JvdXAnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH0pO1xufSk7XG5cbnJvdXRlci5nZXQoJy9zZWFyY2gnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zb2xlLmxvZyhyZXF1ZXN0LnF1ZXJ5Lmxpa2UpO1xuICAgIExpc3RpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5Lmxpa2UsIDEsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQoZXJyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH0pO1xufSlcblxucm91dGVyLmdldCgnL3NlYXJjaGJ5dXNlcm5hbWUnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCB1c2VybmFtZSA9IHJlcXVlc3QucXVlcnkudXNlcm5hbWVcbiAgICBMaXN0aW5nLmZpbmQodXNlcm5hbWUsIDIsIGZ1bmN0aW9uKGVyciwgcmVzdWx0KSB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmRTdGF0dXMoNTAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH0pXG59KVxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "listing.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "request",
        "response",
        "time",
        "Date",
        "group_id",
        "getTime",
        "username",
        "body",
        "groupValues",
        "values",
        "Object",
        "keys",
        "map",
        "key",
        "push",
        "Listing",
        "create",
        "err",
        "result",
        "sendStatus",
        "ListingG",
        "send",
        "get",
        "console",
        "log",
        "query",
        "like",
        "find",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAXA;;;;;AAaA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC9C,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,QAAQ,GAAGF,IAAI,CAACG,OAAL,EAAf;AACA,MAAIC,QAAQ,GAAGN,OAAO,CAACO,IAAR,CAAaD,QAA5B;AACA,MAAIE,WAAW,GAAG,CAACJ,QAAD,EAAWE,QAAX,CAAlB;AACA,MAAIG,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYX,OAAO,CAACO,IAApB,EAA0BK,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAAE,WAAOb,OAAO,CAACO,IAAR,CAAaM,GAAb,CAAP;AAA2B,GAAzE,CAAb;AACAJ,EAAAA,MAAM,CAACK,IAAP,CAAYV,QAAZ;;AACAW,4BAAQC,MAAR,CAAeP,MAAf,EAAuB,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AACzC,QAAID,GAAJ,EAAS;AACLhB,MAAAA,QAAQ,CAACkB,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHC,sCAASJ,MAAT,CAAgBR,WAAhB,EAA6B,UAASS,GAAT,EAAcC,MAAd,EAAsB;AAC/C,YAAID,GAAJ,EAAS;AACLhB,UAAAA,QAAQ,CAACoB,IAAT,CAAc,kCAAd;AACH,SAFD,MAEO;AACHpB,UAAAA,QAAQ,CAACkB,UAAT,CAAoBD,MAApB;AACH;AACJ,OAND;AAOH;AACJ,GAZD;AAaH,CApBD;AAsBA3B,MAAM,CAAC+B,GAAP,CAAW,SAAX,EAAsB,UAACtB,OAAD,EAAUC,QAAV,EAAuB;AACzCsB,EAAAA,OAAO,CAACC,GAAR,CAAYxB,OAAO,CAACyB,KAAR,CAAcC,IAA1B;;AACAX,4BAAQY,IAAR,CAAa3B,OAAO,CAACyB,KAAR,CAAcC,IAA3B,EAAiC,CAAjC,EAAoC,UAAST,GAAT,EAAcC,MAAd,EAAsB;AACtD,QAAID,GAAJ,EAAS;AACLhB,MAAAA,QAAQ,CAACoB,IAAT,CAAcJ,GAAd;AACH,KAFD,MAEO;AACHhB,MAAAA,QAAQ,CAACoB,IAAT,CAAcH,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAWA3B,MAAM,CAAC+B,GAAP,CAAW,mBAAX,EAAgC,UAACtB,OAAD,EAAUC,QAAV,EAAuB;AACnD,MAAMK,QAAQ,GAAGN,OAAO,CAACyB,KAAR,CAAcnB,QAA/B;;AACAS,4BAAQY,IAAR,CAAarB,QAAb,EAAuB,CAAvB,EAA0B,UAASW,GAAT,EAAcC,MAAd,EAAsB;AAC5C,QAAID,GAAJ,EAAS;AACLhB,MAAAA,QAAQ,CAACkB,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHlB,MAAAA,QAAQ,CAACoB,IAAT,CAAcH,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAYAU,MAAM,CAACC,OAAP,GAAiBtC,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Listing from \"../models/listing_model\";\nimport ListingG from \"../models/listing_group_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/newListing', (request, response) => {\n    var time = new Date();\n    var group_id = time.getTime();\n    var username = request.body.username;\n    var groupValues = [group_id, username];\n    var values = Object.keys(request.body).map(function(key) { return request.body[key]; });\n    values.push(group_id);\n    Listing.create(values, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            ListingG.create(groupValues, function(err, result) {\n                if (err) {\n                    response.send('Failed to create a listing group');\n                } else {\n                    response.sendStatus(result);\n                }\n            })\n        }\n    });\n});\n\nrouter.get('/search', (request, response) => {\n    console.log(request.query.like);\n    Listing.find(request.query.like, 1, function(err, result) {\n        if (err) {\n            response.send(err);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\nrouter.get('/searchbyusername', (request, response) => {\n    const username = request.query.username\n    Listing.find(username, 2, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            response.send(result);\n        }\n    })\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557731037101
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/user_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "user_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Users =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Users, _ActiveRecord);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'user';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['username', 'email', 'password', 'first_name', 'last_name', 'city', 'description'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"username = \\\"\".concat(name.join('\" AND password = \"'), \"\\\"\")];\n      }\n    }\n  }]);\n\n  return Users;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfbW9kZWwuanMiXSwibmFtZXMiOlsiVXNlcnMiLCJuYW1lIiwibnVtIiwiam9pbiIsIkFjdGl2ZVJlY29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxLOzs7Ozs7Ozs7Ozs7O2dDQUNFO0FBQ2YsYUFBTyxNQUFQO0FBQ0g7Ozs4QkFFZ0I7QUFDYixhQUFPLENBQUMsVUFBRCxFQUFhLE9BQWIsRUFBc0IsVUFBdEIsRUFBa0MsWUFBbEMsRUFBZ0QsV0FBaEQsRUFBNkQsTUFBN0QsRUFBcUUsYUFBckUsQ0FBUDtBQUNILEssQ0FFRDs7OzsyQkFDY0MsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8sd0JBQWdCRCxJQUFJLENBQUNFLElBQUwsQ0FBVSxvQkFBVixDQUFoQixRQUFQO0FBQ0g7QUFDSjs7OztFQWQ4QkMsd0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2pyb2ItYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY3RpdmVSZWNvcmQgZnJvbSAnLi9hY3RpdmUtcmVjb3JkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlcnMgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAndXNlcic7XG4gICAgfVxuXG4gICAgc3RhdGljIGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBbJ3VzZXJuYW1lJywgJ2VtYWlsJywgJ3Bhc3N3b3JkJywgJ2ZpcnN0X25hbWUnLCAnbGFzdF9uYW1lJywgJ2NpdHknLCAnZGVzY3JpcHRpb24nXTtcbiAgICB9XG5cbiAgICAvLyBPdGhlciBMaXN0aW5nIHNwZWNpZmljIGxvZ2ljIGdvZXMgaGVyZVxuICAgIHN0YXRpYyBmaW5kQnkobmFtZSwgbnVtKSB7XG4gICAgICAgIGlmIChudW0gPT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIFtgdXNlcm5hbWUgPSBcIiR7bmFtZS5qb2luKCdcIiBBTkQgcGFzc3dvcmQgPSBcIicpfVwiYF07XG4gICAgICAgIH1cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "user_model.js"
      ],
      "names": [
        "Users",
        "name",
        "num",
        "join",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;;;gCACE;AACf,aAAO,MAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,UAAtB,EAAkC,YAAlC,EAAgD,WAAhD,EAA6D,MAA7D,EAAqE,aAArE,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,wBAAgBD,IAAI,CAACE,IAAL,CAAU,oBAAV,CAAhB,QAAP;AACH;AACJ;;;;EAd8BC,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Users extends ActiveRecord {\n    static tableName() {\n        return 'user';\n    }\n\n    static columns() {\n        return ['username', 'email', 'password', 'first_name', 'last_name', 'city', 'description'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`username = \"${name.join('\" AND password = \"')}\"`];\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557726143723
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "listing_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Listing =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Listing, _ActiveRecord);\n\n  function Listing() {\n    _classCallCheck(this, Listing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listing).apply(this, arguments));\n  }\n\n  _createClass(Listing, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'listing';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['username', 'title', 'descr', 'listing_id'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"title LIKE '%\".concat(name, \"%' AND status = true\")];\n      } else if (num == 2) {\n        return [\"username = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return Listing;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Listing;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfbW9kZWwuanMiXSwibmFtZXMiOlsiTGlzdGluZyIsIm5hbWUiLCJudW0iLCJBY3RpdmVSZWNvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsTzs7Ozs7Ozs7Ozs7OztnQ0FDRTtBQUNmLGFBQU8sU0FBUDtBQUNIOzs7OEJBRWdCO0FBQ2IsYUFBTyxDQUFDLFVBQUQsRUFBYSxPQUFiLEVBQXNCLE9BQXRCLEVBQStCLFlBQS9CLENBQVA7QUFDSCxLLENBRUQ7Ozs7MkJBQ2NDLEksRUFBTUMsRyxFQUFLO0FBQ3JCLFVBQUlBLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDVixlQUFPLHdCQUFpQkQsSUFBakIsMEJBQVA7QUFDSCxPQUZELE1BRU8sSUFBSUMsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNqQixlQUFPLHVCQUFnQkQsSUFBaEIsT0FBUDtBQUNIO0FBRUo7Ozs7RUFqQmdDRSx3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvanJvYi1iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGl2ZVJlY29yZCBmcm9tICcuL2FjdGl2ZS1yZWNvcmQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0aW5nIGV4dGVuZHMgQWN0aXZlUmVjb3JkIHtcbiAgICBzdGF0aWMgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ2xpc3RpbmcnO1xuICAgIH1cblxuICAgIHN0YXRpYyBjb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gWyd1c2VybmFtZScsICd0aXRsZScsICdkZXNjcicsICdsaXN0aW5nX2lkJ107XG4gICAgfVxuXG4gICAgLy8gT3RoZXIgTGlzdGluZyBzcGVjaWZpYyBsb2dpYyBnb2VzIGhlcmVcbiAgICBzdGF0aWMgZmluZEJ5KG5hbWUsIG51bSkge1xuICAgICAgICBpZiAobnVtID09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBbYHRpdGxlIExJS0UgJyUke25hbWV9JScgQU5EIHN0YXR1cyA9IHRydWVgXTtcbiAgICAgICAgfSBlbHNlIGlmIChudW0gPT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIFtgdXNlcm5hbWUgPSAnJHtuYW1lfSdgXVxuICAgICAgICB9XG5cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "listing_model.js"
      ],
      "names": [
        "Listing",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;gCACE;AACf,aAAO,SAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,EAA+B,YAA/B,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,wBAAiBD,IAAjB,0BAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,uBAAgBD,IAAhB,OAAP;AACH;AAEJ;;;;EAjBgCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Listing extends ActiveRecord {\n    static tableName() {\n        return 'listing';\n    }\n\n    static columns() {\n        return ['username', 'title', 'descr', 'listing_id'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`title LIKE '%${name}%' AND status = true`];\n        } else if (num == 2) {\n            return [`username = '${name}'`]\n        }\n\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557727928624
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/rating.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "rating.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _rating_model = _interopRequireDefault(require(\"../models/rating_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on req.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/rate', function (request, response) {\n  var values = Object.keys(request.body).map(function (key) {\n    return request.body[key];\n  });\n\n  _rating_model[\"default\"].create(values, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      response.sendStatus(result);\n    }\n  });\n});\nrouter.get('/searchRatingByUserRated', function (request, response) {\n  //var values = Object.keys(request.query).map(function(key) { return request.query[key]; });\n  _rating_model[\"default\"].find(request.query.username, 1, function (err, result) {\n    if (err) {\n      response.send(err);\n    } else {\n      response.send(result);\n    }\n  });\n});\nrouter.get('/searchRatingByUserRating', function (request, response) {\n  //var values = Object.keys(request.query).map(function(key) { return request.query[key]; });\n  _rating_model[\"default\"].find(request.query.username, 2, function (err, result) {\n    if (err) {\n      response.send(err);\n    } else {\n      response.send(result);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdGluZy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwidmFsdWVzIiwiT2JqZWN0Iiwia2V5cyIsImJvZHkiLCJtYXAiLCJrZXkiLCJSYXRpbmciLCJjcmVhdGUiLCJlcnIiLCJyZXN1bHQiLCJzZW5kU3RhdHVzIiwiZ2V0IiwiZmluZCIsInF1ZXJ5IiwidXNlcm5hbWUiLCJzZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFNQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVZBOzs7OztBQVlBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmO0FBQ0k7Ozs7OztBQUlKRixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdDLFVBQVgsQ0FBc0I7QUFDN0JDLEVBQUFBLFFBQVEsRUFBRTtBQURtQixDQUF0QixDQUFYO0FBR0FOLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0csSUFBWCxFQUFYO0FBQ0FQLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLCtCQUFYO0FBQ0FILE1BQU0sQ0FBQ0csR0FBUCxDQUFXLHVCQUFYO0FBRUE7Ozs7O0FBSUFILE1BQU0sQ0FBQ1EsSUFBUCxDQUFZLE9BQVosRUFBcUIsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQ3hDLE1BQUlDLE1BQU0sR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlKLE9BQU8sQ0FBQ0ssSUFBcEIsRUFBMEJDLEdBQTFCLENBQThCLFVBQVNDLEdBQVQsRUFBYztBQUFFLFdBQU9QLE9BQU8sQ0FBQ0ssSUFBUixDQUFhRSxHQUFiLENBQVA7QUFBMkIsR0FBekUsQ0FBYjs7QUFDQUMsMkJBQU9DLE1BQVAsQ0FBY1AsTUFBZCxFQUFzQixVQUFTUSxHQUFULEVBQWNDLE1BQWQsRUFBc0I7QUFDeEMsUUFBSUQsR0FBSixFQUFTO0FBQ0xULE1BQUFBLFFBQVEsQ0FBQ1csVUFBVCxDQUFvQixHQUFwQjtBQUNILEtBRkQsTUFFTztBQUNIWCxNQUFBQSxRQUFRLENBQUNXLFVBQVQsQ0FBb0JELE1BQXBCO0FBQ0g7QUFDSixHQU5EO0FBUUgsQ0FWRDtBQVlBcEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLDBCQUFYLEVBQXVDLFVBQUNiLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUMxRDtBQUNBTywyQkFBT00sSUFBUCxDQUFZZCxPQUFPLENBQUNlLEtBQVIsQ0FBY0MsUUFBMUIsRUFBb0MsQ0FBcEMsRUFBdUMsVUFBU04sR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3pELFFBQUlELEdBQUosRUFBUztBQUNMVCxNQUFBQSxRQUFRLENBQUNnQixJQUFULENBQWNQLEdBQWQ7QUFDSCxLQUZELE1BRU87QUFDSFQsTUFBQUEsUUFBUSxDQUFDZ0IsSUFBVCxDQUFjTixNQUFkO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FURDtBQVdBcEIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLDJCQUFYLEVBQXdDLFVBQUNiLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUMzRDtBQUNBTywyQkFBT00sSUFBUCxDQUFZZCxPQUFPLENBQUNlLEtBQVIsQ0FBY0MsUUFBMUIsRUFBb0MsQ0FBcEMsRUFBdUMsVUFBU04sR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQ3pELFFBQUlELEdBQUosRUFBUztBQUNMVCxNQUFBQSxRQUFRLENBQUNnQixJQUFULENBQWNQLEdBQWQ7QUFDSCxLQUZELE1BRU87QUFDSFQsTUFBQUEsUUFBUSxDQUFDZ0IsSUFBVCxDQUFjTixNQUFkO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FURDtBQVlBTyxNQUFNLENBQUNDLE9BQVAsR0FBaUI1QixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvanJvYi1iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZVxuICogdGhpcyBjbGFzcyB3aWxsIGJlIHVzZWQgdG8gaGFuZGxlIGdldCBhbmQgcG9zdCByZXF1ZXN0IGZvciBcbiAqIHVzZXIgcmVsYXRlZCBpbmZvLiBcbiAqL1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJ1xuaW1wb3J0IFJhdGluZyBmcm9tIFwiLi4vbW9kZWxzL3JhdGluZ19tb2RlbFwiO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXEuYm9keVxuICAgICAqL1xucm91dGVyLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe1xuICAgIGV4dGVuZGVkOiBmYWxzZVxufSkpO1xucm91dGVyLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5yb3V0ZXIudXNlKGNvb2tpZVBhcnNlcigpKTtcbnJvdXRlci51c2UoY29ycygpKTtcblxuLyoqXG4gKiBAcmV0dXJuXG4gKiBcbiAqL1xucm91dGVyLnBvc3QoJy9yYXRlJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgdmFyIHZhbHVlcyA9IE9iamVjdC5rZXlzKHJlcXVlc3QuYm9keSkubWFwKGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gcmVxdWVzdC5ib2R5W2tleV07IH0pO1xuICAgIFJhdGluZy5jcmVhdGUodmFsdWVzLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKDUwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcblxufSk7XG5cbnJvdXRlci5nZXQoJy9zZWFyY2hSYXRpbmdCeVVzZXJSYXRlZCcsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIC8vdmFyIHZhbHVlcyA9IE9iamVjdC5rZXlzKHJlcXVlc3QucXVlcnkpLm1hcChmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHJlcXVlc3QucXVlcnlba2V5XTsgfSk7XG4gICAgUmF0aW5nLmZpbmQocmVxdWVzdC5xdWVyeS51c2VybmFtZSwgMSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG59KVxuXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoUmF0aW5nQnlVc2VyUmF0aW5nJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgLy92YXIgdmFsdWVzID0gT2JqZWN0LmtleXMocmVxdWVzdC5xdWVyeSkubWFwKGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gcmVxdWVzdC5xdWVyeVtrZXldOyB9KTtcbiAgICBSYXRpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5LnVzZXJuYW1lLCAyLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKGVycik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "rating.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "request",
        "response",
        "values",
        "Object",
        "keys",
        "body",
        "map",
        "key",
        "Rating",
        "create",
        "err",
        "result",
        "sendStatus",
        "get",
        "find",
        "query",
        "username",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;;;;;AAYA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AAEA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAqB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACxC,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,IAApB,EAA0BC,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAAE,WAAOP,OAAO,CAACK,IAAR,CAAaE,GAAb,CAAP;AAA2B,GAAzE,CAAb;;AACAC,2BAAOC,MAAP,CAAcP,MAAd,EAAsB,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AACxC,QAAID,GAAJ,EAAS;AACLT,MAAAA,QAAQ,CAACW,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHX,MAAAA,QAAQ,CAACW,UAAT,CAAoBD,MAApB;AACH;AACJ,GAND;AAQH,CAVD;AAYApB,MAAM,CAACsB,GAAP,CAAW,0BAAX,EAAuC,UAACb,OAAD,EAAUC,QAAV,EAAuB;AAC1D;AACAO,2BAAOM,IAAP,CAAYd,OAAO,CAACe,KAAR,CAAcC,QAA1B,EAAoC,CAApC,EAAuC,UAASN,GAAT,EAAcC,MAAd,EAAsB;AACzD,QAAID,GAAJ,EAAS;AACLT,MAAAA,QAAQ,CAACgB,IAAT,CAAcP,GAAd;AACH,KAFD,MAEO;AACHT,MAAAA,QAAQ,CAACgB,IAAT,CAAcN,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAWApB,MAAM,CAACsB,GAAP,CAAW,2BAAX,EAAwC,UAACb,OAAD,EAAUC,QAAV,EAAuB;AAC3D;AACAO,2BAAOM,IAAP,CAAYd,OAAO,CAACe,KAAR,CAAcC,QAA1B,EAAoC,CAApC,EAAuC,UAASN,GAAT,EAAcC,MAAd,EAAsB;AACzD,QAAID,GAAJ,EAAS;AACLT,MAAAA,QAAQ,CAACgB,IAAT,CAAcP,GAAd;AACH,KAFD,MAEO;AACHT,MAAAA,QAAQ,CAACgB,IAAT,CAAcN,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAYAO,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Rating from \"../models/rating_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on req.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n\n/**\n * @return\n * \n */\nrouter.post('/rate', (request, response) => {\n    var values = Object.keys(request.body).map(function(key) { return request.body[key]; });\n    Rating.create(values, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            response.sendStatus(result);\n        }\n    });\n\n});\n\nrouter.get('/searchRatingByUserRated', (request, response) => {\n    //var values = Object.keys(request.query).map(function(key) { return request.query[key]; });\n    Rating.find(request.query.username, 1, function(err, result) {\n        if (err) {\n            response.send(err);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\nrouter.get('/searchRatingByUserRating', (request, response) => {\n    //var values = Object.keys(request.query).map(function(key) { return request.query[key]; });\n    Rating.find(request.query.username, 2, function(err, result) {\n        if (err) {\n            response.send(err);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557726446960
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "rating_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Rating =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Rating, _ActiveRecord);\n\n  function Rating() {\n    _classCallCheck(this, Rating);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Rating).apply(this, arguments));\n  }\n\n  _createClass(Rating, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'rating';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['rating', 'user_rated', 'user_rating', 'comments'];\n    }\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"user_rated = '\".concat(name, \"'\")];\n      } else if (num == 2) {\n        return [\"user_rating = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return Rating;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Rating;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdGluZ19tb2RlbC5qcyJdLCJuYW1lcyI6WyJSYXRpbmciLCJuYW1lIiwibnVtIiwiQWN0aXZlUmVjb3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLE07Ozs7Ozs7Ozs7Ozs7Z0NBQ0U7QUFDZixhQUFPLFFBQVA7QUFDSDs7OzhCQUVnQjtBQUNiLGFBQU8sQ0FBQyxRQUFELEVBQVcsWUFBWCxFQUF5QixhQUF6QixFQUF3QyxVQUF4QyxDQUFQO0FBQ0g7OzsyQkFFYUMsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8seUJBQWtCRCxJQUFsQixPQUFQO0FBQ0gsT0FGRCxNQUVPLElBQUlDLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDakIsZUFBTywwQkFBbUJELElBQW5CLE9BQVA7QUFDSDtBQUNKOzs7O0VBZitCRSx3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvanJvYi1iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGl2ZVJlY29yZCBmcm9tICcuL2FjdGl2ZS1yZWNvcmQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYXRpbmcgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAncmF0aW5nJztcbiAgICB9XG5cbiAgICBzdGF0aWMgY29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIFsncmF0aW5nJywgJ3VzZXJfcmF0ZWQnLCAndXNlcl9yYXRpbmcnLCAnY29tbWVudHMnXTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZmluZEJ5KG5hbWUsIG51bSkge1xuICAgICAgICBpZiAobnVtID09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBbYHVzZXJfcmF0ZWQgPSAnJHtuYW1lfSdgXVxuICAgICAgICB9IGVsc2UgaWYgKG51bSA9PSAyKSB7XG4gICAgICAgICAgICByZXR1cm4gW2B1c2VyX3JhdGluZyA9ICcke25hbWV9J2BdXG4gICAgICAgIH1cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "rating_model.js"
      ],
      "names": [
        "Rating",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,M;;;;;;;;;;;;;gCACE;AACf,aAAO,QAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,QAAD,EAAW,YAAX,EAAyB,aAAzB,EAAwC,UAAxC,CAAP;AACH;;;2BAEaC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,yBAAkBD,IAAlB,OAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,0BAAmBD,IAAnB,OAAP;AACH;AACJ;;;;EAf+BE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Rating extends ActiveRecord {\n    static tableName() {\n        return 'rating';\n    }\n\n    static columns() {\n        return ['rating', 'user_rated', 'user_rating', 'comments'];\n    }\n\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`user_rated = '${name}'`]\n        } else if (num == 2) {\n            return [`user_rating = '${name}'`]\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557726218389
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "listing_group.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _listing_group_model = _interopRequireDefault(require(\"../models/listing_group_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/newMember', function (request, response) {\n  var values = Object.keys(request.body).map(function (key) {\n    return request.body[key];\n  });\n  console.log(values);\n\n  _listing_group_model[\"default\"].create(values, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      response.sendStatus(result);\n    }\n  });\n});\nrouter.get('/getGroupByListingID', function (request, response) {\n  _listing_group_model[\"default\"].find(request.query.groupID, 1, function (err, result) {\n    if (err) {\n      response.send(err);\n    } else {\n      response.send(result);\n    }\n  });\n});\nrouter.get('/searchGroupByUsername', function (request, response) {\n  var username = request.query.username;\n\n  _listing_group_model[\"default\"].find(username, 2, function (err, result) {\n    if (err) {\n      response.sendStatus(500);\n    } else {\n      response.send(result);\n    }\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfZ3JvdXAuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlcXVlc3QiLCJyZXNwb25zZSIsInZhbHVlcyIsIk9iamVjdCIsImtleXMiLCJib2R5IiwibWFwIiwia2V5IiwiY29uc29sZSIsImxvZyIsIkxpc3RpbmdHIiwiY3JlYXRlIiwiZXJyIiwicmVzdWx0Iiwic2VuZFN0YXR1cyIsImdldCIsImZpbmQiLCJxdWVyeSIsImdyb3VwSUQiLCJzZW5kIiwidXNlcm5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBVkE7Ozs7O0FBWUE7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7QUFDSTs7Ozs7O0FBSUpGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBRG1CLENBQXRCLENBQVg7QUFHQU4sTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXRyxJQUFYLEVBQVg7QUFDQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsK0JBQVg7QUFDQUgsTUFBTSxDQUFDRyxHQUFQLENBQVcsdUJBQVg7QUFDQTs7Ozs7QUFJQUgsTUFBTSxDQUFDUSxJQUFQLENBQVksWUFBWixFQUEwQixVQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDN0MsTUFBSUMsTUFBTSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWUosT0FBTyxDQUFDSyxJQUFwQixFQUEwQkMsR0FBMUIsQ0FBOEIsVUFBU0MsR0FBVCxFQUFjO0FBQUUsV0FBT1AsT0FBTyxDQUFDSyxJQUFSLENBQWFFLEdBQWIsQ0FBUDtBQUEyQixHQUF6RSxDQUFiO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxNQUFaOztBQUNBUSxrQ0FBU0MsTUFBVCxDQUFnQlQsTUFBaEIsRUFBd0IsVUFBU1UsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQzFDLFFBQUlELEdBQUosRUFBUztBQUNMWCxNQUFBQSxRQUFRLENBQUNhLFVBQVQsQ0FBb0IsR0FBcEI7QUFDSCxLQUZELE1BRU87QUFDSGIsTUFBQUEsUUFBUSxDQUFDYSxVQUFULENBQW9CRCxNQUFwQjtBQUNIO0FBQ0osR0FORDtBQU9ILENBVkQ7QUFZQXRCLE1BQU0sQ0FBQ3dCLEdBQVAsQ0FBVyxzQkFBWCxFQUFtQyxVQUFDZixPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDdERTLGtDQUFTTSxJQUFULENBQWNoQixPQUFPLENBQUNpQixLQUFSLENBQWNDLE9BQTVCLEVBQXFDLENBQXJDLEVBQXdDLFVBQVNOLEdBQVQsRUFBY0MsTUFBZCxFQUFzQjtBQUMxRCxRQUFJRCxHQUFKLEVBQVM7QUFDTFgsTUFBQUEsUUFBUSxDQUFDa0IsSUFBVCxDQUFjUCxHQUFkO0FBQ0gsS0FGRCxNQUVPO0FBQ0hYLE1BQUFBLFFBQVEsQ0FBQ2tCLElBQVQsQ0FBY04sTUFBZDtBQUNIO0FBQ0osR0FORDtBQU9ILENBUkQ7QUFVQXRCLE1BQU0sQ0FBQ3dCLEdBQVAsQ0FBVyx3QkFBWCxFQUFxQyxVQUFDZixPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDeEQsTUFBTW1CLFFBQVEsR0FBR3BCLE9BQU8sQ0FBQ2lCLEtBQVIsQ0FBY0csUUFBL0I7O0FBQ0FWLGtDQUFTTSxJQUFULENBQWNJLFFBQWQsRUFBd0IsQ0FBeEIsRUFBMkIsVUFBU1IsR0FBVCxFQUFjQyxNQUFkLEVBQXNCO0FBQzdDLFFBQUlELEdBQUosRUFBUztBQUNMWCxNQUFBQSxRQUFRLENBQUNhLFVBQVQsQ0FBb0IsR0FBcEI7QUFDSCxLQUZELE1BRU87QUFDSGIsTUFBQUEsUUFBUSxDQUFDa0IsSUFBVCxDQUFjTixNQUFkO0FBQ0g7QUFDSixHQU5EO0FBT0gsQ0FURDtBQVlBUSxNQUFNLENBQUNDLE9BQVAsR0FBaUIvQixNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvanJvYi1iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZVxuICogdGhpcyBjbGFzcyB3aWxsIGJlIHVzZWQgdG8gaGFuZGxlIGdldCBhbmQgcG9zdCByZXF1ZXN0IGZvciBcbiAqIHVzZXIgcmVsYXRlZCBpbmZvLiBcbiAqL1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJ1xuaW1wb3J0IExpc3RpbmdHIGZyb20gXCIuLi9tb2RlbHMvbGlzdGluZ19ncm91cF9tb2RlbFwiO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXF1ZXN0LmJvZHlcbiAgICAgKi9cbnJvdXRlci51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgICBleHRlbmRlZDogZmFsc2Vcbn0pKTtcbnJvdXRlci51c2UoYm9keVBhcnNlci5qc29uKCkpO1xucm91dGVyLnVzZShjb29raWVQYXJzZXIoKSk7XG5yb3V0ZXIudXNlKGNvcnMoKSk7XG4vKipcbiAqIEByZXR1cm5cbiAqIFxuICovXG5yb3V0ZXIucG9zdCgnL25ld01lbWJlcicsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIHZhciB2YWx1ZXMgPSBPYmplY3Qua2V5cyhyZXF1ZXN0LmJvZHkpLm1hcChmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHJlcXVlc3QuYm9keVtrZXldOyB9KTtcbiAgICBjb25zb2xlLmxvZyh2YWx1ZXMpXG4gICAgTGlzdGluZ0cuY3JlYXRlKHZhbHVlcywgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyg1MDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyhyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcblxucm91dGVyLmdldCgnL2dldEdyb3VwQnlMaXN0aW5nSUQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBMaXN0aW5nRy5maW5kKHJlcXVlc3QucXVlcnkuZ3JvdXBJRCwgMSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChlcnIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSk7XG59KVxuXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoR3JvdXBCeVVzZXJuYW1lJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgdXNlcm5hbWUgPSByZXF1ZXN0LnF1ZXJ5LnVzZXJuYW1lXG4gICAgTGlzdGluZ0cuZmluZCh1c2VybmFtZSwgMiwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cyg1MDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyZXN1bHQpO1xuICAgICAgICB9XG4gICAgfSlcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listing_group.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "request",
        "response",
        "values",
        "Object",
        "keys",
        "body",
        "map",
        "key",
        "console",
        "log",
        "ListingG",
        "create",
        "err",
        "result",
        "sendStatus",
        "get",
        "find",
        "query",
        "groupID",
        "send",
        "username",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;;;;;AAYA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC7C,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAACK,IAApB,EAA0BC,GAA1B,CAA8B,UAASC,GAAT,EAAc;AAAE,WAAOP,OAAO,CAACK,IAAR,CAAaE,GAAb,CAAP;AAA2B,GAAzE,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACAQ,kCAASC,MAAT,CAAgBT,MAAhB,EAAwB,UAASU,GAAT,EAAcC,MAAd,EAAsB;AAC1C,QAAID,GAAJ,EAAS;AACLX,MAAAA,QAAQ,CAACa,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHb,MAAAA,QAAQ,CAACa,UAAT,CAAoBD,MAApB;AACH;AACJ,GAND;AAOH,CAVD;AAYAtB,MAAM,CAACwB,GAAP,CAAW,sBAAX,EAAmC,UAACf,OAAD,EAAUC,QAAV,EAAuB;AACtDS,kCAASM,IAAT,CAAchB,OAAO,CAACiB,KAAR,CAAcC,OAA5B,EAAqC,CAArC,EAAwC,UAASN,GAAT,EAAcC,MAAd,EAAsB;AAC1D,QAAID,GAAJ,EAAS;AACLX,MAAAA,QAAQ,CAACkB,IAAT,CAAcP,GAAd;AACH,KAFD,MAEO;AACHX,MAAAA,QAAQ,CAACkB,IAAT,CAAcN,MAAd;AACH;AACJ,GAND;AAOH,CARD;AAUAtB,MAAM,CAACwB,GAAP,CAAW,wBAAX,EAAqC,UAACf,OAAD,EAAUC,QAAV,EAAuB;AACxD,MAAMmB,QAAQ,GAAGpB,OAAO,CAACiB,KAAR,CAAcG,QAA/B;;AACAV,kCAASM,IAAT,CAAcI,QAAd,EAAwB,CAAxB,EAA2B,UAASR,GAAT,EAAcC,MAAd,EAAsB;AAC7C,QAAID,GAAJ,EAAS;AACLX,MAAAA,QAAQ,CAACa,UAAT,CAAoB,GAApB;AACH,KAFD,MAEO;AACHb,MAAAA,QAAQ,CAACkB,IAAT,CAAcN,MAAd;AACH;AACJ,GAND;AAOH,CATD;AAYAQ,MAAM,CAACC,OAAP,GAAiB/B,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport ListingG from \"../models/listing_group_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/newMember', (request, response) => {\n    var values = Object.keys(request.body).map(function(key) { return request.body[key]; });\n    console.log(values)\n    ListingG.create(values, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            response.sendStatus(result);\n        }\n    });\n});\n\nrouter.get('/getGroupByListingID', (request, response) => {\n    ListingG.find(request.query.groupID, 1, function(err, result) {\n        if (err) {\n            response.send(err);\n        } else {\n            response.send(result);\n        }\n    });\n})\n\nrouter.get('/searchGroupByUsername', (request, response) => {\n    const username = request.query.username\n    ListingG.find(username, 2, function(err, result) {\n        if (err) {\n            response.sendStatus(500);\n        } else {\n            response.send(result);\n        }\n    })\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1557731466158
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "listing_group_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Listing =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Listing, _ActiveRecord);\n\n  function Listing() {\n    _classCallCheck(this, Listing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listing).apply(this, arguments));\n  }\n\n  _createClass(Listing, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'listing_group';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['group_id', 'username'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"group_id = '\".concat(name, \"'\")];\n      } else if (num == 2) {\n        return [\"username = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return Listing;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Listing;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfZ3JvdXBfbW9kZWwuanMiXSwibmFtZXMiOlsiTGlzdGluZyIsIm5hbWUiLCJudW0iLCJBY3RpdmVSZWNvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsTzs7Ozs7Ozs7Ozs7OztnQ0FDRTtBQUNmLGFBQU8sZUFBUDtBQUNIOzs7OEJBRWdCO0FBQ2IsYUFBTyxDQUFDLFVBQUQsRUFBYSxVQUFiLENBQVA7QUFDSCxLLENBRUQ7Ozs7MkJBQ2NDLEksRUFBTUMsRyxFQUFLO0FBQ3JCLFVBQUlBLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDVixlQUFPLHVCQUFnQkQsSUFBaEIsT0FBUDtBQUNILE9BRkQsTUFFTyxJQUFJQyxHQUFHLElBQUksQ0FBWCxFQUFjO0FBQ2pCLGVBQU8sdUJBQWdCRCxJQUFoQixPQUFQO0FBQ0g7QUFFSjs7OztFQWpCZ0NFLHdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9qcm9iLWJhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aXZlUmVjb3JkIGZyb20gJy4vYWN0aXZlLXJlY29yZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RpbmcgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAnbGlzdGluZ19ncm91cCc7XG4gICAgfVxuXG4gICAgc3RhdGljIGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBbJ2dyb3VwX2lkJywgJ3VzZXJuYW1lJ107XG4gICAgfVxuXG4gICAgLy8gT3RoZXIgTGlzdGluZyBzcGVjaWZpYyBsb2dpYyBnb2VzIGhlcmVcbiAgICBzdGF0aWMgZmluZEJ5KG5hbWUsIG51bSkge1xuICAgICAgICBpZiAobnVtID09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBbYGdyb3VwX2lkID0gJyR7bmFtZX0nYF07XG4gICAgICAgIH0gZWxzZSBpZiAobnVtID09IDIpIHtcbiAgICAgICAgICAgIHJldHVybiBbYHVzZXJuYW1lID0gJyR7bmFtZX0nYF1cbiAgICAgICAgfVxuXG4gICAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "listing_group_model.js"
      ],
      "names": [
        "Listing",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;gCACE;AACf,aAAO,eAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,UAAb,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,uBAAgBD,IAAhB,OAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,uBAAgBD,IAAhB,OAAP;AACH;AAEJ;;;;EAjBgCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/jrob-backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Listing extends ActiveRecord {\n    static tableName() {\n        return 'listing_group';\n    }\n\n    static columns() {\n        return ['group_id', 'username'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`group_id = '${name}'`];\n        } else if (num == 2) {\n            return [`username = '${name}'`]\n        }\n\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557731362365
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _chat_model = _interopRequireDefault(require(\"../SavvyAPI/models/chat_model\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//load our app server using express\nvar app = (0, _express[\"default\"])();\n\nvar server = _http[\"default\"].createServer(app),\n    io = require('socket.io').listen(server);\n\napp.use((0, _cors[\"default\"])());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n})); //important.. this line creates a connection to use static files such as html saved in the\n//folder public\n\napp.use(_express[\"default\"][\"static\"]('./uploads'));\napp.use((0, _morgan[\"default\"])('short'));\nglobal.__basedir = __dirname; //create router\n//this is important because it creates a connection to the users folder and runs the users.js folder\n\nvar user = require('./controller/users.js');\n\napp.use(user);\n\nvar listings = require('./controller/listing.js');\n\napp.use(listings);\n\nvar chat = require('./controller/chat.js');\n\napp.use(chat);\n\nvar listingGroup = require('./controller/listing_group');\n\napp.use(listingGroup);\n\nvar rating = require('./controller/rating');\n\napp.use(rating); //socket config\n\nio.on('connection', function (socket) {\n  var room = '';\n  room = socket.handshake['query']['room'];\n  socket.join(room, function () {\n    var rooms = Object.keys(socket.rooms);\n    console.log(rooms);\n    io.to('room').emit('a new user has joined the room');\n  });\n  /*    socket.on('join', function(userNickname) {\n          console.log(userNickname + \" : has joined \" + socket.room);\n          io.to(room).emit('user joined the chat', userNickname + \" : has joined the chat \");\n      })*/\n\n  socket.on('messagedetection', function (message) {\n    console.log(JSON.stringify(message));\n\n    _chat_model[\"default\"].create([room, message[\"senderNickname\"], message[\"message\"]]); //let message = { \"message\": messageContent, \"senderNickname\": senderNickname }\n\n\n    io.to(room).emit('message', message);\n  });\n  socket.on('disconnect', function () {\n    console.log('user has left ');\n    socket.removeAllListeners(room);\n    socket.leave(room);\n    io.to(room).emit(\"userdisconnect\", ' user has left');\n  });\n});\napp.get('/', function (req, res) {\n  res.send('SAVVY API');\n}); //for local uncomment this \n\nserver.listen(3000, function () {\n  console.log(\"Server is up and listening on 3000...\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXJ2ZXIiLCJodHRwIiwiY3JlYXRlU2VydmVyIiwiaW8iLCJyZXF1aXJlIiwibGlzdGVuIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImV4cHJlc3MiLCJnbG9iYWwiLCJfX2Jhc2VkaXIiLCJfX2Rpcm5hbWUiLCJ1c2VyIiwibGlzdGluZ3MiLCJjaGF0IiwibGlzdGluZ0dyb3VwIiwicmF0aW5nIiwib24iLCJzb2NrZXQiLCJyb29tIiwiaGFuZHNoYWtlIiwiam9pbiIsInJvb21zIiwiT2JqZWN0Iiwia2V5cyIsImNvbnNvbGUiLCJsb2ciLCJ0byIsImVtaXQiLCJtZXNzYWdlIiwiSlNPTiIsInN0cmluZ2lmeSIsIkNoYXQiLCJjcmVhdGUiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJsZWF2ZSIsImdldCIsInJlcSIsInJlcyIsInNlbmQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBR0E7Ozs7QUFUQTtBQUdBLElBQU1BLEdBQUcsR0FBRywwQkFBWjs7QUFJQSxJQUFNQyxNQUFNLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCSCxHQUFsQixDQUFmO0FBQUEsSUFDSUksRUFBRSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCQyxNQUFyQixDQUE0QkwsTUFBNUIsQ0FEVDs7QUFHQUQsR0FBRyxDQUFDTyxHQUFKLENBQVEsdUJBQVI7QUFFQVAsR0FBRyxDQUFDTyxHQUFKLENBQVFDLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUVBO0FBQ0E7O0FBRUFWLEdBQUcsQ0FBQ08sR0FBSixDQUFRSSw4QkFBZSxXQUFmLENBQVI7QUFFQVgsR0FBRyxDQUFDTyxHQUFKLENBQVEsd0JBQU8sT0FBUCxDQUFSO0FBRUFLLE1BQU0sQ0FBQ0MsU0FBUCxHQUFtQkMsU0FBbkIsQyxDQUdBO0FBQ0E7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHVixPQUFPLENBQUMsdUJBQUQsQ0FBcEI7O0FBQ0FMLEdBQUcsQ0FBQ08sR0FBSixDQUFRUSxJQUFSOztBQUVBLElBQU1DLFFBQVEsR0FBR1gsT0FBTyxDQUFDLHlCQUFELENBQXhCOztBQUNBTCxHQUFHLENBQUNPLEdBQUosQ0FBUVMsUUFBUjs7QUFFQSxJQUFNQyxJQUFJLEdBQUdaLE9BQU8sQ0FBQyxzQkFBRCxDQUFwQjs7QUFDQUwsR0FBRyxDQUFDTyxHQUFKLENBQVFVLElBQVI7O0FBRUEsSUFBTUMsWUFBWSxHQUFHYixPQUFPLENBQUMsNEJBQUQsQ0FBNUI7O0FBQ0FMLEdBQUcsQ0FBQ08sR0FBSixDQUFRVyxZQUFSOztBQUVBLElBQU1DLE1BQU0sR0FBR2QsT0FBTyxDQUFDLHFCQUFELENBQXRCOztBQUNBTCxHQUFHLENBQUNPLEdBQUosQ0FBUVksTUFBUixFLENBR0E7O0FBQ0FmLEVBQUUsQ0FBQ2dCLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQsRUFBWTtBQUM1QixNQUFJQyxJQUFJLEdBQUcsRUFBWDtBQUNBQSxFQUFBQSxJQUFJLEdBQUdELE1BQU0sQ0FBQ0UsU0FBUCxDQUFpQixPQUFqQixFQUEwQixNQUExQixDQUFQO0FBRUFGLEVBQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZRixJQUFaLEVBQWtCLFlBQU07QUFDcEIsUUFBSUcsS0FBSyxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWU4sTUFBTSxDQUFDSSxLQUFuQixDQUFaO0FBQ0FHLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixLQUFaO0FBQ0FyQixJQUFBQSxFQUFFLENBQUMwQixFQUFILENBQU0sTUFBTixFQUFjQyxJQUFkLENBQW1CLGdDQUFuQjtBQUNILEdBSkQ7QUFNQTs7Ozs7QUFLQVYsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsa0JBQVYsRUFBOEIsVUFBQ1ksT0FBRCxFQUFhO0FBQ3ZDSixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksSUFBSSxDQUFDQyxTQUFMLENBQWVGLE9BQWYsQ0FBWjs7QUFDQUcsMkJBQUtDLE1BQUwsQ0FBWSxDQUFDZCxJQUFELEVBQU9VLE9BQU8sQ0FBQyxnQkFBRCxDQUFkLEVBQWtDQSxPQUFPLENBQUMsU0FBRCxDQUF6QyxDQUFaLEVBRnVDLENBR25DOzs7QUFDSjVCLElBQUFBLEVBQUUsQ0FBQzBCLEVBQUgsQ0FBTVIsSUFBTixFQUFZUyxJQUFaLENBQWlCLFNBQWpCLEVBQTRCQyxPQUE1QjtBQUNILEdBTEQ7QUFPQVgsRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsWUFBVixFQUF3QixZQUFXO0FBQy9CUSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWjtBQUNBUixJQUFBQSxNQUFNLENBQUNnQixrQkFBUCxDQUEwQmYsSUFBMUI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDaUIsS0FBUCxDQUFhaEIsSUFBYjtBQUNBbEIsSUFBQUEsRUFBRSxDQUFDMEIsRUFBSCxDQUFNUixJQUFOLEVBQVlTLElBQVosQ0FBaUIsZ0JBQWpCLEVBQW1DLGdCQUFuQztBQUNILEdBTEQ7QUFNSCxDQTVCRDtBQThCQS9CLEdBQUcsQ0FBQ3VDLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQzVCQSxFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxXQUFUO0FBQ0gsQ0FGRCxFLENBS0E7O0FBQ0F6QyxNQUFNLENBQUNLLE1BQVAsQ0FBYyxJQUFkLEVBQW9CLFlBQU07QUFDdEJzQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1Q0FBWjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSSIsInNvdXJjZXNDb250ZW50IjpbIi8vbG9hZCBvdXIgYXBwIHNlcnZlciB1c2luZyBleHByZXNzXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nXG5pbXBvcnQgQ2hhdCBmcm9tIFwiLi4vU2F2dnlBUEkvbW9kZWxzL2NoYXRfbW9kZWxcIjtcbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnXG5jb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcihhcHApLFxuICAgIGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJykubGlzdGVuKHNlcnZlcik7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmFwcC51c2UoY29ycygpKVxuXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcblxuLy9pbXBvcnRhbnQuLiB0aGlzIGxpbmUgY3JlYXRlcyBhIGNvbm5lY3Rpb24gdG8gdXNlIHN0YXRpYyBmaWxlcyBzdWNoIGFzIGh0bWwgc2F2ZWQgaW4gdGhlXG4vL2ZvbGRlciBwdWJsaWNcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygnLi91cGxvYWRzJykpO1xuXG5hcHAudXNlKG1vcmdhbignc2hvcnQnKSlcblxuZ2xvYmFsLl9fYmFzZWRpciA9IF9fZGlybmFtZTtcblxuXG4vL2NyZWF0ZSByb3V0ZXJcbi8vdGhpcyBpcyBpbXBvcnRhbnQgYmVjYXVzZSBpdCBjcmVhdGVzIGEgY29ubmVjdGlvbiB0byB0aGUgdXNlcnMgZm9sZGVyIGFuZCBydW5zIHRoZSB1c2Vycy5qcyBmb2xkZXJcbmNvbnN0IHVzZXIgPSByZXF1aXJlKCcuL2NvbnRyb2xsZXIvdXNlcnMuanMnKVxuYXBwLnVzZSh1c2VyKVxuXG5jb25zdCBsaXN0aW5ncyA9IHJlcXVpcmUoJy4vY29udHJvbGxlci9saXN0aW5nLmpzJylcbmFwcC51c2UobGlzdGluZ3MpXG5cbmNvbnN0IGNoYXQgPSByZXF1aXJlKCcuL2NvbnRyb2xsZXIvY2hhdC5qcycpXG5hcHAudXNlKGNoYXQpXG5cbmNvbnN0IGxpc3RpbmdHcm91cCA9IHJlcXVpcmUoJy4vY29udHJvbGxlci9saXN0aW5nX2dyb3VwJylcbmFwcC51c2UobGlzdGluZ0dyb3VwKVxuXG5jb25zdCByYXRpbmcgPSByZXF1aXJlKCcuL2NvbnRyb2xsZXIvcmF0aW5nJylcbmFwcC51c2UocmF0aW5nKVxuXG5cbi8vc29ja2V0IGNvbmZpZ1xuaW8ub24oJ2Nvbm5lY3Rpb24nLCAoc29ja2V0KSA9PiB7XG4gICAgdmFyIHJvb20gPSAnJztcbiAgICByb29tID0gc29ja2V0LmhhbmRzaGFrZVsncXVlcnknXVsncm9vbSddO1xuXG4gICAgc29ja2V0LmpvaW4ocm9vbSwgKCkgPT4ge1xuICAgICAgICBsZXQgcm9vbXMgPSBPYmplY3Qua2V5cyhzb2NrZXQucm9vbXMpO1xuICAgICAgICBjb25zb2xlLmxvZyhyb29tcyk7XG4gICAgICAgIGlvLnRvKCdyb29tJykuZW1pdCgnYSBuZXcgdXNlciBoYXMgam9pbmVkIHRoZSByb29tJyk7XG4gICAgfSk7XG5cbiAgICAvKiAgICBzb2NrZXQub24oJ2pvaW4nLCBmdW5jdGlvbih1c2VyTmlja25hbWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJOaWNrbmFtZSArIFwiIDogaGFzIGpvaW5lZCBcIiArIHNvY2tldC5yb29tKTtcbiAgICAgICAgICAgIGlvLnRvKHJvb20pLmVtaXQoJ3VzZXIgam9pbmVkIHRoZSBjaGF0JywgdXNlck5pY2tuYW1lICsgXCIgOiBoYXMgam9pbmVkIHRoZSBjaGF0IFwiKTtcbiAgICAgICAgfSkqL1xuXG4gICAgc29ja2V0Lm9uKCdtZXNzYWdlZGV0ZWN0aW9uJywgKG1lc3NhZ2UpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkpXG4gICAgICAgIENoYXQuY3JlYXRlKFtyb29tLCBtZXNzYWdlW1wic2VuZGVyTmlja25hbWVcIl0sIG1lc3NhZ2VbXCJtZXNzYWdlXCJdXSlcbiAgICAgICAgICAgIC8vbGV0IG1lc3NhZ2UgPSB7IFwibWVzc2FnZVwiOiBtZXNzYWdlQ29udGVudCwgXCJzZW5kZXJOaWNrbmFtZVwiOiBzZW5kZXJOaWNrbmFtZSB9XG4gICAgICAgIGlvLnRvKHJvb20pLmVtaXQoJ21lc3NhZ2UnLCBtZXNzYWdlKVxuICAgIH0pXG5cbiAgICBzb2NrZXQub24oJ2Rpc2Nvbm5lY3QnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3VzZXIgaGFzIGxlZnQgJylcbiAgICAgICAgc29ja2V0LnJlbW92ZUFsbExpc3RlbmVycyhyb29tKTtcbiAgICAgICAgc29ja2V0LmxlYXZlKHJvb20pXG4gICAgICAgIGlvLnRvKHJvb20pLmVtaXQoXCJ1c2VyZGlzY29ubmVjdFwiLCAnIHVzZXIgaGFzIGxlZnQnKVxuICAgIH0pXG59KVxuXG5hcHAuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZCgnU0FWVlkgQVBJJyk7XG59KTtcblxuXG4vL2ZvciBsb2NhbCB1bmNvbW1lbnQgdGhpcyBcbnNlcnZlci5saXN0ZW4oMzAwMCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiU2VydmVyIGlzIHVwIGFuZCBsaXN0ZW5pbmcgb24gMzAwMC4uLlwiKVxufSkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "server",
        "http",
        "createServer",
        "io",
        "require",
        "listen",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "express",
        "global",
        "__basedir",
        "__dirname",
        "user",
        "listings",
        "chat",
        "listingGroup",
        "rating",
        "on",
        "socket",
        "room",
        "handshake",
        "join",
        "rooms",
        "Object",
        "keys",
        "console",
        "log",
        "to",
        "emit",
        "message",
        "JSON",
        "stringify",
        "Chat",
        "create",
        "removeAllListeners",
        "leave",
        "get",
        "req",
        "res",
        "send"
      ],
      "mappings": ";;AACA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;;;AATA;AAGA,IAAMA,GAAG,GAAG,0BAAZ;;AAIA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAf;AAAA,IACII,EAAE,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAArB,CAA4BL,MAA5B,CADT;;AAGAD,GAAG,CAACO,GAAJ,CAAQ,uBAAR;AAEAP,GAAG,CAACO,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;AACA;;AAEAV,GAAG,CAACO,GAAJ,CAAQI,8BAAe,WAAf,CAAR;AAEAX,GAAG,CAACO,GAAJ,CAAQ,wBAAO,OAAP,CAAR;AAEAK,MAAM,CAACC,SAAP,GAAmBC,SAAnB,C,CAGA;AACA;;AACA,IAAMC,IAAI,GAAGV,OAAO,CAAC,uBAAD,CAApB;;AACAL,GAAG,CAACO,GAAJ,CAAQQ,IAAR;;AAEA,IAAMC,QAAQ,GAAGX,OAAO,CAAC,yBAAD,CAAxB;;AACAL,GAAG,CAACO,GAAJ,CAAQS,QAAR;;AAEA,IAAMC,IAAI,GAAGZ,OAAO,CAAC,sBAAD,CAApB;;AACAL,GAAG,CAACO,GAAJ,CAAQU,IAAR;;AAEA,IAAMC,YAAY,GAAGb,OAAO,CAAC,4BAAD,CAA5B;;AACAL,GAAG,CAACO,GAAJ,CAAQW,YAAR;;AAEA,IAAMC,MAAM,GAAGd,OAAO,CAAC,qBAAD,CAAtB;;AACAL,GAAG,CAACO,GAAJ,CAAQY,MAAR,E,CAGA;;AACAf,EAAE,CAACgB,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC5B,MAAIC,IAAI,GAAG,EAAX;AACAA,EAAAA,IAAI,GAAGD,MAAM,CAACE,SAAP,CAAiB,OAAjB,EAA0B,MAA1B,CAAP;AAEAF,EAAAA,MAAM,CAACG,IAAP,CAAYF,IAAZ,EAAkB,YAAM;AACpB,QAAIG,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYN,MAAM,CAACI,KAAnB,CAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACArB,IAAAA,EAAE,CAAC0B,EAAH,CAAM,MAAN,EAAcC,IAAd,CAAmB,gCAAnB;AACH,GAJD;AAMA;;;;;AAKAV,EAAAA,MAAM,CAACD,EAAP,CAAU,kBAAV,EAA8B,UAACY,OAAD,EAAa;AACvCJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,SAAL,CAAeF,OAAf,CAAZ;;AACAG,2BAAKC,MAAL,CAAY,CAACd,IAAD,EAAOU,OAAO,CAAC,gBAAD,CAAd,EAAkCA,OAAO,CAAC,SAAD,CAAzC,CAAZ,EAFuC,CAGnC;;;AACJ5B,IAAAA,EAAE,CAAC0B,EAAH,CAAMR,IAAN,EAAYS,IAAZ,CAAiB,SAAjB,EAA4BC,OAA5B;AACH,GALD;AAOAX,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAW;AAC/BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAR,IAAAA,MAAM,CAACgB,kBAAP,CAA0Bf,IAA1B;AACAD,IAAAA,MAAM,CAACiB,KAAP,CAAahB,IAAb;AACAlB,IAAAA,EAAE,CAAC0B,EAAH,CAAMR,IAAN,EAAYS,IAAZ,CAAiB,gBAAjB,EAAmC,gBAAnC;AACH,GALD;AAMH,CA5BD;AA8BA/B,GAAG,CAACuC,GAAJ,CAAQ,GAAR,EAAa,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC5BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,WAAT;AACH,CAFD,E,CAKA;;AACAzC,MAAM,CAACK,MAAP,CAAc,IAAd,EAAoB,YAAM;AACtBsB,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH,CAFD",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourcesContent": [
        "//load our app server using express\nimport express from 'express'\nimport cors from 'cors'\nconst app = express()\nimport morgan from 'morgan'\nimport Chat from \"../SavvyAPI/models/chat_model\";\nimport http from 'http'\nconst server = http.createServer(app),\n    io = require('socket.io').listen(server);\nimport bodyParser from 'body-parser'\napp.use(cors())\n\napp.use(bodyParser.urlencoded({ extended: false }))\n\n//important.. this line creates a connection to use static files such as html saved in the\n//folder public\n\napp.use(express.static('./uploads'));\n\napp.use(morgan('short'))\n\nglobal.__basedir = __dirname;\n\n\n//create router\n//this is important because it creates a connection to the users folder and runs the users.js folder\nconst user = require('./controller/users.js')\napp.use(user)\n\nconst listings = require('./controller/listing.js')\napp.use(listings)\n\nconst chat = require('./controller/chat.js')\napp.use(chat)\n\nconst listingGroup = require('./controller/listing_group')\napp.use(listingGroup)\n\nconst rating = require('./controller/rating')\napp.use(rating)\n\n\n//socket config\nio.on('connection', (socket) => {\n    var room = '';\n    room = socket.handshake['query']['room'];\n\n    socket.join(room, () => {\n        let rooms = Object.keys(socket.rooms);\n        console.log(rooms);\n        io.to('room').emit('a new user has joined the room');\n    });\n\n    /*    socket.on('join', function(userNickname) {\n            console.log(userNickname + \" : has joined \" + socket.room);\n            io.to(room).emit('user joined the chat', userNickname + \" : has joined the chat \");\n        })*/\n\n    socket.on('messagedetection', (message) => {\n        console.log(JSON.stringify(message))\n        Chat.create([room, message[\"senderNickname\"], message[\"message\"]])\n            //let message = { \"message\": messageContent, \"senderNickname\": senderNickname }\n        io.to(room).emit('message', message)\n    })\n\n    socket.on('disconnect', function() {\n        console.log('user has left ')\n        socket.removeAllListeners(room);\n        socket.leave(room)\n        io.to(room).emit(\"userdisconnect\", ' user has left')\n    })\n})\n\napp.get('/', function(req, res) {\n    res.send('SAVVY API');\n});\n\n\n//for local uncomment this \nserver.listen(3000, () => {\n    console.log(\"Server is up and listening on 3000...\")\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1558303682313
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _user_model = _interopRequireDefault(require(\"../models/user_model\"));\n\nvar _dbConfig = _interopRequireDefault(require(\"../config/db.config.js\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sharp = _interopRequireDefault(require(\"sharp\"));\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on req.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])()); // let upload = multer({ storage: storage });\n// function to encode file data to base64 encoded string\n\nfunction base64_encode(file) {\n  // read binary data\n  var bitmap = _fs[\"default\"].readFileSync(file); // convert binary data to base64 encoded string\n\n\n  return new Buffer(bitmap).toString('base64');\n} // function to create file from base64 encoded string\n\n\nfunction base64_decode(base64str, file) {\n  // create buffer object from base64 encoded string, it is important to tell the constructor that the string is base64 encoded\n  var bitmap = new Buffer(base64str, 'base64'); // write buffer to file\n\n  _fs[\"default\"].writeFileSync(file, bitmap);\n\n  console.log('******** File created from base64 encoded string ********');\n} // convert image to base64 encoded string\n//var base64str = base64_encode('kitten.jpg');\n//console.log(base64str);\n// convert base64 string back to image \n//base64_decode(base64str, '../uploads/');\n\n/*router.post('/image', (request, response) => {\n    const image = request.body.file;\n    const name = request.body.name\n    base64_decode(image, __basedir + '/uploads/' + name + '.png');\n    resizeBy.send(\"done\");\n})*/\n\n\nrouter.post('/reg', function (request, response) {\n  var profImage = request.body.username + '.png';\n  var image = request.body.file;\n  base64_decode(image, __basedir + '/uploads/' + profImage);\n  var values = [request.body.username, request.body.email, request.body.password, request.body.first_name, request.body.last_name, request.body.city, request.body.descr, profImage];\n\n  _user_model[\"default\"].create(values).then(function (_) {\n    response.sendStatus(200);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/login', function (_ref, response) {\n  var query = _ref.query;\n\n  var values = _toConsumableArray(Object.keys(query).map(function (key) {\n    return query[key];\n  }));\n\n  _user_model[\"default\"].find(values, 1).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJ1c2UiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImJhc2U2NF9lbmNvZGUiLCJmaWxlIiwiYml0bWFwIiwiZnMiLCJyZWFkRmlsZVN5bmMiLCJCdWZmZXIiLCJ0b1N0cmluZyIsImJhc2U2NF9kZWNvZGUiLCJiYXNlNjRzdHIiLCJ3cml0ZUZpbGVTeW5jIiwiY29uc29sZSIsImxvZyIsInBvc3QiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJwcm9mSW1hZ2UiLCJib2R5IiwidXNlcm5hbWUiLCJpbWFnZSIsIl9fYmFzZWRpciIsInZhbHVlcyIsImVtYWlsIiwicGFzc3dvcmQiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwiY2l0eSIsImRlc2NyIiwiVXNlciIsImNyZWF0ZSIsInRoZW4iLCJfIiwic2VuZFN0YXR1cyIsImdldCIsInF1ZXJ5IiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImtleSIsImZpbmQiLCJyb3dzIiwic2VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBTUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUdBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmO0FBQ0k7Ozs7OztBQUlKRixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdDLFVBQVgsQ0FBc0I7QUFDN0JDLEVBQUFBLFFBQVEsRUFBRTtBQURtQixDQUF0QixDQUFYO0FBR0FOLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0csSUFBWCxFQUFYO0FBQ0FQLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLCtCQUFYO0FBQ0FILE1BQU0sQ0FBQ0csR0FBUCxDQUFXLHVCQUFYLEUsQ0FFQTtBQUVBOztBQUNBLFNBQVNLLGFBQVQsQ0FBdUJDLElBQXZCLEVBQTZCO0FBQ3pCO0FBQ0EsTUFBSUMsTUFBTSxHQUFHQyxlQUFHQyxZQUFILENBQWdCSCxJQUFoQixDQUFiLENBRnlCLENBR3pCOzs7QUFDQSxTQUFPLElBQUlJLE1BQUosQ0FBV0gsTUFBWCxFQUFtQkksUUFBbkIsQ0FBNEIsUUFBNUIsQ0FBUDtBQUNILEMsQ0FFRDs7O0FBQ0EsU0FBU0MsYUFBVCxDQUF1QkMsU0FBdkIsRUFBa0NQLElBQWxDLEVBQXdDO0FBQ3BDO0FBQ0EsTUFBSUMsTUFBTSxHQUFHLElBQUlHLE1BQUosQ0FBV0csU0FBWCxFQUFzQixRQUF0QixDQUFiLENBRm9DLENBR3BDOztBQUNBTCxpQkFBR00sYUFBSCxDQUFpQlIsSUFBakIsRUFBdUJDLE1BQXZCOztBQUNBUSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyREFBWjtBQUNILEMsQ0FFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7OztBQU9BbkIsTUFBTSxDQUFDb0IsSUFBUCxDQUFZLE1BQVosRUFBb0IsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQ3ZDLE1BQU1DLFNBQVMsR0FBR0YsT0FBTyxDQUFDRyxJQUFSLENBQWFDLFFBQWIsR0FBd0IsTUFBMUM7QUFDQSxNQUFNQyxLQUFLLEdBQUdMLE9BQU8sQ0FBQ0csSUFBUixDQUFhZixJQUEzQjtBQUNBTSxFQUFBQSxhQUFhLENBQUNXLEtBQUQsRUFBUUMsU0FBUyxHQUFHLFdBQVosR0FBMEJKLFNBQWxDLENBQWI7QUFDQSxNQUFNSyxNQUFNLEdBQUcsQ0FBQ1AsT0FBTyxDQUFDRyxJQUFSLENBQWFDLFFBQWQsRUFBd0JKLE9BQU8sQ0FBQ0csSUFBUixDQUFhSyxLQUFyQyxFQUE0Q1IsT0FBTyxDQUFDRyxJQUFSLENBQWFNLFFBQXpELEVBQW1FVCxPQUFPLENBQUNHLElBQVIsQ0FBYU8sVUFBaEYsRUFDWFYsT0FBTyxDQUFDRyxJQUFSLENBQWFRLFNBREYsRUFDYVgsT0FBTyxDQUFDRyxJQUFSLENBQWFTLElBRDFCLEVBQ2dDWixPQUFPLENBQUNHLElBQVIsQ0FBYVUsS0FEN0MsRUFDb0RYLFNBRHBELENBQWY7O0FBR0FZLHlCQUFLQyxNQUFMLENBQVlSLE1BQVosRUFDS1MsSUFETCxDQUNVLFVBQUFDLENBQUMsRUFBSTtBQUNQaEIsSUFBQUEsUUFBUSxDQUFDaUIsVUFBVCxDQUFvQixHQUFwQjtBQUNILEdBSEwsRUFHTyxVQUFBRCxDQUFDO0FBQUEsV0FBSWhCLFFBQVEsQ0FBQ2lCLFVBQVQsQ0FBb0IsR0FBcEIsQ0FBSjtBQUFBLEdBSFI7QUFLSCxDQVpEO0FBY0F2QyxNQUFNLENBQUN3QyxHQUFQLENBQVcsUUFBWCxFQUFxQixnQkFBWWxCLFFBQVosRUFBeUI7QUFBQSxNQUF0Qm1CLEtBQXNCLFFBQXRCQSxLQUFzQjs7QUFDMUMsTUFBTWIsTUFBTSxzQkFDTGMsTUFBTSxDQUFDQyxJQUFQLENBQVlGLEtBQVosRUFBbUJHLEdBQW5CLENBQXVCLFVBQUFDLEdBQUc7QUFBQSxXQUFJSixLQUFLLENBQUNJLEdBQUQsQ0FBVDtBQUFBLEdBQTFCLENBREssQ0FBWjs7QUFHQVYseUJBQUtXLElBQUwsQ0FBVWxCLE1BQVYsRUFBa0IsQ0FBbEIsRUFDS1MsSUFETCxDQUNVLFVBQUFVLElBQUksRUFBSTtBQUNWekIsSUFBQUEsUUFBUSxDQUFDMEIsSUFBVCxDQUFjRCxJQUFkO0FBQ0gsR0FITCxFQUdPLFVBQUFULENBQUM7QUFBQSxXQUFJaEIsUUFBUSxDQUFDaUIsVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIUjtBQUlILENBUkQ7QUFXQVUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEQsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlXG4gKiB0aGlzIGNsYXNzIHdpbGwgYmUgdXNlZCB0byBoYW5kbGUgZ2V0IGFuZCBwb3N0IHJlcXVlc3QgZm9yIFxuICogdXNlciByZWxhdGVkIGluZm8uIFxuICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInXG5pbXBvcnQgVXNlciBmcm9tIFwiLi4vbW9kZWxzL3VzZXJfbW9kZWxcIjtcbmltcG9ydCBkYiBmcm9tICcuLi9jb25maWcvZGIuY29uZmlnLmpzJztcbmltcG9ydCBtdWx0ZXIgZnJvbSAnbXVsdGVyJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHNoYXJwIGZyb20gJ3NoYXJwJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5cblxuLy9jcmVhdGUgcm91dGVyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG4gICAgLyoqIGJvZHlQYXJzZXIudXJsZW5jb2RlZChvcHRpb25zKVxuICAgICAqIFBhcnNlcyB0aGUgdGV4dCBhcyBVUkwgZW5jb2RlZCBkYXRhICh3aGljaCBpcyBob3cgYnJvd3NlcnMgdGVuZCB0byBzZW5kIGZvcm0gZGF0YSBmcm9tIHJlZ3VsYXIgZm9ybXMgc2V0IHRvIFBPU1QpXG4gICAgICogYW5kIGV4cG9zZXMgdGhlIHJlc3VsdGluZyBvYmplY3QgKGNvbnRhaW5pbmcgdGhlIGtleXMgYW5kIHZhbHVlcykgb24gcmVxLmJvZHlcbiAgICAgKi9cbnJvdXRlci51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgICBleHRlbmRlZDogZmFsc2Vcbn0pKTtcbnJvdXRlci51c2UoYm9keVBhcnNlci5qc29uKCkpO1xucm91dGVyLnVzZShjb29raWVQYXJzZXIoKSk7XG5yb3V0ZXIudXNlKGNvcnMoKSk7XG5cbi8vIGxldCB1cGxvYWQgPSBtdWx0ZXIoeyBzdG9yYWdlOiBzdG9yYWdlIH0pO1xuXG4vLyBmdW5jdGlvbiB0byBlbmNvZGUgZmlsZSBkYXRhIHRvIGJhc2U2NCBlbmNvZGVkIHN0cmluZ1xuZnVuY3Rpb24gYmFzZTY0X2VuY29kZShmaWxlKSB7XG4gICAgLy8gcmVhZCBiaW5hcnkgZGF0YVxuICAgIHZhciBiaXRtYXAgPSBmcy5yZWFkRmlsZVN5bmMoZmlsZSk7XG4gICAgLy8gY29udmVydCBiaW5hcnkgZGF0YSB0byBiYXNlNjQgZW5jb2RlZCBzdHJpbmdcbiAgICByZXR1cm4gbmV3IEJ1ZmZlcihiaXRtYXApLnRvU3RyaW5nKCdiYXNlNjQnKTtcbn1cblxuLy8gZnVuY3Rpb24gdG8gY3JlYXRlIGZpbGUgZnJvbSBiYXNlNjQgZW5jb2RlZCBzdHJpbmdcbmZ1bmN0aW9uIGJhc2U2NF9kZWNvZGUoYmFzZTY0c3RyLCBmaWxlKSB7XG4gICAgLy8gY3JlYXRlIGJ1ZmZlciBvYmplY3QgZnJvbSBiYXNlNjQgZW5jb2RlZCBzdHJpbmcsIGl0IGlzIGltcG9ydGFudCB0byB0ZWxsIHRoZSBjb25zdHJ1Y3RvciB0aGF0IHRoZSBzdHJpbmcgaXMgYmFzZTY0IGVuY29kZWRcbiAgICB2YXIgYml0bWFwID0gbmV3IEJ1ZmZlcihiYXNlNjRzdHIsICdiYXNlNjQnKTtcbiAgICAvLyB3cml0ZSBidWZmZXIgdG8gZmlsZVxuICAgIGZzLndyaXRlRmlsZVN5bmMoZmlsZSwgYml0bWFwKTtcbiAgICBjb25zb2xlLmxvZygnKioqKioqKiogRmlsZSBjcmVhdGVkIGZyb20gYmFzZTY0IGVuY29kZWQgc3RyaW5nICoqKioqKioqJyk7XG59XG5cbi8vIGNvbnZlcnQgaW1hZ2UgdG8gYmFzZTY0IGVuY29kZWQgc3RyaW5nXG4vL3ZhciBiYXNlNjRzdHIgPSBiYXNlNjRfZW5jb2RlKCdraXR0ZW4uanBnJyk7XG4vL2NvbnNvbGUubG9nKGJhc2U2NHN0cik7XG4vLyBjb252ZXJ0IGJhc2U2NCBzdHJpbmcgYmFjayB0byBpbWFnZSBcbi8vYmFzZTY0X2RlY29kZShiYXNlNjRzdHIsICcuLi91cGxvYWRzLycpO1xuXG4vKnJvdXRlci5wb3N0KCcvaW1hZ2UnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCBpbWFnZSA9IHJlcXVlc3QuYm9keS5maWxlO1xuICAgIGNvbnN0IG5hbWUgPSByZXF1ZXN0LmJvZHkubmFtZVxuICAgIGJhc2U2NF9kZWNvZGUoaW1hZ2UsIF9fYmFzZWRpciArICcvdXBsb2Fkcy8nICsgbmFtZSArICcucG5nJyk7XG4gICAgcmVzaXplQnkuc2VuZChcImRvbmVcIik7XG59KSovXG5cbnJvdXRlci5wb3N0KCcvcmVnJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgcHJvZkltYWdlID0gcmVxdWVzdC5ib2R5LnVzZXJuYW1lICsgJy5wbmcnO1xuICAgIGNvbnN0IGltYWdlID0gcmVxdWVzdC5ib2R5LmZpbGVcbiAgICBiYXNlNjRfZGVjb2RlKGltYWdlLCBfX2Jhc2VkaXIgKyAnL3VwbG9hZHMvJyArIHByb2ZJbWFnZSk7XG4gICAgY29uc3QgdmFsdWVzID0gW3JlcXVlc3QuYm9keS51c2VybmFtZSwgcmVxdWVzdC5ib2R5LmVtYWlsLCByZXF1ZXN0LmJvZHkucGFzc3dvcmQsIHJlcXVlc3QuYm9keS5maXJzdF9uYW1lLFxuICAgICAgICByZXF1ZXN0LmJvZHkubGFzdF9uYW1lLCByZXF1ZXN0LmJvZHkuY2l0eSwgcmVxdWVzdC5ib2R5LmRlc2NyLCBwcm9mSW1hZ2VcbiAgICBdO1xuICAgIFVzZXIuY3JlYXRlKHZhbHVlcylcbiAgICAgICAgLnRoZW4oXyA9PiB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKDIwMClcbiAgICAgICAgfSwgXyA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xuXG59KTtcblxucm91dGVyLmdldCgnL2xvZ2luJywgKHsgcXVlcnkgfSwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXG4gICAgICAgIC4uLk9iamVjdC5rZXlzKHF1ZXJ5KS5tYXAoa2V5ID0+IHF1ZXJ5W2tleV0pLFxuICAgIF07XG4gICAgVXNlci5maW5kKHZhbHVlcywgMSlcbiAgICAgICAgLnRoZW4ocm93cyA9PiB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJvd3MpXG4gICAgICAgIH0sIF8gPT4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MjIpKTtcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "base64_encode",
        "file",
        "bitmap",
        "fs",
        "readFileSync",
        "Buffer",
        "toString",
        "base64_decode",
        "base64str",
        "writeFileSync",
        "console",
        "log",
        "post",
        "request",
        "response",
        "profImage",
        "body",
        "username",
        "image",
        "__basedir",
        "values",
        "email",
        "password",
        "first_name",
        "last_name",
        "city",
        "descr",
        "User",
        "create",
        "then",
        "_",
        "sendStatus",
        "get",
        "query",
        "Object",
        "keys",
        "map",
        "key",
        "find",
        "rows",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAGA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX,E,CAEA;AAEA;;AACA,SAASK,aAAT,CAAuBC,IAAvB,EAA6B;AACzB;AACA,MAAIC,MAAM,GAAGC,eAAGC,YAAH,CAAgBH,IAAhB,CAAb,CAFyB,CAGzB;;;AACA,SAAO,IAAII,MAAJ,CAAWH,MAAX,EAAmBI,QAAnB,CAA4B,QAA5B,CAAP;AACH,C,CAED;;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCP,IAAlC,EAAwC;AACpC;AACA,MAAIC,MAAM,GAAG,IAAIG,MAAJ,CAAWG,SAAX,EAAsB,QAAtB,CAAb,CAFoC,CAGpC;;AACAL,iBAAGM,aAAH,CAAiBR,IAAjB,EAAuBC,MAAvB;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACH,C,CAED;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AAOAnB,MAAM,CAACoB,IAAP,CAAY,MAAZ,EAAoB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AACvC,MAAMC,SAAS,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,GAAwB,MAA1C;AACA,MAAMC,KAAK,GAAGL,OAAO,CAACG,IAAR,CAAaf,IAA3B;AACAM,EAAAA,aAAa,CAACW,KAAD,EAAQC,SAAS,GAAG,WAAZ,GAA0BJ,SAAlC,CAAb;AACA,MAAMK,MAAM,GAAG,CAACP,OAAO,CAACG,IAAR,CAAaC,QAAd,EAAwBJ,OAAO,CAACG,IAAR,CAAaK,KAArC,EAA4CR,OAAO,CAACG,IAAR,CAAaM,QAAzD,EAAmET,OAAO,CAACG,IAAR,CAAaO,UAAhF,EACXV,OAAO,CAACG,IAAR,CAAaQ,SADF,EACaX,OAAO,CAACG,IAAR,CAAaS,IAD1B,EACgCZ,OAAO,CAACG,IAAR,CAAaU,KAD7C,EACoDX,SADpD,CAAf;;AAGAY,yBAAKC,MAAL,CAAYR,MAAZ,EACKS,IADL,CACU,UAAAC,CAAC,EAAI;AACPhB,IAAAA,QAAQ,CAACiB,UAAT,CAAoB,GAApB;AACH,GAHL,EAGO,UAAAD,CAAC;AAAA,WAAIhB,QAAQ,CAACiB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAKH,CAZD;AAcAvC,MAAM,CAACwC,GAAP,CAAW,QAAX,EAAqB,gBAAYlB,QAAZ,EAAyB;AAAA,MAAtBmB,KAAsB,QAAtBA,KAAsB;;AAC1C,MAAMb,MAAM,sBACLc,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,GAAnB,CAAuB,UAAAC,GAAG;AAAA,WAAIJ,KAAK,CAACI,GAAD,CAAT;AAAA,GAA1B,CADK,CAAZ;;AAGAV,yBAAKW,IAAL,CAAUlB,MAAV,EAAkB,CAAlB,EACKS,IADL,CACU,UAAAU,IAAI,EAAI;AACVzB,IAAAA,QAAQ,CAAC0B,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAT,CAAC;AAAA,WAAIhB,QAAQ,CAACiB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CARD;AAWAU,MAAM,CAACC,OAAP,GAAiBlD,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport User from \"../models/user_model\";\nimport db from '../config/db.config.js';\nimport multer from 'multer';\nimport path from 'path';\nimport sharp from 'sharp';\nimport fs from 'fs';\n\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on req.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n\n// let upload = multer({ storage: storage });\n\n// function to encode file data to base64 encoded string\nfunction base64_encode(file) {\n    // read binary data\n    var bitmap = fs.readFileSync(file);\n    // convert binary data to base64 encoded string\n    return new Buffer(bitmap).toString('base64');\n}\n\n// function to create file from base64 encoded string\nfunction base64_decode(base64str, file) {\n    // create buffer object from base64 encoded string, it is important to tell the constructor that the string is base64 encoded\n    var bitmap = new Buffer(base64str, 'base64');\n    // write buffer to file\n    fs.writeFileSync(file, bitmap);\n    console.log('******** File created from base64 encoded string ********');\n}\n\n// convert image to base64 encoded string\n//var base64str = base64_encode('kitten.jpg');\n//console.log(base64str);\n// convert base64 string back to image \n//base64_decode(base64str, '../uploads/');\n\n/*router.post('/image', (request, response) => {\n    const image = request.body.file;\n    const name = request.body.name\n    base64_decode(image, __basedir + '/uploads/' + name + '.png');\n    resizeBy.send(\"done\");\n})*/\n\nrouter.post('/reg', (request, response) => {\n    const profImage = request.body.username + '.png';\n    const image = request.body.file\n    base64_decode(image, __basedir + '/uploads/' + profImage);\n    const values = [request.body.username, request.body.email, request.body.password, request.body.first_name,\n        request.body.last_name, request.body.city, request.body.descr, profImage\n    ];\n    User.create(values)\n        .then(_ => {\n            response.sendStatus(200)\n        }, _ => response.sendStatus(422));\n\n});\n\nrouter.get('/login', ({ query }, response) => {\n    const values = [\n        ...Object.keys(query).map(key => query[key]),\n    ];\n    User.find(values, 1)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1558303507081
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/user_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/user_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "user_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Users =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Users, _ActiveRecord);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'user';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['username', 'email', 'password', 'first_name', 'last_name', 'city', 'descr', 'profImage'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"username = \\\"\".concat(name.join('\" AND password = \"'), \"\\\"\")];\n      }\n    }\n  }]);\n\n  return Users;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJfbW9kZWwuanMiXSwibmFtZXMiOlsiVXNlcnMiLCJuYW1lIiwibnVtIiwiam9pbiIsIkFjdGl2ZVJlY29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxLOzs7Ozs7Ozs7Ozs7O2dDQUNFO0FBQ2YsYUFBTyxNQUFQO0FBQ0g7Ozs4QkFFZ0I7QUFDYixhQUFPLENBQUMsVUFBRCxFQUFhLE9BQWIsRUFBc0IsVUFBdEIsRUFBa0MsWUFBbEMsRUFBZ0QsV0FBaEQsRUFBNkQsTUFBN0QsRUFBcUUsT0FBckUsRUFBOEUsV0FBOUUsQ0FBUDtBQUNILEssQ0FFRDs7OzsyQkFDY0MsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8sd0JBQWdCRCxJQUFJLENBQUNFLElBQUwsQ0FBVSxvQkFBVixDQUFoQixRQUFQO0FBQ0g7QUFDSjs7OztFQWQ4QkMsd0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aXZlUmVjb3JkIGZyb20gJy4vYWN0aXZlLXJlY29yZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJzIGV4dGVuZHMgQWN0aXZlUmVjb3JkIHtcbiAgICBzdGF0aWMgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ3VzZXInO1xuICAgIH1cblxuICAgIHN0YXRpYyBjb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gWyd1c2VybmFtZScsICdlbWFpbCcsICdwYXNzd29yZCcsICdmaXJzdF9uYW1lJywgJ2xhc3RfbmFtZScsICdjaXR5JywgJ2Rlc2NyJywgJ3Byb2ZJbWFnZSddO1xuICAgIH1cblxuICAgIC8vIE90aGVyIExpc3Rpbmcgc3BlY2lmaWMgbG9naWMgZ29lcyBoZXJlXG4gICAgc3RhdGljIGZpbmRCeShuYW1lLCBudW0pIHtcbiAgICAgICAgaWYgKG51bSA9PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gW2B1c2VybmFtZSA9IFwiJHtuYW1lLmpvaW4oJ1wiIEFORCBwYXNzd29yZCA9IFwiJyl9XCJgXTtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user_model.js"
      ],
      "names": [
        "Users",
        "name",
        "num",
        "join",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;;;gCACE;AACf,aAAO,MAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,UAAtB,EAAkC,YAAlC,EAAgD,WAAhD,EAA6D,MAA7D,EAAqE,OAArE,EAA8E,WAA9E,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,wBAAgBD,IAAI,CAACE,IAAL,CAAU,oBAAV,CAAhB,QAAP;AACH;AACJ;;;;EAd8BC,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Users extends ActiveRecord {\n    static tableName() {\n        return 'user';\n    }\n\n    static columns() {\n        return ['username', 'email', 'password', 'first_name', 'last_name', 'city', 'descr', 'profImage'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`username = \"${name.join('\" AND password = \"')}\"`];\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558257437917
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/active-record.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/active-record.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "active-record.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// const db = require('../config/db.config.js');\nvar pool = require('../config/db.config.js');\n\nvar ActiveRecord =\n/*#__PURE__*/\nfunction () {\n  function ActiveRecord() {\n    _classCallCheck(this, ActiveRecord);\n  }\n\n  _createClass(ActiveRecord, [{\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"delete\",\n    value: function _delete() {}\n  }], [{\n    key: \"find\",\n    value: function find(conditions, num) {\n      return this.promisify(this.findQueryString(conditions, num));\n    }\n  }, {\n    key: \"findQueryString\",\n    value: function findQueryString(conditions, num) {\n      return \"SELECT * FROM \".concat(this.tableName(), \" WHERE \").concat(this.findBy(conditions, num));\n    }\n  }, {\n    key: \"create\",\n    value: function create(values) {\n      return this.promisify(this.insertQueryString(values));\n    }\n  }, {\n    key: \"insertQueryString\",\n    value: function insertQueryString(values) {\n      return \"INSERT INTO \".concat(this.tableName(), \" (\").concat(this.columns().join(', '), \") VALUES (\\\"\").concat(values.join('\", \"'), \"\\\")\");\n    }\n  }, {\n    key: \"promisify\",\n    value: function promisify(querystring) {\n      return new Promise(function (resolve, reject) {\n        pool.query(querystring, function (error, rows, fields) {\n          if (error) {\n            console.log(error);\n            return reject(\"failed to save query\");\n          }\n\n          return resolve(rows);\n        });\n      });\n    }\n  }]);\n\n  return ActiveRecord;\n}();\n\nexports[\"default\"] = ActiveRecord;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjdGl2ZS1yZWNvcmQuanMiXSwibmFtZXMiOlsicG9vbCIsInJlcXVpcmUiLCJBY3RpdmVSZWNvcmQiLCJjb25kaXRpb25zIiwibnVtIiwicHJvbWlzaWZ5IiwiZmluZFF1ZXJ5U3RyaW5nIiwidGFibGVOYW1lIiwiZmluZEJ5IiwidmFsdWVzIiwiaW5zZXJ0UXVlcnlTdHJpbmciLCJjb2x1bW5zIiwiam9pbiIsInF1ZXJ5c3RyaW5nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJxdWVyeSIsImVycm9yIiwicm93cyIsImZpZWxkcyIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLHdCQUFELENBQXBCOztJQUVxQkMsWTs7Ozs7Ozs7OzZCQWlCUixDQUVSOzs7OEJBRVEsQ0FFUjs7O3lCQXRCV0MsVSxFQUFZQyxHLEVBQUs7QUFDekIsYUFBTyxLQUFLQyxTQUFMLENBQWUsS0FBS0MsZUFBTCxDQUFxQkgsVUFBckIsRUFBaUNDLEdBQWpDLENBQWYsQ0FBUDtBQUNIOzs7b0NBRXNCRCxVLEVBQVlDLEcsRUFBSztBQUNwQyxxQ0FBd0IsS0FBS0csU0FBTCxFQUF4QixvQkFBa0QsS0FBS0MsTUFBTCxDQUFZTCxVQUFaLEVBQXdCQyxHQUF4QixDQUFsRDtBQUNIOzs7MkJBRWFLLE0sRUFBUTtBQUNsQixhQUFPLEtBQUtKLFNBQUwsQ0FBZSxLQUFLSyxpQkFBTCxDQUF1QkQsTUFBdkIsQ0FBZixDQUFQO0FBQ0g7OztzQ0FFd0JBLE0sRUFBUTtBQUM3QixtQ0FBc0IsS0FBS0YsU0FBTCxFQUF0QixlQUEyQyxLQUFLSSxPQUFMLEdBQWVDLElBQWYsQ0FBb0IsSUFBcEIsQ0FBM0MseUJBQWtGSCxNQUFNLENBQUNHLElBQVAsQ0FBWSxNQUFaLENBQWxGO0FBQ0g7Ozs4QkFVZ0JDLFcsRUFBYTtBQUMxQixhQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQjtBQUN6Q2hCLFFBQUFBLElBQUksQ0FBQ2lCLEtBQUwsQ0FBV0osV0FBWCxFQUF3QixVQUFTSyxLQUFULEVBQWdCQyxJQUFoQixFQUFzQkMsTUFBdEIsRUFBOEI7QUFDbEQsY0FBSUYsS0FBSixFQUFXO0FBQ1BHLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixLQUFaO0FBQ0EsbUJBQU9GLE1BQU0sQ0FBQyxzQkFBRCxDQUFiO0FBQ0g7O0FBQ0QsaUJBQU9ELE9BQU8sQ0FBQ0ksSUFBRCxDQUFkO0FBQ0gsU0FORDtBQU9ILE9BUk0sQ0FBUDtBQVNIIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgZGIgPSByZXF1aXJlKCcuLi9jb25maWcvZGIuY29uZmlnLmpzJyk7XG5jb25zdCBwb29sID0gcmVxdWlyZSgnLi4vY29uZmlnL2RiLmNvbmZpZy5qcycpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyBmaW5kKGNvbmRpdGlvbnMsIG51bSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9taXNpZnkodGhpcy5maW5kUXVlcnlTdHJpbmcoY29uZGl0aW9ucywgbnVtKSk7XG4gICAgfVxuXG4gICAgc3RhdGljIGZpbmRRdWVyeVN0cmluZyhjb25kaXRpb25zLCBudW0pIHtcbiAgICAgICAgcmV0dXJuIGBTRUxFQ1QgKiBGUk9NICR7dGhpcy50YWJsZU5hbWUoKX0gV0hFUkUgJHt0aGlzLmZpbmRCeShjb25kaXRpb25zLCBudW0pfWA7XG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZSh2YWx1ZXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvbWlzaWZ5KHRoaXMuaW5zZXJ0UXVlcnlTdHJpbmcodmFsdWVzKSk7XG4gICAgfVxuXG4gICAgc3RhdGljIGluc2VydFF1ZXJ5U3RyaW5nKHZhbHVlcykge1xuICAgICAgICByZXR1cm4gYElOU0VSVCBJTlRPICR7dGhpcy50YWJsZU5hbWUoKX0gKCR7dGhpcy5jb2x1bW5zKCkuam9pbignLCAnKX0pIFZBTFVFUyAoXCIke3ZhbHVlcy5qb2luKCdcIiwgXCInKX1cIilgO1xuICAgIH1cblxuICAgIHVwZGF0ZSgpIHtcblxuICAgIH1cblxuICAgIGRlbGV0ZSgpIHtcblxuICAgIH1cblxuICAgIHN0YXRpYyBwcm9taXNpZnkocXVlcnlzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgcG9vbC5xdWVyeShxdWVyeXN0cmluZywgZnVuY3Rpb24oZXJyb3IsIHJvd3MsIGZpZWxkcykge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZWplY3QoXCJmYWlsZWQgdG8gc2F2ZSBxdWVyeVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUocm93cyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "active-record.js"
      ],
      "names": [
        "pool",
        "require",
        "ActiveRecord",
        "conditions",
        "num",
        "promisify",
        "findQueryString",
        "tableName",
        "findBy",
        "values",
        "insertQueryString",
        "columns",
        "join",
        "querystring",
        "Promise",
        "resolve",
        "reject",
        "query",
        "error",
        "rows",
        "fields",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;AACA,IAAMA,IAAI,GAAGC,OAAO,CAAC,wBAAD,CAApB;;IAEqBC,Y;;;;;;;;;6BAiBR,CAER;;;8BAEQ,CAER;;;yBAtBWC,U,EAAYC,G,EAAK;AACzB,aAAO,KAAKC,SAAL,CAAe,KAAKC,eAAL,CAAqBH,UAArB,EAAiCC,GAAjC,CAAf,CAAP;AACH;;;oCAEsBD,U,EAAYC,G,EAAK;AACpC,qCAAwB,KAAKG,SAAL,EAAxB,oBAAkD,KAAKC,MAAL,CAAYL,UAAZ,EAAwBC,GAAxB,CAAlD;AACH;;;2BAEaK,M,EAAQ;AAClB,aAAO,KAAKJ,SAAL,CAAe,KAAKK,iBAAL,CAAuBD,MAAvB,CAAf,CAAP;AACH;;;sCAEwBA,M,EAAQ;AAC7B,mCAAsB,KAAKF,SAAL,EAAtB,eAA2C,KAAKI,OAAL,GAAeC,IAAf,CAAoB,IAApB,CAA3C,yBAAkFH,MAAM,CAACG,IAAP,CAAY,MAAZ,CAAlF;AACH;;;8BAUgBC,W,EAAa;AAC1B,aAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzChB,QAAAA,IAAI,CAACiB,KAAL,CAAWJ,WAAX,EAAwB,UAASK,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;AAClD,cAAIF,KAAJ,EAAW;AACPG,YAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,mBAAOF,MAAM,CAAC,sBAAD,CAAb;AACH;;AACD,iBAAOD,OAAO,CAACI,IAAD,CAAd;AACH,SAND;AAOH,OARM,CAAP;AASH",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "// const db = require('../config/db.config.js');\nconst pool = require('../config/db.config.js');\n\nexport default class ActiveRecord {\n    static find(conditions, num) {\n        return this.promisify(this.findQueryString(conditions, num));\n    }\n\n    static findQueryString(conditions, num) {\n        return `SELECT * FROM ${this.tableName()} WHERE ${this.findBy(conditions, num)}`;\n    }\n\n    static create(values) {\n        return this.promisify(this.insertQueryString(values));\n    }\n\n    static insertQueryString(values) {\n        return `INSERT INTO ${this.tableName()} (${this.columns().join(', ')}) VALUES (\"${values.join('\", \"')}\")`;\n    }\n\n    update() {\n\n    }\n\n    delete() {\n\n    }\n\n    static promisify(querystring) {\n        return new Promise(function(resolve, reject) {\n            pool.query(querystring, function(error, rows, fields) {\n                if (error) {\n                    console.log(error);\n                    return reject(\"failed to save query\");\n                }\n                return resolve(rows);\n            })\n        })\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558235965231
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config/db.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config/db.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config",
        "sourceFileName": "db.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @class\n * this class serves as setup to connect to mysql and create mysql pools.\n */\nvar mysql = require('promise-mysql');\n\nvar pool = mysql.createPool({\n  host: 'localhost',\n  user: 'root',\n  password: 'AA23@xla@VbQ239S1',\n  database: 'savvyAPP',\n  connectionLimit: 10\n});\nmodule.exports = pool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmNvbmZpZy5qcyJdLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsImNvbm5lY3Rpb25MaW1pdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFJQSxJQUFJQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQW5COztBQUVBLElBQU1DLElBQUksR0FBR0YsS0FBSyxDQUFDRyxVQUFOLENBQWlCO0FBQzFCQyxFQUFBQSxJQUFJLEVBQUUsV0FEb0I7QUFFMUJDLEVBQUFBLElBQUksRUFBRSxNQUZvQjtBQUcxQkMsRUFBQUEsUUFBUSxFQUFFLG1CQUhnQjtBQUkxQkMsRUFBQUEsUUFBUSxFQUFFLFVBSmdCO0FBSzFCQyxFQUFBQSxlQUFlLEVBQUU7QUFMUyxDQUFqQixDQUFiO0FBU0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsSUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9jb25maWciLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBjbGFzc1xuICogdGhpcyBjbGFzcyBzZXJ2ZXMgYXMgc2V0dXAgdG8gY29ubmVjdCB0byBteXNxbCBhbmQgY3JlYXRlIG15c3FsIHBvb2xzLlxuICovXG52YXIgbXlzcWwgPSByZXF1aXJlKCdwcm9taXNlLW15c3FsJyk7XG5cbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICB1c2VyOiAncm9vdCcsXG4gICAgcGFzc3dvcmQ6ICdBQTIzQHhsYUBWYlEyMzlTMScsXG4gICAgZGF0YWJhc2U6ICdzYXZ2eUFQUCcsXG4gICAgY29ubmVjdGlvbkxpbWl0OiAxMFxufSk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSBwb29sOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.config.js"
      ],
      "names": [
        "mysql",
        "require",
        "pool",
        "createPool",
        "host",
        "user",
        "password",
        "database",
        "connectionLimit",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;AAIA,IAAIA,KAAK,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAMC,IAAI,GAAGF,KAAK,CAACG,UAAN,CAAiB;AAC1BC,EAAAA,IAAI,EAAE,WADoB;AAE1BC,EAAAA,IAAI,EAAE,MAFoB;AAG1BC,EAAAA,QAAQ,EAAE,mBAHgB;AAI1BC,EAAAA,QAAQ,EAAE,UAJgB;AAK1BC,EAAAA,eAAe,EAAE;AALS,CAAjB,CAAb;AASAC,MAAM,CAACC,OAAP,GAAiBR,IAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/config",
      "sourcesContent": [
        "/**\n * @class\n * this class serves as setup to connect to mysql and create mysql pools.\n */\nvar mysql = require('promise-mysql');\n\nconst pool = mysql.createPool({\n    host: 'localhost',\n    user: 'root',\n    password: 'AA23@xla@VbQ239S1',\n    database: 'savvyAPP',\n    connectionLimit: 10\n});\n\n\nmodule.exports = pool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1557901332212
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "listing.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _listing_model = _interopRequireDefault(require(\"../models/listing_model\"));\n\nvar _listing_group_model = _interopRequireDefault(require(\"../models/listing_group_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/newListing', function (_ref, response) {\n  var body = _ref.body;\n  var time = new Date();\n  var group_id = time.getTime();\n  var username = body.username; // const values = Object.keys(body).reduce( \n  //     (memo, key) => [ ...memo, body[key] ],\n  //     [group_id]\n  // );\n\n  var values = [].concat(_toConsumableArray(Object.keys(body).map(function (key) {\n    return body[key];\n  })), [group_id]);\n\n  _listing_model[\"default\"].create(values).then(function (_) {\n    _listing_group_model[\"default\"].create([group_id, username]);\n  }, function (error) {\n    return response.sendStatus(422);\n  }).then(function (row) {\n    response.sendStatus(200);\n  }, function (error) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/search', function (request, response) {\n  _listing_model[\"default\"].find(request.query.like, 1).then(function (rows) {\n    response.send(rows);\n  }, function (error) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/searchbyusername', function (request, response) {\n  _listing_model[\"default\"].find(request.query.username, 2).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/searchbyid', function (request, response) {\n  _listing_model[\"default\"].find(request.query.id, 3).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmcuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlc3BvbnNlIiwiYm9keSIsInRpbWUiLCJEYXRlIiwiZ3JvdXBfaWQiLCJnZXRUaW1lIiwidXNlcm5hbWUiLCJ2YWx1ZXMiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwia2V5IiwiTGlzdGluZyIsImNyZWF0ZSIsInRoZW4iLCJfIiwiTGlzdGluZ0ciLCJlcnJvciIsInNlbmRTdGF0dXMiLCJyb3ciLCJnZXQiLCJyZXF1ZXN0IiwiZmluZCIsInF1ZXJ5IiwibGlrZSIsInJvd3MiLCJzZW5kIiwiaWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFDQTtBQUNBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjtBQUNJOzs7Ozs7QUFJSkYsTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXQyxVQUFYLENBQXNCO0FBQzdCQyxFQUFBQSxRQUFRLEVBQUU7QUFEbUIsQ0FBdEIsQ0FBWDtBQUdBTixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdHLElBQVgsRUFBWDtBQUNBUCxNQUFNLENBQUNHLEdBQVAsQ0FBVywrQkFBWDtBQUNBSCxNQUFNLENBQUNHLEdBQVAsQ0FBVyx1QkFBWDtBQUNBOzs7OztBQUlBSCxNQUFNLENBQUNRLElBQVAsQ0FBWSxhQUFaLEVBQTJCLGdCQUFXQyxRQUFYLEVBQXdCO0FBQUEsTUFBckJDLElBQXFCLFFBQXJCQSxJQUFxQjtBQUMvQyxNQUFNQyxJQUFJLEdBQUksSUFBSUMsSUFBSixFQUFkO0FBQ0EsTUFBTUMsUUFBUSxHQUFHRixJQUFJLENBQUNHLE9BQUwsRUFBakI7QUFGK0MsTUFHdkNDLFFBSHVDLEdBRzFCTCxJQUgwQixDQUd2Q0ssUUFIdUMsRUFLL0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUMsTUFBTSxnQ0FDTEMsTUFBTSxDQUFDQyxJQUFQLENBQVlSLElBQVosRUFBa0JTLEdBQWxCLENBQXNCLFVBQUFDLEdBQUc7QUFBQSxXQUFJVixJQUFJLENBQUNVLEdBQUQsQ0FBUjtBQUFBLEdBQXpCLENBREssSUFFUlAsUUFGUSxFQUFaOztBQUlBUSw0QkFBUUMsTUFBUixDQUFlTixNQUFmLEVBQ0tPLElBREwsQ0FDVSxVQUFBQyxDQUFDLEVBQUk7QUFDUEMsb0NBQVNILE1BQVQsQ0FBZ0IsQ0FBQ1QsUUFBRCxFQUFXRSxRQUFYLENBQWhCO0FBQ0gsR0FITCxFQUdPLFVBQUFXLEtBQUs7QUFBQSxXQUFJakIsUUFBUSxDQUFDa0IsVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIWixFQUlLSixJQUpMLENBSVUsVUFBQUssR0FBRyxFQUFJO0FBQ1RuQixJQUFBQSxRQUFRLENBQUNrQixVQUFULENBQW9CLEdBQXBCO0FBQ0gsR0FOTCxFQU1PLFVBQUFELEtBQUs7QUFBQSxXQUFJakIsUUFBUSxDQUFDa0IsVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FOWjtBQU9ILENBckJEO0FBdUJBM0IsTUFBTSxDQUFDNkIsR0FBUCxDQUFXLFNBQVgsRUFBc0IsVUFBQ0MsT0FBRCxFQUFVckIsUUFBVixFQUF1QjtBQUN6Q1ksNEJBQVFVLElBQVIsQ0FBYUQsT0FBTyxDQUFDRSxLQUFSLENBQWNDLElBQTNCLEVBQWlDLENBQWpDLEVBQ0tWLElBREwsQ0FDVSxVQUFBVyxJQUFJLEVBQUk7QUFDVnpCLElBQUFBLFFBQVEsQ0FBQzBCLElBQVQsQ0FBY0QsSUFBZDtBQUNILEdBSEwsRUFHTyxVQUFBUixLQUFLO0FBQUEsV0FBSWpCLFFBQVEsQ0FBQ2tCLFVBQVQsQ0FBb0IsR0FBcEIsQ0FBSjtBQUFBLEdBSFo7QUFJSCxDQUxEO0FBT0EzQixNQUFNLENBQUM2QixHQUFQLENBQVcsbUJBQVgsRUFBZ0MsVUFBQ0MsT0FBRCxFQUFVckIsUUFBVixFQUF1QjtBQUNuRFksNEJBQVFVLElBQVIsQ0FBYUQsT0FBTyxDQUFDRSxLQUFSLENBQWNqQixRQUEzQixFQUFxQyxDQUFyQyxFQUNLUSxJQURMLENBQ1UsVUFBQVcsSUFBSSxFQUFJO0FBQ1Z6QixJQUFBQSxRQUFRLENBQUMwQixJQUFULENBQWNELElBQWQ7QUFDSCxHQUhMLEVBR08sVUFBQVYsQ0FBQztBQUFBLFdBQUlmLFFBQVEsQ0FBQ2tCLFVBQVQsQ0FBb0IsR0FBcEIsQ0FBSjtBQUFBLEdBSFI7QUFJSCxDQUxEO0FBT0EzQixNQUFNLENBQUM2QixHQUFQLENBQVcsYUFBWCxFQUEwQixVQUFDQyxPQUFELEVBQVVyQixRQUFWLEVBQXVCO0FBQzdDWSw0QkFBUVUsSUFBUixDQUFhRCxPQUFPLENBQUNFLEtBQVIsQ0FBY0ksRUFBM0IsRUFBK0IsQ0FBL0IsRUFDS2IsSUFETCxDQUNVLFVBQUFXLElBQUksRUFBSTtBQUNWekIsSUFBQUEsUUFBUSxDQUFDMEIsSUFBVCxDQUFjRCxJQUFkO0FBQ0gsR0FITCxFQUdPLFVBQUFWLENBQUM7QUFBQSxXQUFJZixRQUFRLENBQUNrQixVQUFULENBQW9CLEdBQXBCLENBQUo7QUFBQSxHQUhSO0FBSUgsQ0FMRDtBQVFBVSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL2NvbnRyb2xsZXIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGVcbiAqIHRoaXMgY2xhc3Mgd2lsbCBiZSB1c2VkIHRvIGhhbmRsZSBnZXQgYW5kIHBvc3QgcmVxdWVzdCBmb3IgXG4gKiB1c2VyIHJlbGF0ZWQgaW5mby4gXG4gKi9cblxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSAnY29va2llLXBhcnNlcidcbmltcG9ydCBMaXN0aW5nIGZyb20gXCIuLi9tb2RlbHMvbGlzdGluZ19tb2RlbFwiO1xuaW1wb3J0IExpc3RpbmdHIGZyb20gXCIuLi9tb2RlbHMvbGlzdGluZ19ncm91cF9tb2RlbFwiO1xuLy9jcmVhdGUgcm91dGVyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG4gICAgLyoqIGJvZHlQYXJzZXIudXJsZW5jb2RlZChvcHRpb25zKVxuICAgICAqIFBhcnNlcyB0aGUgdGV4dCBhcyBVUkwgZW5jb2RlZCBkYXRhICh3aGljaCBpcyBob3cgYnJvd3NlcnMgdGVuZCB0byBzZW5kIGZvcm0gZGF0YSBmcm9tIHJlZ3VsYXIgZm9ybXMgc2V0IHRvIFBPU1QpXG4gICAgICogYW5kIGV4cG9zZXMgdGhlIHJlc3VsdGluZyBvYmplY3QgKGNvbnRhaW5pbmcgdGhlIGtleXMgYW5kIHZhbHVlcykgb24gcmVxdWVzdC5ib2R5XG4gICAgICovXG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbnJvdXRlci51c2UoY29va2llUGFyc2VyKCkpO1xucm91dGVyLnVzZShjb3JzKCkpO1xuLyoqXG4gKiBAcmV0dXJuXG4gKiBcbiAqL1xucm91dGVyLnBvc3QoJy9uZXdMaXN0aW5nJywgKHsgYm9keSB9LCByZXNwb25zZSkgPT4ge1xuICAgIGNvbnN0IHRpbWUgPSAobmV3IERhdGUoKSlcbiAgICBjb25zdCBncm91cF9pZCA9IHRpbWUuZ2V0VGltZSgpO1xuICAgIGNvbnN0IHsgdXNlcm5hbWUgfSA9IGJvZHk7XG5cbiAgICAvLyBjb25zdCB2YWx1ZXMgPSBPYmplY3Qua2V5cyhib2R5KS5yZWR1Y2UoIFxuICAgIC8vICAgICAobWVtbywga2V5KSA9PiBbIC4uLm1lbW8sIGJvZHlba2V5XSBdLFxuICAgIC8vICAgICBbZ3JvdXBfaWRdXG4gICAgLy8gKTtcblxuICAgIGNvbnN0IHZhbHVlcyA9IFtcbiAgICAgICAgLi4uT2JqZWN0LmtleXMoYm9keSkubWFwKGtleSA9PiBib2R5W2tleV0pLFxuICAgICAgICBncm91cF9pZFxuICAgIF07XG4gICAgTGlzdGluZy5jcmVhdGUodmFsdWVzKVxuICAgICAgICAudGhlbihfID0+IHtcbiAgICAgICAgICAgIExpc3RpbmdHLmNyZWF0ZShbZ3JvdXBfaWQsIHVzZXJuYW1lXSlcbiAgICAgICAgfSwgZXJyb3IgPT4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MjIpKVxuICAgICAgICAudGhlbihyb3cgPT4ge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZFN0YXR1cygyMDApXG4gICAgICAgIH0sIGVycm9yID0+IHJlc3BvbnNlLnNlbmRTdGF0dXMoNDIyKSk7XG59KTtcblxucm91dGVyLmdldCgnL3NlYXJjaCcsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIExpc3RpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5Lmxpa2UsIDEpXG4gICAgICAgIC50aGVuKHJvd3MgPT4ge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyb3dzKVxuICAgICAgICB9LCBlcnJvciA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xufSk7XG5cbnJvdXRlci5nZXQoJy9zZWFyY2hieXVzZXJuYW1lJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgTGlzdGluZy5maW5kKHJlcXVlc3QucXVlcnkudXNlcm5hbWUsIDIpXG4gICAgICAgIC50aGVuKHJvd3MgPT4ge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyb3dzKVxuICAgICAgICB9LCBfID0+IHJlc3BvbnNlLnNlbmRTdGF0dXMoNDIyKSk7XG59KVxuXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoYnlpZCcsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIExpc3RpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5LmlkLCAzKVxuICAgICAgICAudGhlbihyb3dzID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocm93cylcbiAgICAgICAgfSwgXyA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xufSlcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "listing.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "response",
        "body",
        "time",
        "Date",
        "group_id",
        "getTime",
        "username",
        "values",
        "Object",
        "keys",
        "map",
        "key",
        "Listing",
        "create",
        "then",
        "_",
        "ListingG",
        "error",
        "sendStatus",
        "row",
        "get",
        "request",
        "find",
        "query",
        "like",
        "rows",
        "send",
        "id",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AACA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,aAAZ,EAA2B,gBAAWC,QAAX,EAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAC/C,MAAMC,IAAI,GAAI,IAAIC,IAAJ,EAAd;AACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,EAAjB;AAF+C,MAGvCC,QAHuC,GAG1BL,IAH0B,CAGvCK,QAHuC,EAK/C;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,gCACLC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,GAAlB,CAAsB,UAAAC,GAAG;AAAA,WAAIV,IAAI,CAACU,GAAD,CAAR;AAAA,GAAzB,CADK,IAERP,QAFQ,EAAZ;;AAIAQ,4BAAQC,MAAR,CAAeN,MAAf,EACKO,IADL,CACU,UAAAC,CAAC,EAAI;AACPC,oCAASH,MAAT,CAAgB,CAACT,QAAD,EAAWE,QAAX,CAAhB;AACH,GAHL,EAGO,UAAAW,KAAK;AAAA,WAAIjB,QAAQ,CAACkB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHZ,EAIKJ,IAJL,CAIU,UAAAK,GAAG,EAAI;AACTnB,IAAAA,QAAQ,CAACkB,UAAT,CAAoB,GAApB;AACH,GANL,EAMO,UAAAD,KAAK;AAAA,WAAIjB,QAAQ,CAACkB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GANZ;AAOH,CArBD;AAuBA3B,MAAM,CAAC6B,GAAP,CAAW,SAAX,EAAsB,UAACC,OAAD,EAAUrB,QAAV,EAAuB;AACzCY,4BAAQU,IAAR,CAAaD,OAAO,CAACE,KAAR,CAAcC,IAA3B,EAAiC,CAAjC,EACKV,IADL,CACU,UAAAW,IAAI,EAAI;AACVzB,IAAAA,QAAQ,CAAC0B,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAR,KAAK;AAAA,WAAIjB,QAAQ,CAACkB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHZ;AAIH,CALD;AAOA3B,MAAM,CAAC6B,GAAP,CAAW,mBAAX,EAAgC,UAACC,OAAD,EAAUrB,QAAV,EAAuB;AACnDY,4BAAQU,IAAR,CAAaD,OAAO,CAACE,KAAR,CAAcjB,QAA3B,EAAqC,CAArC,EACKQ,IADL,CACU,UAAAW,IAAI,EAAI;AACVzB,IAAAA,QAAQ,CAAC0B,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAV,CAAC;AAAA,WAAIf,QAAQ,CAACkB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAOA3B,MAAM,CAAC6B,GAAP,CAAW,aAAX,EAA0B,UAACC,OAAD,EAAUrB,QAAV,EAAuB;AAC7CY,4BAAQU,IAAR,CAAaD,OAAO,CAACE,KAAR,CAAcI,EAA3B,EAA+B,CAA/B,EACKb,IADL,CACU,UAAAW,IAAI,EAAI;AACVzB,IAAAA,QAAQ,CAAC0B,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAV,CAAC;AAAA,WAAIf,QAAQ,CAACkB,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAQAU,MAAM,CAACC,OAAP,GAAiBtC,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Listing from \"../models/listing_model\";\nimport ListingG from \"../models/listing_group_model\";\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/newListing', ({ body }, response) => {\n    const time = (new Date())\n    const group_id = time.getTime();\n    const { username } = body;\n\n    // const values = Object.keys(body).reduce( \n    //     (memo, key) => [ ...memo, body[key] ],\n    //     [group_id]\n    // );\n\n    const values = [\n        ...Object.keys(body).map(key => body[key]),\n        group_id\n    ];\n    Listing.create(values)\n        .then(_ => {\n            ListingG.create([group_id, username])\n        }, error => response.sendStatus(422))\n        .then(row => {\n            response.sendStatus(200)\n        }, error => response.sendStatus(422));\n});\n\nrouter.get('/search', (request, response) => {\n    Listing.find(request.query.like, 1)\n        .then(rows => {\n            response.send(rows)\n        }, error => response.sendStatus(422));\n});\n\nrouter.get('/searchbyusername', (request, response) => {\n    Listing.find(request.query.username, 2)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\nrouter.get('/searchbyid', (request, response) => {\n    Listing.find(request.query.id, 3)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\n\nmodule.exports = router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558261779779
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "listing_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Listing =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Listing, _ActiveRecord);\n\n  function Listing() {\n    _classCallCheck(this, Listing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Listing).apply(this, arguments));\n  }\n\n  _createClass(Listing, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'listing';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['username', 'title', 'descr', 'listing_id'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"title LIKE '%\".concat(name, \"%' AND status = true ORDER BY date DESC\")];\n      } else if (num == 2) {\n        return [\"username = '\".concat(name, \"' ORDER BY date DESC\")];\n      } else if (num == 3) {\n        return [\"listing_id = '\".concat(name, \"'ORDER BY date DESC\")];\n      }\n    }\n  }]);\n\n  return Listing;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Listing;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfbW9kZWwuanMiXSwibmFtZXMiOlsiTGlzdGluZyIsIm5hbWUiLCJudW0iLCJBY3RpdmVSZWNvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsTzs7Ozs7Ozs7Ozs7OztnQ0FDRTtBQUNmLGFBQU8sU0FBUDtBQUNIOzs7OEJBRWdCO0FBQ2IsYUFBTyxDQUFDLFVBQUQsRUFBYSxPQUFiLEVBQXNCLE9BQXRCLEVBQStCLFlBQS9CLENBQVA7QUFDSCxLLENBR0Q7Ozs7MkJBQ2NDLEksRUFBTUMsRyxFQUFLO0FBQ3JCLFVBQUlBLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDVixlQUFPLHdCQUFpQkQsSUFBakIsNkNBQVA7QUFDSCxPQUZELE1BRU8sSUFBSUMsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNqQixlQUFPLHVCQUFnQkQsSUFBaEIsMEJBQVA7QUFDSCxPQUZNLE1BRUEsSUFBSUMsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNqQixlQUFPLHlCQUFrQkQsSUFBbEIseUJBQVA7QUFDSDtBQUNKOzs7O0VBbkJnQ0Usd0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aXZlUmVjb3JkIGZyb20gJy4vYWN0aXZlLXJlY29yZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RpbmcgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAnbGlzdGluZyc7XG4gICAgfVxuXG4gICAgc3RhdGljIGNvbHVtbnMoKSB7XG4gICAgICAgIHJldHVybiBbJ3VzZXJuYW1lJywgJ3RpdGxlJywgJ2Rlc2NyJywgJ2xpc3RpbmdfaWQnXTtcbiAgICB9XG5cblxuICAgIC8vIE90aGVyIExpc3Rpbmcgc3BlY2lmaWMgbG9naWMgZ29lcyBoZXJlXG4gICAgc3RhdGljIGZpbmRCeShuYW1lLCBudW0pIHtcbiAgICAgICAgaWYgKG51bSA9PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gW2B0aXRsZSBMSUtFICclJHtuYW1lfSUnIEFORCBzdGF0dXMgPSB0cnVlIE9SREVSIEJZIGRhdGUgREVTQ2BdO1xuICAgICAgICB9IGVsc2UgaWYgKG51bSA9PSAyKSB7XG4gICAgICAgICAgICByZXR1cm4gW2B1c2VybmFtZSA9ICcke25hbWV9JyBPUkRFUiBCWSBkYXRlIERFU0NgXVxuICAgICAgICB9IGVsc2UgaWYgKG51bSA9PSAzKSB7XG4gICAgICAgICAgICByZXR1cm4gW2BsaXN0aW5nX2lkID0gJyR7bmFtZX0nT1JERVIgQlkgZGF0ZSBERVNDYF1cbiAgICAgICAgfVxuICAgIH1cbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listing_model.js"
      ],
      "names": [
        "Listing",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;gCACE;AACf,aAAO,SAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,OAAb,EAAsB,OAAtB,EAA+B,YAA/B,CAAP;AACH,K,CAGD;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,wBAAiBD,IAAjB,6CAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,uBAAgBD,IAAhB,0BAAP;AACH,OAFM,MAEA,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,yBAAkBD,IAAlB,yBAAP;AACH;AACJ;;;;EAnBgCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Listing extends ActiveRecord {\n    static tableName() {\n        return 'listing';\n    }\n\n    static columns() {\n        return ['username', 'title', 'descr', 'listing_id'];\n    }\n\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`title LIKE '%${name}%' AND status = true ORDER BY date DESC`];\n        } else if (num == 2) {\n            return [`username = '${name}' ORDER BY date DESC`]\n        } else if (num == 3) {\n            return [`listing_id = '${name}'ORDER BY date DESC`]\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558263088683
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/listing_group_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "listing_group_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ListingGroup =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(ListingGroup, _ActiveRecord);\n\n  function ListingGroup() {\n    _classCallCheck(this, ListingGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListingGroup).apply(this, arguments));\n  }\n\n  _createClass(ListingGroup, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'listing_group';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['group_id', 'username'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"group_id = '\".concat(name, \"'\")];\n      } else if (num == 2) {\n        return [\"username = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return ListingGroup;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = ListingGroup;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfZ3JvdXBfbW9kZWwuanMiXSwibmFtZXMiOlsiTGlzdGluZ0dyb3VwIiwibmFtZSIsIm51bSIsIkFjdGl2ZVJlY29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxZOzs7Ozs7Ozs7Ozs7O2dDQUNFO0FBQ2YsYUFBTyxlQUFQO0FBQ0g7Ozs4QkFFZ0I7QUFDYixhQUFPLENBQUMsVUFBRCxFQUFhLFVBQWIsQ0FBUDtBQUNILEssQ0FFRDs7OzsyQkFDY0MsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8sdUJBQWdCRCxJQUFoQixPQUFQO0FBQ0gsT0FGRCxNQUVPLElBQUlDLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDakIsZUFBTyx1QkFBZ0JELElBQWhCLE9BQVA7QUFDSDtBQUNKOzs7O0VBaEJxQ0Usd0IiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWN0aXZlUmVjb3JkIGZyb20gJy4vYWN0aXZlLXJlY29yZCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RpbmdHcm91cCBleHRlbmRzIEFjdGl2ZVJlY29yZCB7XG4gICAgc3RhdGljIHRhYmxlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuICdsaXN0aW5nX2dyb3VwJztcbiAgICB9XG5cbiAgICBzdGF0aWMgY29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIFsnZ3JvdXBfaWQnLCAndXNlcm5hbWUnXTtcbiAgICB9XG5cbiAgICAvLyBPdGhlciBMaXN0aW5nIHNwZWNpZmljIGxvZ2ljIGdvZXMgaGVyZVxuICAgIHN0YXRpYyBmaW5kQnkobmFtZSwgbnVtKSB7XG4gICAgICAgIGlmIChudW0gPT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIFtgZ3JvdXBfaWQgPSAnJHtuYW1lfSdgXTtcbiAgICAgICAgfSBlbHNlIGlmIChudW0gPT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIFtgdXNlcm5hbWUgPSAnJHtuYW1lfSdgXVxuICAgICAgICB9XG4gICAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "listing_group_model.js"
      ],
      "names": [
        "ListingGroup",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;;;gCACE;AACf,aAAO,eAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,UAAD,EAAa,UAAb,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,uBAAgBD,IAAhB,OAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,uBAAgBD,IAAhB,OAAP;AACH;AACJ;;;;EAhBqCE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class ListingGroup extends ActiveRecord {\n    static tableName() {\n        return 'listing_group';\n    }\n\n    static columns() {\n        return ['group_id', 'username'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`group_id = '${name}'`];\n        } else if (num == 2) {\n            return [`username = '${name}'`]\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558235880717
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/listing_group.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "listing_group.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _listing_group_model = _interopRequireDefault(require(\"../models/listing_group_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/newMember', function (_ref, response) {\n  var body = _ref.body;\n\n  var values = _toConsumableArray(Object.keys(body).map(function (key) {\n    return body[key];\n  }));\n\n  _listing_group_model[\"default\"].create(values).then(function (_) {\n    response.sendStatus(200);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/getGroupByListingID', function (request, response) {\n  _listing_group_model[\"default\"].find(request.query.groupID, 1).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/searchGroupByUsername', function (request, response) {\n  _listing_group_model[\"default\"].find(request.query.username, 2).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RpbmdfZ3JvdXAuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwicG9zdCIsInJlc3BvbnNlIiwiYm9keSIsInZhbHVlcyIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJrZXkiLCJMaXN0aW5nR3JvdXAiLCJjcmVhdGUiLCJ0aGVuIiwiXyIsInNlbmRTdGF0dXMiLCJnZXQiLCJyZXF1ZXN0IiwiZmluZCIsInF1ZXJ5IiwiZ3JvdXBJRCIsInJvd3MiLCJzZW5kIiwidXNlcm5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQU1BOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7QUFFQTtBQUNBLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjtBQUNJOzs7Ozs7QUFJSkYsTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXQyxVQUFYLENBQXNCO0FBQzdCQyxFQUFBQSxRQUFRLEVBQUU7QUFEbUIsQ0FBdEIsQ0FBWDtBQUdBTixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdHLElBQVgsRUFBWDtBQUNBUCxNQUFNLENBQUNHLEdBQVAsQ0FBVywrQkFBWDtBQUNBSCxNQUFNLENBQUNHLEdBQVAsQ0FBVyx1QkFBWDtBQUNBOzs7OztBQUlBSCxNQUFNLENBQUNRLElBQVAsQ0FBWSxZQUFaLEVBQTBCLGdCQUFXQyxRQUFYLEVBQXdCO0FBQUEsTUFBckJDLElBQXFCLFFBQXJCQSxJQUFxQjs7QUFDOUMsTUFBTUMsTUFBTSxzQkFDTEMsTUFBTSxDQUFDQyxJQUFQLENBQVlILElBQVosRUFBa0JJLEdBQWxCLENBQXNCLFVBQUFDLEdBQUc7QUFBQSxXQUFJTCxJQUFJLENBQUNLLEdBQUQsQ0FBUjtBQUFBLEdBQXpCLENBREssQ0FBWjs7QUFHQUMsa0NBQWFDLE1BQWIsQ0FBb0JOLE1BQXBCLEVBQ0tPLElBREwsQ0FDVSxVQUFBQyxDQUFDLEVBQUk7QUFDUFYsSUFBQUEsUUFBUSxDQUFDVyxVQUFULENBQW9CLEdBQXBCO0FBQ0gsR0FITCxFQUdPLFVBQUFELENBQUM7QUFBQSxXQUFJVixRQUFRLENBQUNXLFVBQVQsQ0FBb0IsR0FBcEIsQ0FBSjtBQUFBLEdBSFI7QUFJSCxDQVJEO0FBVUFwQixNQUFNLENBQUNxQixHQUFQLENBQVcsc0JBQVgsRUFBbUMsVUFBQ0MsT0FBRCxFQUFVYixRQUFWLEVBQXVCO0FBQ3RETyxrQ0FBYU8sSUFBYixDQUFrQkQsT0FBTyxDQUFDRSxLQUFSLENBQWNDLE9BQWhDLEVBQXlDLENBQXpDLEVBQ0tQLElBREwsQ0FDVSxVQUFBUSxJQUFJLEVBQUk7QUFDVmpCLElBQUFBLFFBQVEsQ0FBQ2tCLElBQVQsQ0FBY0QsSUFBZDtBQUNILEdBSEwsRUFHTyxVQUFBUCxDQUFDO0FBQUEsV0FBSVYsUUFBUSxDQUFDVyxVQUFULENBQW9CLEdBQXBCLENBQUo7QUFBQSxHQUhSO0FBSUgsQ0FMRDtBQU9BcEIsTUFBTSxDQUFDcUIsR0FBUCxDQUFXLHdCQUFYLEVBQXFDLFVBQUNDLE9BQUQsRUFBVWIsUUFBVixFQUF1QjtBQUN4RE8sa0NBQWFPLElBQWIsQ0FBa0JELE9BQU8sQ0FBQ0UsS0FBUixDQUFjSSxRQUFoQyxFQUEwQyxDQUExQyxFQUNLVixJQURMLENBQ1UsVUFBQVEsSUFBSSxFQUFJO0FBQ1ZqQixJQUFBQSxRQUFRLENBQUNrQixJQUFULENBQWNELElBQWQ7QUFDSCxHQUhMLEVBR08sVUFBQVAsQ0FBQztBQUFBLFdBQUlWLFFBQVEsQ0FBQ1csVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIUjtBQUlILENBTEQ7QUFRQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCOUIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlXG4gKiB0aGlzIGNsYXNzIHdpbGwgYmUgdXNlZCB0byBoYW5kbGUgZ2V0IGFuZCBwb3N0IHJlcXVlc3QgZm9yIFxuICogdXNlciByZWxhdGVkIGluZm8uIFxuICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInXG5pbXBvcnQgTGlzdGluZ0dyb3VwIGZyb20gXCIuLi9tb2RlbHMvbGlzdGluZ19ncm91cF9tb2RlbFwiO1xuXG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXF1ZXN0LmJvZHlcbiAgICAgKi9cbnJvdXRlci51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgICBleHRlbmRlZDogZmFsc2Vcbn0pKTtcbnJvdXRlci51c2UoYm9keVBhcnNlci5qc29uKCkpO1xucm91dGVyLnVzZShjb29raWVQYXJzZXIoKSk7XG5yb3V0ZXIudXNlKGNvcnMoKSk7XG4vKipcbiAqIEByZXR1cm5cbiAqIFxuICovXG5yb3V0ZXIucG9zdCgnL25ld01lbWJlcicsICh7IGJvZHkgfSwgcmVzcG9uc2UpID0+IHtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXG4gICAgICAgIC4uLk9iamVjdC5rZXlzKGJvZHkpLm1hcChrZXkgPT4gYm9keVtrZXldKSxcbiAgICBdO1xuICAgIExpc3RpbmdHcm91cC5jcmVhdGUodmFsdWVzKVxuICAgICAgICAudGhlbihfID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmRTdGF0dXMoMjAwKVxuICAgICAgICB9LCBfID0+IHJlc3BvbnNlLnNlbmRTdGF0dXMoNDIyKSk7XG59KTtcblxucm91dGVyLmdldCgnL2dldEdyb3VwQnlMaXN0aW5nSUQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBMaXN0aW5nR3JvdXAuZmluZChyZXF1ZXN0LnF1ZXJ5Lmdyb3VwSUQsIDEpXG4gICAgICAgIC50aGVuKHJvd3MgPT4ge1xuICAgICAgICAgICAgcmVzcG9uc2Uuc2VuZChyb3dzKVxuICAgICAgICB9LCBfID0+IHJlc3BvbnNlLnNlbmRTdGF0dXMoNDIyKSk7XG59KVxuXG5yb3V0ZXIuZ2V0KCcvc2VhcmNoR3JvdXBCeVVzZXJuYW1lJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgTGlzdGluZ0dyb3VwLmZpbmQocmVxdWVzdC5xdWVyeS51c2VybmFtZSwgMilcbiAgICAgICAgLnRoZW4ocm93cyA9PiB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJvd3MpXG4gICAgICAgIH0sIF8gPT4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MjIpKTtcbn0pXG5cblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "listing_group.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "response",
        "body",
        "values",
        "Object",
        "keys",
        "map",
        "key",
        "ListingGroup",
        "create",
        "then",
        "_",
        "sendStatus",
        "get",
        "request",
        "find",
        "query",
        "groupID",
        "rows",
        "send",
        "username",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AACA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,YAAZ,EAA0B,gBAAWC,QAAX,EAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;;AAC9C,MAAMC,MAAM,sBACLC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAsB,UAAAC,GAAG;AAAA,WAAIL,IAAI,CAACK,GAAD,CAAR;AAAA,GAAzB,CADK,CAAZ;;AAGAC,kCAAaC,MAAb,CAAoBN,MAApB,EACKO,IADL,CACU,UAAAC,CAAC,EAAI;AACPV,IAAAA,QAAQ,CAACW,UAAT,CAAoB,GAApB;AACH,GAHL,EAGO,UAAAD,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CARD;AAUApB,MAAM,CAACqB,GAAP,CAAW,sBAAX,EAAmC,UAACC,OAAD,EAAUb,QAAV,EAAuB;AACtDO,kCAAaO,IAAb,CAAkBD,OAAO,CAACE,KAAR,CAAcC,OAAhC,EAAyC,CAAzC,EACKP,IADL,CACU,UAAAQ,IAAI,EAAI;AACVjB,IAAAA,QAAQ,CAACkB,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAP,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAOApB,MAAM,CAACqB,GAAP,CAAW,wBAAX,EAAqC,UAACC,OAAD,EAAUb,QAAV,EAAuB;AACxDO,kCAAaO,IAAb,CAAkBD,OAAO,CAACE,KAAR,CAAcI,QAAhC,EAA0C,CAA1C,EACKV,IADL,CACU,UAAAQ,IAAI,EAAI;AACVjB,IAAAA,QAAQ,CAACkB,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAP,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAQAS,MAAM,CAACC,OAAP,GAAiB9B,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport ListingGroup from \"../models/listing_group_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n/**\n * @return\n * \n */\nrouter.post('/newMember', ({ body }, response) => {\n    const values = [\n        ...Object.keys(body).map(key => body[key]),\n    ];\n    ListingGroup.create(values)\n        .then(_ => {\n            response.sendStatus(200)\n        }, _ => response.sendStatus(422));\n});\n\nrouter.get('/getGroupByListingID', (request, response) => {\n    ListingGroup.find(request.query.groupID, 1)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\nrouter.get('/searchGroupByUsername', (request, response) => {\n    ListingGroup.find(request.query.username, 2)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1558230311635
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/rating.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/rating.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "rating.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _rating_model = _interopRequireDefault(require(\"../models/rating_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on req.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\n/**\n * @return\n * \n */\n\nrouter.post('/rate', function (_ref, response) {\n  var body = _ref.body;\n\n  var values = _toConsumableArray(Object.keys(body).map(function (key) {\n    return body[key];\n  }));\n\n  _rating_model[\"default\"].create(values).then(function (_) {\n    response.sendStatus(200);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/searchRatingByUserRated', function (request, response) {\n  _rating_model[\"default\"].find(request.query.username, 1).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/searchRatingByUserRating', function (request, response) {\n  _rating_model[\"default\"].find(request.query.username, 2).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdGluZy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVzcG9uc2UiLCJib2R5IiwidmFsdWVzIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsImtleSIsIlJhdGluZyIsImNyZWF0ZSIsInRoZW4iLCJfIiwic2VuZFN0YXR1cyIsImdldCIsInJlcXVlc3QiLCJmaW5kIiwicXVlcnkiLCJ1c2VybmFtZSIsInJvd3MiLCJzZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFNQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUE7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFRQyxNQUFSLEVBQWY7QUFDSTs7Ozs7O0FBSUpGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0MsVUFBWCxDQUFzQjtBQUM3QkMsRUFBQUEsUUFBUSxFQUFFO0FBRG1CLENBQXRCLENBQVg7QUFHQU4sTUFBTSxDQUFDRyxHQUFQLENBQVdDLHVCQUFXRyxJQUFYLEVBQVg7QUFDQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsK0JBQVg7QUFDQUgsTUFBTSxDQUFDRyxHQUFQLENBQVcsdUJBQVg7QUFFQTs7Ozs7QUFJQUgsTUFBTSxDQUFDUSxJQUFQLENBQVksT0FBWixFQUFxQixnQkFBV0MsUUFBWCxFQUF3QjtBQUFBLE1BQXJCQyxJQUFxQixRQUFyQkEsSUFBcUI7O0FBQ3pDLE1BQU1DLE1BQU0sc0JBQ0xDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSCxJQUFaLEVBQWtCSSxHQUFsQixDQUFzQixVQUFBQyxHQUFHO0FBQUEsV0FBSUwsSUFBSSxDQUFDSyxHQUFELENBQVI7QUFBQSxHQUF6QixDQURLLENBQVo7O0FBR0FDLDJCQUFPQyxNQUFQLENBQWNOLE1BQWQsRUFDS08sSUFETCxDQUNVLFVBQUFDLENBQUMsRUFBSTtBQUNQVixJQUFBQSxRQUFRLENBQUNXLFVBQVQsQ0FBb0IsR0FBcEI7QUFDSCxHQUhMLEVBR08sVUFBQUQsQ0FBQztBQUFBLFdBQUlWLFFBQVEsQ0FBQ1csVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIUjtBQUtILENBVEQ7QUFXQXBCLE1BQU0sQ0FBQ3FCLEdBQVAsQ0FBVywwQkFBWCxFQUF1QyxVQUFDQyxPQUFELEVBQVViLFFBQVYsRUFBdUI7QUFDMURPLDJCQUFPTyxJQUFQLENBQVlELE9BQU8sQ0FBQ0UsS0FBUixDQUFjQyxRQUExQixFQUFvQyxDQUFwQyxFQUNLUCxJQURMLENBQ1UsVUFBQVEsSUFBSSxFQUFJO0FBQ1ZqQixJQUFBQSxRQUFRLENBQUNrQixJQUFULENBQWNELElBQWQ7QUFDSCxHQUhMLEVBR08sVUFBQVAsQ0FBQztBQUFBLFdBQUlWLFFBQVEsQ0FBQ1csVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIUjtBQUlILENBTEQ7QUFPQXBCLE1BQU0sQ0FBQ3FCLEdBQVAsQ0FBVywyQkFBWCxFQUF3QyxVQUFDQyxPQUFELEVBQVViLFFBQVYsRUFBdUI7QUFDM0RPLDJCQUFPTyxJQUFQLENBQVlELE9BQU8sQ0FBQ0UsS0FBUixDQUFjQyxRQUExQixFQUFvQyxDQUFwQyxFQUNLUCxJQURMLENBQ1UsVUFBQVEsSUFBSSxFQUFJO0FBQ1ZqQixJQUFBQSxRQUFRLENBQUNrQixJQUFULENBQWNELElBQWQ7QUFDSCxHQUhMLEVBR08sVUFBQVAsQ0FBQztBQUFBLFdBQUlWLFFBQVEsQ0FBQ1csVUFBVCxDQUFvQixHQUFwQixDQUFKO0FBQUEsR0FIUjtBQUlILENBTEQ7QUFTQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCN0IsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JhdWxzZXJyYW5vL0Rlc2t0b3AvU3ByaW5nMjAxOVNjaG9vbC9DU0M2NjggL3Rlcm0tcHJvamVjdC9naXQtbWFzdGVyL2JhY2tlbmQvdGVybS1wcm9qZWN0LWRpdnZ5LXRlYW0wMy9TYXZ2eUFQSS9jb250cm9sbGVyIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlXG4gKiB0aGlzIGNsYXNzIHdpbGwgYmUgdXNlZCB0byBoYW5kbGUgZ2V0IGFuZCBwb3N0IHJlcXVlc3QgZm9yIFxuICogdXNlciByZWxhdGVkIGluZm8uIFxuICovXG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcidcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInXG5pbXBvcnQgUmF0aW5nIGZyb20gXCIuLi9tb2RlbHMvcmF0aW5nX21vZGVsXCI7XG5cbi8vY3JlYXRlIHJvdXRlclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKVxuICAgIC8qKiBib2R5UGFyc2VyLnVybGVuY29kZWQob3B0aW9ucylcbiAgICAgKiBQYXJzZXMgdGhlIHRleHQgYXMgVVJMIGVuY29kZWQgZGF0YSAod2hpY2ggaXMgaG93IGJyb3dzZXJzIHRlbmQgdG8gc2VuZCBmb3JtIGRhdGEgZnJvbSByZWd1bGFyIGZvcm1zIHNldCB0byBQT1NUKVxuICAgICAqIGFuZCBleHBvc2VzIHRoZSByZXN1bHRpbmcgb2JqZWN0IChjb250YWluaW5nIHRoZSBrZXlzIGFuZCB2YWx1ZXMpIG9uIHJlcS5ib2R5XG4gICAgICovXG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7XG4gICAgZXh0ZW5kZWQ6IGZhbHNlXG59KSk7XG5yb3V0ZXIudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbnJvdXRlci51c2UoY29va2llUGFyc2VyKCkpO1xucm91dGVyLnVzZShjb3JzKCkpO1xuXG4vKipcbiAqIEByZXR1cm5cbiAqIFxuICovXG5yb3V0ZXIucG9zdCgnL3JhdGUnLCAoeyBib2R5IH0sIHJlc3BvbnNlKSA9PiB7XG4gICAgY29uc3QgdmFsdWVzID0gW1xuICAgICAgICAuLi5PYmplY3Qua2V5cyhib2R5KS5tYXAoa2V5ID0+IGJvZHlba2V5XSksXG4gICAgXTtcbiAgICBSYXRpbmcuY3JlYXRlKHZhbHVlcylcbiAgICAgICAgLnRoZW4oXyA9PiB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kU3RhdHVzKDIwMClcbiAgICAgICAgfSwgXyA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xuXG59KTtcblxucm91dGVyLmdldCgnL3NlYXJjaFJhdGluZ0J5VXNlclJhdGVkJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgUmF0aW5nLmZpbmQocmVxdWVzdC5xdWVyeS51c2VybmFtZSwgMSlcbiAgICAgICAgLnRoZW4ocm93cyA9PiB7XG4gICAgICAgICAgICByZXNwb25zZS5zZW5kKHJvd3MpXG4gICAgICAgIH0sIF8gPT4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MjIpKTtcbn0pXG5cbnJvdXRlci5nZXQoJy9zZWFyY2hSYXRpbmdCeVVzZXJSYXRpbmcnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICBSYXRpbmcuZmluZChyZXF1ZXN0LnF1ZXJ5LnVzZXJuYW1lLCAyKVxuICAgICAgICAudGhlbihyb3dzID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocm93cylcbiAgICAgICAgfSwgXyA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xufSlcblxuXG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "rating.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "response",
        "body",
        "values",
        "Object",
        "keys",
        "map",
        "key",
        "Rating",
        "create",
        "then",
        "_",
        "sendStatus",
        "get",
        "request",
        "find",
        "query",
        "username",
        "rows",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AAEA;;;;;AAIAH,MAAM,CAACQ,IAAP,CAAY,OAAZ,EAAqB,gBAAWC,QAAX,EAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;;AACzC,MAAMC,MAAM,sBACLC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAsB,UAAAC,GAAG;AAAA,WAAIL,IAAI,CAACK,GAAD,CAAR;AAAA,GAAzB,CADK,CAAZ;;AAGAC,2BAAOC,MAAP,CAAcN,MAAd,EACKO,IADL,CACU,UAAAC,CAAC,EAAI;AACPV,IAAAA,QAAQ,CAACW,UAAT,CAAoB,GAApB;AACH,GAHL,EAGO,UAAAD,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAKH,CATD;AAWApB,MAAM,CAACqB,GAAP,CAAW,0BAAX,EAAuC,UAACC,OAAD,EAAUb,QAAV,EAAuB;AAC1DO,2BAAOO,IAAP,CAAYD,OAAO,CAACE,KAAR,CAAcC,QAA1B,EAAoC,CAApC,EACKP,IADL,CACU,UAAAQ,IAAI,EAAI;AACVjB,IAAAA,QAAQ,CAACkB,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAP,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAOApB,MAAM,CAACqB,GAAP,CAAW,2BAAX,EAAwC,UAACC,OAAD,EAAUb,QAAV,EAAuB;AAC3DO,2BAAOO,IAAP,CAAYD,OAAO,CAACE,KAAR,CAAcC,QAA1B,EAAoC,CAApC,EACKP,IADL,CACU,UAAAQ,IAAI,EAAI;AACVjB,IAAAA,QAAQ,CAACkB,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAP,CAAC;AAAA,WAAIV,QAAQ,CAACW,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AASAQ,MAAM,CAACC,OAAP,GAAiB7B,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Rating from \"../models/rating_model\";\n\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on req.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n\n/**\n * @return\n * \n */\nrouter.post('/rate', ({ body }, response) => {\n    const values = [\n        ...Object.keys(body).map(key => body[key]),\n    ];\n    Rating.create(values)\n        .then(_ => {\n            response.sendStatus(200)\n        }, _ => response.sendStatus(422));\n\n});\n\nrouter.get('/searchRatingByUserRated', (request, response) => {\n    Rating.find(request.query.username, 1)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\nrouter.get('/searchRatingByUserRating', (request, response) => {\n    Rating.find(request.query.username, 2)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\n\n\nmodule.exports = router"
      ]
    },
    "sourceType": "script",
    "mtime": 1558231150994
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/rating_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "rating_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Rating =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Rating, _ActiveRecord);\n\n  function Rating() {\n    _classCallCheck(this, Rating);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Rating).apply(this, arguments));\n  }\n\n  _createClass(Rating, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'rating';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['rating', 'user_rated', 'user_rating', 'comments'];\n    }\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"user_rated = '\".concat(name, \"' ORDER BY date DESC\")];\n      } else if (num == 2) {\n        return [\"user_rating = '\".concat(name, \"'ORDER BY date DESC\")];\n      }\n    }\n  }]);\n\n  return Rating;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Rating;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdGluZ19tb2RlbC5qcyJdLCJuYW1lcyI6WyJSYXRpbmciLCJuYW1lIiwibnVtIiwiQWN0aXZlUmVjb3JkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLE07Ozs7Ozs7Ozs7Ozs7Z0NBQ0U7QUFDZixhQUFPLFFBQVA7QUFDSDs7OzhCQUVnQjtBQUNiLGFBQU8sQ0FBQyxRQUFELEVBQVcsWUFBWCxFQUF5QixhQUF6QixFQUF3QyxVQUF4QyxDQUFQO0FBQ0g7OzsyQkFFYUMsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8seUJBQWtCRCxJQUFsQiwwQkFBUDtBQUNILE9BRkQsTUFFTyxJQUFJQyxHQUFHLElBQUksQ0FBWCxFQUFjO0FBQ2pCLGVBQU8sMEJBQW1CRCxJQUFuQix5QkFBUDtBQUNIO0FBQ0o7Ozs7RUFmK0JFLHdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGl2ZVJlY29yZCBmcm9tICcuL2FjdGl2ZS1yZWNvcmQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYXRpbmcgZXh0ZW5kcyBBY3RpdmVSZWNvcmQge1xuICAgIHN0YXRpYyB0YWJsZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiAncmF0aW5nJztcbiAgICB9XG5cbiAgICBzdGF0aWMgY29sdW1ucygpIHtcbiAgICAgICAgcmV0dXJuIFsncmF0aW5nJywgJ3VzZXJfcmF0ZWQnLCAndXNlcl9yYXRpbmcnLCAnY29tbWVudHMnXTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZmluZEJ5KG5hbWUsIG51bSkge1xuICAgICAgICBpZiAobnVtID09IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBbYHVzZXJfcmF0ZWQgPSAnJHtuYW1lfScgT1JERVIgQlkgZGF0ZSBERVNDYF1cbiAgICAgICAgfSBlbHNlIGlmIChudW0gPT0gMikge1xuICAgICAgICAgICAgcmV0dXJuIFtgdXNlcl9yYXRpbmcgPSAnJHtuYW1lfSdPUkRFUiBCWSBkYXRlIERFU0NgXVxuICAgICAgICB9XG4gICAgfVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "rating_model.js"
      ],
      "names": [
        "Rating",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,M;;;;;;;;;;;;;gCACE;AACf,aAAO,QAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,QAAD,EAAW,YAAX,EAAyB,aAAzB,EAAwC,UAAxC,CAAP;AACH;;;2BAEaC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,yBAAkBD,IAAlB,0BAAP;AACH,OAFD,MAEO,IAAIC,GAAG,IAAI,CAAX,EAAc;AACjB,eAAO,0BAAmBD,IAAnB,yBAAP;AACH;AACJ;;;;EAf+BE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Rating extends ActiveRecord {\n    static tableName() {\n        return 'rating';\n    }\n\n    static columns() {\n        return ['rating', 'user_rated', 'user_rating', 'comments'];\n    }\n\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`user_rated = '${name}' ORDER BY date DESC`]\n        } else if (num == 2) {\n            return [`user_rating = '${name}'ORDER BY date DESC`]\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1558263072110
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_rooms_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_rooms_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_rooms_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_rooms_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "chat_rooms_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar ChatRooms =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(ChatRooms, _ActiveRecord);\n\n  function ChatRooms() {\n    _classCallCheck(this, ChatRooms);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChatRooms).apply(this, arguments));\n  }\n\n  _createClass(ChatRooms, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'chat_rooms';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['chatID, status'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"status = true\"];\n      }\n    }\n  }]);\n\n  return ChatRooms;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = ChatRooms;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXRfcm9vbXNfbW9kZWwuanMiXSwibmFtZXMiOlsiQ2hhdFJvb21zIiwibmFtZSIsIm51bSIsIkFjdGl2ZVJlY29yZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRXFCQSxTOzs7Ozs7Ozs7Ozs7O2dDQUNFO0FBQ2YsYUFBTyxZQUFQO0FBQ0g7Ozs4QkFFZ0I7QUFDYixhQUFPLENBQUMsZ0JBQUQsQ0FBUDtBQUNILEssQ0FFRDs7OzsyQkFDY0MsSSxFQUFNQyxHLEVBQUs7QUFDckIsVUFBSUEsR0FBRyxJQUFJLENBQVgsRUFBYztBQUNWLGVBQU8saUJBQVA7QUFDSDtBQUNKOzs7O0VBZGtDQyx3QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvcmF1bHNlcnJhbm8vRGVza3RvcC9TcHJpbmcyMDE5U2Nob29sL0NTQzY2OCAvdGVybS1wcm9qZWN0L2dpdC1tYXN0ZXIvYmFja2VuZC90ZXJtLXByb2plY3QtZGl2dnktdGVhbTAzL1NhdnZ5QVBJL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBY3RpdmVSZWNvcmQgZnJvbSAnLi9hY3RpdmUtcmVjb3JkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhdFJvb21zIGV4dGVuZHMgQWN0aXZlUmVjb3JkIHtcbiAgICBzdGF0aWMgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ2NoYXRfcm9vbXMnO1xuICAgIH1cblxuICAgIHN0YXRpYyBjb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gWydjaGF0SUQsIHN0YXR1cyddO1xuICAgIH1cblxuICAgIC8vIE90aGVyIExpc3Rpbmcgc3BlY2lmaWMgbG9naWMgZ29lcyBoZXJlXG4gICAgc3RhdGljIGZpbmRCeShuYW1lLCBudW0pIHtcbiAgICAgICAgaWYgKG51bSA9PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gW2BzdGF0dXMgPSB0cnVlYF07XG4gICAgICAgIH1cbiAgICB9XG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "chat_rooms_model.js"
      ],
      "names": [
        "ChatRooms",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,S;;;;;;;;;;;;;gCACE;AACf,aAAO,YAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,gBAAD,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,iBAAP;AACH;AACJ;;;;EAdkCC,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class ChatRooms extends ActiveRecord {\n    static tableName() {\n        return 'chat_rooms';\n    }\n\n    static columns() {\n        return ['chatID, status'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`status = true`];\n        }\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1557802658696
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models/chat_model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
        "sourceFileName": "chat_model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _activeRecord = _interopRequireDefault(require(\"./active-record\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Chat =\n/*#__PURE__*/\nfunction (_ActiveRecord) {\n  _inherits(Chat, _ActiveRecord);\n\n  function Chat() {\n    _classCallCheck(this, Chat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chat).apply(this, arguments));\n  }\n\n  _createClass(Chat, null, [{\n    key: \"tableName\",\n    value: function tableName() {\n      return 'chat';\n    }\n  }, {\n    key: \"columns\",\n    value: function columns() {\n      return ['idchat', 'sender', 'message'];\n    } // Other Listing specific logic goes here\n\n  }, {\n    key: \"findBy\",\n    value: function findBy(name, num) {\n      if (num == 1) {\n        return [\"idchat = '\".concat(name, \"' ORDER BY date DESC\")];\n      } else if (num == 2) {\n        return [\"sender = '\".concat(name, \"'\")];\n      }\n    }\n  }]);\n\n  return Chat;\n}(_activeRecord[\"default\"]);\n\nexports[\"default\"] = Chat;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXRfbW9kZWwuanMiXSwibmFtZXMiOlsiQ2hhdCIsIm5hbWUiLCJudW0iLCJBY3RpdmVSZWNvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsSTs7Ozs7Ozs7Ozs7OztnQ0FDRTtBQUNmLGFBQU8sTUFBUDtBQUNIOzs7OEJBRWdCO0FBQ2IsYUFBTyxDQUFDLFFBQUQsRUFBVyxRQUFYLEVBQXFCLFNBQXJCLENBQVA7QUFDSCxLLENBRUQ7Ozs7MkJBQ2NDLEksRUFBTUMsRyxFQUFLO0FBQ3JCLFVBQUlBLEdBQUcsSUFBSSxDQUFYLEVBQWM7QUFDVixlQUFPLHFCQUFjRCxJQUFkLDBCQUFQO0FBQ0gsT0FGRCxNQUVNLElBQUdDLEdBQUcsSUFBSSxDQUFWLEVBQWE7QUFDbEIsZUFBTyxxQkFBY0QsSUFBZCxPQUFQO0FBQ0o7QUFDRjs7OztFQWhCK0JFLHdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFjdGl2ZVJlY29yZCBmcm9tICcuL2FjdGl2ZS1yZWNvcmQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGF0IGV4dGVuZHMgQWN0aXZlUmVjb3JkIHtcbiAgICBzdGF0aWMgdGFibGVOYW1lKCkge1xuICAgICAgICByZXR1cm4gJ2NoYXQnO1xuICAgIH1cblxuICAgIHN0YXRpYyBjb2x1bW5zKCkge1xuICAgICAgICByZXR1cm4gWydpZGNoYXQnLCAnc2VuZGVyJywgJ21lc3NhZ2UnXTtcbiAgICB9XG5cbiAgICAvLyBPdGhlciBMaXN0aW5nIHNwZWNpZmljIGxvZ2ljIGdvZXMgaGVyZVxuICAgIHN0YXRpYyBmaW5kQnkobmFtZSwgbnVtKSB7XG4gICAgICAgIGlmIChudW0gPT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIFtgaWRjaGF0ID0gJyR7bmFtZX0nIE9SREVSIEJZIGRhdGUgREVTQ2BdO1xuICAgICAgICB9ZWxzZSBpZihudW0gPT0gMikge1xuICAgICAgICAgcmV0dXJuIFtgc2VuZGVyID0gJyR7bmFtZX0nYF07XG4gICAgfVxuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "chat_model.js"
      ],
      "names": [
        "Chat",
        "name",
        "num",
        "ActiveRecord"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,I;;;;;;;;;;;;;gCACE;AACf,aAAO,MAAP;AACH;;;8BAEgB;AACb,aAAO,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CAAP;AACH,K,CAED;;;;2BACcC,I,EAAMC,G,EAAK;AACrB,UAAIA,GAAG,IAAI,CAAX,EAAc;AACV,eAAO,qBAAcD,IAAd,0BAAP;AACH,OAFD,MAEM,IAAGC,GAAG,IAAI,CAAV,EAAa;AAClB,eAAO,qBAAcD,IAAd,OAAP;AACJ;AACF;;;;EAhB+BE,wB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/models",
      "sourcesContent": [
        "import ActiveRecord from './active-record';\n\nexport default class Chat extends ActiveRecord {\n    static tableName() {\n        return 'chat';\n    }\n\n    static columns() {\n        return ['idchat', 'sender', 'message'];\n    }\n\n    // Other Listing specific logic goes here\n    static findBy(name, num) {\n        if (num == 1) {\n            return [`idchat = '${name}' ORDER BY date DESC`];\n        }else if(num == 2) {\n         return [`sender = '${name}'`];\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558300791569
  },
  "{\"sourceRoot\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"filename\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/chat.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/chat.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/chat.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller/chat.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
        "sourceFileName": "chat.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _chat_model = _interopRequireDefault(require(\"../models/chat_model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n//create router\nvar router = _express[\"default\"].Router();\n/** bodyParser.urlencoded(options)\n * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n * and exposes the resulting object (containing the keys and values) on request.body\n */\n\n\nrouter.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\nrouter.use(_bodyParser[\"default\"].json());\nrouter.use((0, _cookieParser[\"default\"])());\nrouter.use((0, _cors[\"default\"])());\nrouter.get('/chatbyID', function (request, response) {\n  _chat_model[\"default\"].find(request.query.id, 1).then(function (rows) {\n    response.send(rows);\n  }, function (error) {\n    return response.sendStatus(422);\n  });\n});\nrouter.get('/chatbyuser', function (request, response) {\n  _chat_model[\"default\"].find(request.query.username, 2).then(function (rows) {\n    response.send(rows);\n  }, function (_) {\n    return response.sendStatus(422);\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ2V0IiwicmVxdWVzdCIsInJlc3BvbnNlIiwiQ2hhdCIsImZpbmQiLCJxdWVyeSIsImlkIiwidGhlbiIsInJvd3MiLCJzZW5kIiwiZXJyb3IiLCJzZW5kU3RhdHVzIiwidXNlcm5hbWUiLCJfIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFNQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQVZBOzs7OztBQVdBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxvQkFBUUMsTUFBUixFQUFmO0FBQ0k7Ozs7OztBQUlKRixNQUFNLENBQUNHLEdBQVAsQ0FBV0MsdUJBQVdDLFVBQVgsQ0FBc0I7QUFDN0JDLEVBQUFBLFFBQVEsRUFBRTtBQURtQixDQUF0QixDQUFYO0FBR0FOLE1BQU0sQ0FBQ0csR0FBUCxDQUFXQyx1QkFBV0csSUFBWCxFQUFYO0FBQ0FQLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLCtCQUFYO0FBQ0FILE1BQU0sQ0FBQ0csR0FBUCxDQUFXLHVCQUFYO0FBRUFILE1BQU0sQ0FBQ1EsR0FBUCxDQUFXLFdBQVgsRUFBd0IsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQzNDQyx5QkFBS0MsSUFBTCxDQUFVSCxPQUFPLENBQUNJLEtBQVIsQ0FBY0MsRUFBeEIsRUFBNEIsQ0FBNUIsRUFDS0MsSUFETCxDQUNVLFVBQUFDLElBQUksRUFBSTtBQUNWTixJQUFBQSxRQUFRLENBQUNPLElBQVQsQ0FBY0QsSUFBZDtBQUNILEdBSEwsRUFHTyxVQUFBRSxLQUFLO0FBQUEsV0FBSVIsUUFBUSxDQUFDUyxVQUFULENBQW9CLEdBQXBCLENBQUo7QUFBQSxHQUhaO0FBSUgsQ0FMRDtBQU9BbkIsTUFBTSxDQUFDUSxHQUFQLENBQVcsYUFBWCxFQUEwQixVQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDN0NDLHlCQUFLQyxJQUFMLENBQVVILE9BQU8sQ0FBQ0ksS0FBUixDQUFjTyxRQUF4QixFQUFrQyxDQUFsQyxFQUNLTCxJQURMLENBQ1UsVUFBQUMsSUFBSSxFQUFJO0FBQ1ZOLElBQUFBLFFBQVEsQ0FBQ08sSUFBVCxDQUFjRCxJQUFkO0FBQ0gsR0FITCxFQUdPLFVBQUFLLENBQUM7QUFBQSxXQUFJWCxRQUFRLENBQUNTLFVBQVQsQ0FBb0IsR0FBcEIsQ0FBSjtBQUFBLEdBSFI7QUFJSCxDQUxEO0FBUUFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLE1BQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsc2VycmFuby9EZXNrdG9wL1NwcmluZzIwMTlTY2hvb2wvQ1NDNjY4IC90ZXJtLXByb2plY3QvZ2l0LW1hc3Rlci9iYWNrZW5kL3Rlcm0tcHJvamVjdC1kaXZ2eS10ZWFtMDMvU2F2dnlBUEkvY29udHJvbGxlciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZVxuICogdGhpcyBjbGFzcyB3aWxsIGJlIHVzZWQgdG8gaGFuZGxlIGdldCBhbmQgcG9zdCByZXF1ZXN0IGZvciBcbiAqIHVzZXIgcmVsYXRlZCBpbmZvLiBcbiAqL1xuXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJ1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJ1xuaW1wb3J0IENoYXQgZnJvbSBcIi4uL21vZGVscy9jaGF0X21vZGVsXCI7XG4vL2NyZWF0ZSByb3V0ZXJcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbiAgICAvKiogYm9keVBhcnNlci51cmxlbmNvZGVkKG9wdGlvbnMpXG4gICAgICogUGFyc2VzIHRoZSB0ZXh0IGFzIFVSTCBlbmNvZGVkIGRhdGEgKHdoaWNoIGlzIGhvdyBicm93c2VycyB0ZW5kIHRvIHNlbmQgZm9ybSBkYXRhIGZyb20gcmVndWxhciBmb3JtcyBzZXQgdG8gUE9TVClcbiAgICAgKiBhbmQgZXhwb3NlcyB0aGUgcmVzdWx0aW5nIG9iamVjdCAoY29udGFpbmluZyB0aGUga2V5cyBhbmQgdmFsdWVzKSBvbiByZXF1ZXN0LmJvZHlcbiAgICAgKi9cbnJvdXRlci51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHtcbiAgICBleHRlbmRlZDogZmFsc2Vcbn0pKTtcbnJvdXRlci51c2UoYm9keVBhcnNlci5qc29uKCkpO1xucm91dGVyLnVzZShjb29raWVQYXJzZXIoKSk7XG5yb3V0ZXIudXNlKGNvcnMoKSk7XG5cbnJvdXRlci5nZXQoJy9jaGF0YnlJRCcsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIENoYXQuZmluZChyZXF1ZXN0LnF1ZXJ5LmlkLCAxKVxuICAgICAgICAudGhlbihyb3dzID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocm93cylcbiAgICAgICAgfSwgZXJyb3IgPT4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MjIpKTtcbn0pO1xuXG5yb3V0ZXIuZ2V0KCcvY2hhdGJ5dXNlcicsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICAgIENoYXQuZmluZChyZXF1ZXN0LnF1ZXJ5LnVzZXJuYW1lLCAyKVxuICAgICAgICAudGhlbihyb3dzID0+IHtcbiAgICAgICAgICAgIHJlc3BvbnNlLnNlbmQocm93cylcbiAgICAgICAgfSwgXyA9PiByZXNwb25zZS5zZW5kU3RhdHVzKDQyMikpO1xufSlcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "chat.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "get",
        "request",
        "response",
        "Chat",
        "find",
        "query",
        "id",
        "then",
        "rows",
        "send",
        "error",
        "sendStatus",
        "username",
        "_",
        "module",
        "exports"
      ],
      "mappings": ";;AAMA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;;;;;AAWA;AACA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AACI;;;;;;AAIJF,MAAM,CAACG,GAAP,CAAWC,uBAAWC,UAAX,CAAsB;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAAtB,CAAX;AAGAN,MAAM,CAACG,GAAP,CAAWC,uBAAWG,IAAX,EAAX;AACAP,MAAM,CAACG,GAAP,CAAW,+BAAX;AACAH,MAAM,CAACG,GAAP,CAAW,uBAAX;AAEAH,MAAM,CAACQ,GAAP,CAAW,WAAX,EAAwB,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC3CC,yBAAKC,IAAL,CAAUH,OAAO,CAACI,KAAR,CAAcC,EAAxB,EAA4B,CAA5B,EACKC,IADL,CACU,UAAAC,IAAI,EAAI;AACVN,IAAAA,QAAQ,CAACO,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAE,KAAK;AAAA,WAAIR,QAAQ,CAACS,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHZ;AAIH,CALD;AAOAnB,MAAM,CAACQ,GAAP,CAAW,aAAX,EAA0B,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC7CC,yBAAKC,IAAL,CAAUH,OAAO,CAACI,KAAR,CAAcO,QAAxB,EAAkC,CAAlC,EACKL,IADL,CACU,UAAAC,IAAI,EAAI;AACVN,IAAAA,QAAQ,CAACO,IAAT,CAAcD,IAAd;AACH,GAHL,EAGO,UAAAK,CAAC;AAAA,WAAIX,QAAQ,CAACS,UAAT,CAAoB,GAApB,CAAJ;AAAA,GAHR;AAIH,CALD;AAQAG,MAAM,CAACC,OAAP,GAAiBvB,MAAjB",
      "sourceRoot": "/Users/raulserrano/Desktop/Spring2019School/CSC668 /term-project/git-master/backend/term-project-divvy-team03/SavvyAPI/controller",
      "sourcesContent": [
        "/**\n * @module\n * this class will be used to handle get and post request for \n * user related info. \n */\n\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport cookieParser from 'cookie-parser'\nimport Chat from \"../models/chat_model\";\n//create router\nconst router = express.Router()\n    /** bodyParser.urlencoded(options)\n     * Parses the text as URL encoded data (which is how browsers tend to send form data from regular forms set to POST)\n     * and exposes the resulting object (containing the keys and values) on request.body\n     */\nrouter.use(bodyParser.urlencoded({\n    extended: false\n}));\nrouter.use(bodyParser.json());\nrouter.use(cookieParser());\nrouter.use(cors());\n\nrouter.get('/chatbyID', (request, response) => {\n    Chat.find(request.query.id, 1)\n        .then(rows => {\n            response.send(rows)\n        }, error => response.sendStatus(422));\n});\n\nrouter.get('/chatbyuser', (request, response) => {\n    Chat.find(request.query.username, 2)\n        .then(rows => {\n            response.send(rows)\n        }, _ => response.sendStatus(422));\n})\n\n\nmodule.exports = router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558300791561
  }
}